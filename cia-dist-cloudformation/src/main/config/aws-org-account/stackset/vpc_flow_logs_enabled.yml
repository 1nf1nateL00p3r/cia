# https://asecure.cloud/a/vpc_flow_logs_enabled/
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  CustomConfigRule:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: vpc_flow_logs_enabled
      Description: A Config rule that checks that VPC Flow Logs is enabled at specific VPC.
      InputParameters: {}
      Scope:
        ComplianceResourceTypes:
          - 'AWS::EC2::VPC'
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier:
          'Fn::GetAtt':
            - LambdaFunction
            - Arn
        SourceDetails:
          - EventSource: aws.config
            MessageType: ConfigurationItemChangeNotification
          - EventSource: aws.config
            MessageType: OversizedConfigurationItemChangeNotification
    DependsOn: LambdaInvokePermissions
  LambdaInvokePermissions:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName:
        'Fn::GetAtt':
          - LambdaFunction
          - Arn
      Action: 'lambda:InvokeFunction'
      Principal: config.amazonaws.com
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: LambdaForvpc_flow_logs_enabled
      Handler: index.lambda_handler
      Role:
        'Fn::GetAtt':
          - LambdaIamRole
          - Arn
      Runtime: python3.6
      Code:
        ZipFile:
          'Fn::Join':
            - |+

            - - ''
              - "\t#"
              - >-
                # This file made available under CC0 1.0 Universal
                (https://creativecommons.org/publicdomain/zero/1.0/legalcode)
              - '#'
              - '# Ensure VPC Flow Logs is enabled.'
              - >-
                # Description: Checks that VPC Flow Logs is enabled at specific
                VPC
              - '#'
              - '# Trigger Type: Change Triggered'
              - '# Scope of Changes: EC2:VPC'
              - '# Required Resource Identifier: VPC ID'
              - '# Example Value: vpc-xxxxxxxx'
              - ''
              - import boto3
              - import json
              - ''
              - 'def evaluate_compliance(config_item, vpc_id):'
              - '    if (config_item[''resourceType''] != ''AWS::EC2::VPC''):'
              - '        return ''NOT_APPLICABLE'''
              - ''
              - '    elif is_flow_logs_enabled(vpc_id):'
              - '        return ''COMPLIANT'''
              - '    else:'
              - '        return ''NON_COMPLIANT'''
              - ''
              - 'def is_flow_logs_enabled(vpc_id):'
              - '    ec2 = boto3.client(''ec2'')'
              - '    response = ec2.describe_flow_logs('
              - '        Filter=['
              - '            {'
              - '                ''Name'': ''resource-id'','
              - '                ''Values'': ['
              - '                    vpc_id,'
              - '                ]'
              - '            },'
              - '        ],'
              - '    )'
              - '    if len(response[u''FlowLogs'']) != 0: return True'
              - ''
              - 'def lambda_handler(event, context):'
              - '    invoking_event = json.loads(event[''invokingEvent''])'
              - ''
              - '    compliance_value = ''NOT_APPLICABLE'''
              - ''
              - '    vpc_id = invoking_event[''configurationItem''][''resourceId'']'
              - '    compliance_value = evaluate_compliance('
              - '        invoking_event[''configurationItem''], vpc_id)'
              - ''
              - '    config = boto3.client(''config'')'
              - '    response = config.put_evaluations('
              - '       Evaluations=['
              - '           {'
              - '               ''ComplianceResourceType'': invoking_event[''configurationItem''][''resourceType''],'
              - '               ''ComplianceResourceId'': vpc_id,'
              - '               ''ComplianceType'': compliance_value,'
              - '               ''OrderingTimestamp'': invoking_event[''configurationItem''][''configurationItemCaptureTime'']'
              - '           },'
              - '       ],'
              - '       ResultToken=event[''resultToken''])'
              - '       '
      Timeout: 300
    DependsOn: LambdaIamRole
  LambdaIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: IAMRoleForvpc_flow_logs_enabled
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies: []
Parameters: {}
Metadata: {}
Conditions: {}