//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.24 at 11:40:02 PM CET 
//


package com.hack23.cia.model.external.riksdagen.dokumentlista.impl;

import java.io.Serializable;
import java.math.BigInteger;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.hack23.cia.model.common.api.ModelObject;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DocumentElement complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DocumentElement"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="traff" type="{http://www.w3.org/2001/XMLSchema}integer"/&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="domain" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="dokumentnamn" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="debattnamn" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="notisrubrik" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="notis" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="summary" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="database" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="kalla" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="lang" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="rm" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="relaterat_id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="typ" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="doktyp" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="subtyp" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="status" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="beteckning" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="tempbeteckning" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="organ" type="{http://www.w3.org/2001/XMLSchema}NCName"/&gt;
 *         &lt;element name="nummer" type="{http://www.w3.org/2001/XMLSchema}integer"/&gt;
 *         &lt;element name="titel" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="undertitel" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="datum" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="publicerad" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="systemdatum" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="kall_id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="dokumentformat" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="dokument_url_text" type="{http://www.w3.org/2001/XMLSchema}anyURI"/&gt;
 *         &lt;element name="dokument_url_html" type="{http://www.w3.org/2001/XMLSchema}anyURI"/&gt;
 *         &lt;element name="dokumentstatus_url_xml" type="{http://www.w3.org/2001/XMLSchema}anyURI"/&gt;
 *         &lt;element name="utskottsforslag_url_xml" type="{http://www.w3.org/2001/XMLSchema}anyURI"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DocumentElement", propOrder = {
    "hit",
    "id",
    "domainOrg",
    "documentName",
    "debateName",
    "noteTitle",
    "note",
    "summary",
    "databaseSource",
    "origin",
    "lang",
    "rm",
    "relatedId",
    "documentType",
    "docType",
    "subType",
    "status",
    "label",
    "tempLabel",
    "org",
    "numberValue",
    "title",
    "subTitle",
    "createdDate",
    "madePublicDate",
    "systemDate",
    "kallId",
    "documentFormat",
    "documentUrlText",
    "documentUrlHtml",
    "documentStatusUrlXml",
    "committeeReportUrlXml"
})
@Entity(name = "DocumentElement")
@Table(name = "DOCUMENT_ELEMENT")
@Inheritance(strategy = InheritanceType.JOINED)
public class DocumentElement
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    @XmlElement(name = "traff", required = true)
    protected BigInteger hit;
    @XmlElement(required = true)
    protected String id;
    @XmlElement(name = "domain", required = true)
    protected String domainOrg;
    @XmlElement(name = "dokumentnamn", required = true)
    protected String documentName;
    @XmlElement(name = "debattnamn", required = true)
    protected String debateName;
    @XmlElement(name = "notisrubrik", required = true)
    protected String noteTitle;
    @XmlElement(name = "notis", required = true)
    protected String note;
    @XmlElement(required = true)
    protected String summary;
    @XmlElement(name = "database", required = true)
    protected String databaseSource;
    @XmlElement(name = "kalla", required = true)
    protected String origin;
    @XmlElement(required = true)
    protected String lang;
    @XmlElement(required = true)
    protected String rm;
    @XmlElement(name = "relaterat_id", required = true)
    protected String relatedId;
    @XmlElement(name = "typ", required = true)
    protected String documentType;
    @XmlElement(name = "doktyp", required = true)
    protected String docType;
    @XmlElement(name = "subtyp", required = true)
    protected String subType;
    @XmlElement(required = true)
    protected String status;
    @XmlElement(name = "beteckning", required = true)
    protected String label;
    @XmlElement(name = "tempbeteckning", required = true)
    protected String tempLabel;
    @XmlElement(name = "organ", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String org;
    @XmlElement(name = "nummer", required = true)
    protected BigInteger numberValue;
    @XmlElement(name = "titel", required = true)
    protected String title;
    @XmlElement(name = "undertitel", required = true)
    protected String subTitle;
    @XmlElement(name = "datum", required = true)
    protected String createdDate;
    @XmlElement(name = "publicerad", required = true)
    protected String madePublicDate;
    @XmlElement(name = "systemdatum", required = true)
    protected String systemDate;
    @XmlElement(name = "kall_id", required = true)
    protected String kallId;
    @XmlElement(name = "dokumentformat", required = true)
    protected String documentFormat;
    @XmlElement(name = "dokument_url_text", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String documentUrlText;
    @XmlElement(name = "dokument_url_html", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String documentUrlHtml;
    @XmlElement(name = "dokumentstatus_url_xml", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String documentStatusUrlXml;
    @XmlElement(name = "utskottsforslag_url_xml", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String committeeReportUrlXml;

    /**
     * Gets the value of the hit property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "HIT", precision = 20, scale = 0)
    public BigInteger getHit() {
        return hit;
    }

    /**
     * Sets the value of the hit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHit(BigInteger value) {
        this.hit = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ID")
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the domainOrg property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOMAIN_ORG", length = 255)
    public String getDomainOrg() {
        return domainOrg;
    }

    /**
     * Sets the value of the domainOrg property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDomainOrg(String value) {
        this.domainOrg = value;
    }

    /**
     * Gets the value of the documentName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOCUMENT_NAME", length = 255)
    public String getDocumentName() {
        return documentName;
    }

    /**
     * Sets the value of the documentName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentName(String value) {
        this.documentName = value;
    }

    /**
     * Gets the value of the debateName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DEBATE_NAME", length = 255)
    public String getDebateName() {
        return debateName;
    }

    /**
     * Sets the value of the debateName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDebateName(String value) {
        this.debateName = value;
    }

    /**
     * Gets the value of the noteTitle property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOTE_TITLE", length = 255)
    public String getNoteTitle() {
        return noteTitle;
    }

    /**
     * Sets the value of the noteTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNoteTitle(String value) {
        this.noteTitle = value;
    }

    /**
     * Gets the value of the note property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOTE", length = 255)
    public String getNote() {
        return note;
    }

    /**
     * Sets the value of the note property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNote(String value) {
        this.note = value;
    }

    /**
     * Gets the value of the summary property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUMMARY", length = 255)
    public String getSummary() {
        return summary;
    }

    /**
     * Sets the value of the summary property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSummary(String value) {
        this.summary = value;
    }

    /**
     * Gets the value of the databaseSource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DATABASE_SOURCE", length = 255)
    public String getDatabaseSource() {
        return databaseSource;
    }

    /**
     * Sets the value of the databaseSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDatabaseSource(String value) {
        this.databaseSource = value;
    }

    /**
     * Gets the value of the origin property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ORIGIN", length = 255)
    public String getOrigin() {
        return origin;
    }

    /**
     * Sets the value of the origin property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrigin(String value) {
        this.origin = value;
    }

    /**
     * Gets the value of the lang property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LANG", length = 255)
    public String getLang() {
        return lang;
    }

    /**
     * Sets the value of the lang property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLang(String value) {
        this.lang = value;
    }

    /**
     * Gets the value of the rm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RM", length = 255)
    public String getRm() {
        return rm;
    }

    /**
     * Sets the value of the rm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRm(String value) {
        this.rm = value;
    }

    /**
     * Gets the value of the relatedId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RELATED_ID", length = 255)
    public String getRelatedId() {
        return relatedId;
    }

    /**
     * Sets the value of the relatedId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRelatedId(String value) {
        this.relatedId = value;
    }

    /**
     * Gets the value of the documentType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOCUMENT_TYPE", length = 255)
    public String getDocumentType() {
        return documentType;
    }

    /**
     * Sets the value of the documentType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentType(String value) {
        this.documentType = value;
    }

    /**
     * Gets the value of the docType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOC_TYPE", length = 255)
    public String getDocType() {
        return docType;
    }

    /**
     * Sets the value of the docType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocType(String value) {
        this.docType = value;
    }

    /**
     * Gets the value of the subType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUB_TYPE", length = 255)
    public String getSubType() {
        return subType;
    }

    /**
     * Sets the value of the subType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubType(String value) {
        this.subType = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STATUS", length = 255)
    public String getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatus(String value) {
        this.status = value;
    }

    /**
     * Gets the value of the label property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LABEL", length = 255)
    public String getLabel() {
        return label;
    }

    /**
     * Sets the value of the label property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLabel(String value) {
        this.label = value;
    }

    /**
     * Gets the value of the tempLabel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TEMP_LABEL", length = 255)
    public String getTempLabel() {
        return tempLabel;
    }

    /**
     * Sets the value of the tempLabel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTempLabel(String value) {
        this.tempLabel = value;
    }

    /**
     * Gets the value of the org property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ORG", length = 255)
    public String getOrg() {
        return org;
    }

    /**
     * Sets the value of the org property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrg(String value) {
        this.org = value;
    }

    /**
     * Gets the value of the numberValue property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMBER_VALUE", precision = 20, scale = 0)
    public BigInteger getNumberValue() {
        return numberValue;
    }

    /**
     * Sets the value of the numberValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberValue(BigInteger value) {
        this.numberValue = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TITLE", length = 65536)
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    /**
     * Gets the value of the subTitle property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUB_TITLE", length = 65536)
    public String getSubTitle() {
        return subTitle;
    }

    /**
     * Sets the value of the subTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubTitle(String value) {
        this.subTitle = value;
    }

    /**
     * Gets the value of the createdDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CREATED_DATE", length = 255)
    public String getCreatedDate() {
        return createdDate;
    }

    /**
     * Sets the value of the createdDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreatedDate(String value) {
        this.createdDate = value;
    }

    /**
     * Gets the value of the madePublicDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MADE_PUBLIC_DATE", length = 255)
    public String getMadePublicDate() {
        return madePublicDate;
    }

    /**
     * Sets the value of the madePublicDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMadePublicDate(String value) {
        this.madePublicDate = value;
    }

    /**
     * Gets the value of the systemDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SYSTEM_DATE", length = 255)
    public String getSystemDate() {
        return systemDate;
    }

    /**
     * Sets the value of the systemDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSystemDate(String value) {
        this.systemDate = value;
    }

    /**
     * Gets the value of the kallId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "KALL_ID", length = 255)
    public String getKallId() {
        return kallId;
    }

    /**
     * Sets the value of the kallId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKallId(String value) {
        this.kallId = value;
    }

    /**
     * Gets the value of the documentFormat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOCUMENT_FORMAT", length = 255)
    public String getDocumentFormat() {
        return documentFormat;
    }

    /**
     * Sets the value of the documentFormat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentFormat(String value) {
        this.documentFormat = value;
    }

    /**
     * Gets the value of the documentUrlText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOCUMENT_URL_TEXT")
    public String getDocumentUrlText() {
        return documentUrlText;
    }

    /**
     * Sets the value of the documentUrlText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentUrlText(String value) {
        this.documentUrlText = value;
    }

    /**
     * Gets the value of the documentUrlHtml property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOCUMENT_URL_HTML")
    public String getDocumentUrlHtml() {
        return documentUrlHtml;
    }

    /**
     * Sets the value of the documentUrlHtml property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentUrlHtml(String value) {
        this.documentUrlHtml = value;
    }

    /**
     * Gets the value of the documentStatusUrlXml property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOCUMENT_STATUS_URL_XML")
    public String getDocumentStatusUrlXml() {
        return documentStatusUrlXml;
    }

    /**
     * Sets the value of the documentStatusUrlXml property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentStatusUrlXml(String value) {
        this.documentStatusUrlXml = value;
    }

    /**
     * Gets the value of the committeeReportUrlXml property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COMMITTEE_REPORT_URL_XML")
    public String getCommitteeReportUrlXml() {
        return committeeReportUrlXml;
    }

    /**
     * Sets the value of the committeeReportUrlXml property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCommitteeReportUrlXml(String value) {
        this.committeeReportUrlXml = value;
    }

    public DocumentElement withHit(BigInteger value) {
        setHit(value);
        return this;
    }

    public DocumentElement withId(String value) {
        setId(value);
        return this;
    }

    public DocumentElement withDomainOrg(String value) {
        setDomainOrg(value);
        return this;
    }

    public DocumentElement withDocumentName(String value) {
        setDocumentName(value);
        return this;
    }

    public DocumentElement withDebateName(String value) {
        setDebateName(value);
        return this;
    }

    public DocumentElement withNoteTitle(String value) {
        setNoteTitle(value);
        return this;
    }

    public DocumentElement withNote(String value) {
        setNote(value);
        return this;
    }

    public DocumentElement withSummary(String value) {
        setSummary(value);
        return this;
    }

    public DocumentElement withDatabaseSource(String value) {
        setDatabaseSource(value);
        return this;
    }

    public DocumentElement withOrigin(String value) {
        setOrigin(value);
        return this;
    }

    public DocumentElement withLang(String value) {
        setLang(value);
        return this;
    }

    public DocumentElement withRm(String value) {
        setRm(value);
        return this;
    }

    public DocumentElement withRelatedId(String value) {
        setRelatedId(value);
        return this;
    }

    public DocumentElement withDocumentType(String value) {
        setDocumentType(value);
        return this;
    }

    public DocumentElement withDocType(String value) {
        setDocType(value);
        return this;
    }

    public DocumentElement withSubType(String value) {
        setSubType(value);
        return this;
    }

    public DocumentElement withStatus(String value) {
        setStatus(value);
        return this;
    }

    public DocumentElement withLabel(String value) {
        setLabel(value);
        return this;
    }

    public DocumentElement withTempLabel(String value) {
        setTempLabel(value);
        return this;
    }

    public DocumentElement withOrg(String value) {
        setOrg(value);
        return this;
    }

    public DocumentElement withNumberValue(BigInteger value) {
        setNumberValue(value);
        return this;
    }

    public DocumentElement withTitle(String value) {
        setTitle(value);
        return this;
    }

    public DocumentElement withSubTitle(String value) {
        setSubTitle(value);
        return this;
    }

    public DocumentElement withCreatedDate(String value) {
        setCreatedDate(value);
        return this;
    }

    public DocumentElement withMadePublicDate(String value) {
        setMadePublicDate(value);
        return this;
    }

    public DocumentElement withSystemDate(String value) {
        setSystemDate(value);
        return this;
    }

    public DocumentElement withKallId(String value) {
        setKallId(value);
        return this;
    }

    public DocumentElement withDocumentFormat(String value) {
        setDocumentFormat(value);
        return this;
    }

    public DocumentElement withDocumentUrlText(String value) {
        setDocumentUrlText(value);
        return this;
    }

    public DocumentElement withDocumentUrlHtml(String value) {
        setDocumentUrlHtml(value);
        return this;
    }

    public DocumentElement withDocumentStatusUrlXml(String value) {
        setDocumentStatusUrlXml(value);
        return this;
    }

    public DocumentElement withCommitteeReportUrlXml(String value) {
        setCommitteeReportUrlXml(value);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            BigInteger theHit;
            theHit = this.getHit();
            strategy.appendField(locator, this, "hit", buffer, theHit);
        }
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            String theDomainOrg;
            theDomainOrg = this.getDomainOrg();
            strategy.appendField(locator, this, "domainOrg", buffer, theDomainOrg);
        }
        {
            String theDocumentName;
            theDocumentName = this.getDocumentName();
            strategy.appendField(locator, this, "documentName", buffer, theDocumentName);
        }
        {
            String theDebateName;
            theDebateName = this.getDebateName();
            strategy.appendField(locator, this, "debateName", buffer, theDebateName);
        }
        {
            String theNoteTitle;
            theNoteTitle = this.getNoteTitle();
            strategy.appendField(locator, this, "noteTitle", buffer, theNoteTitle);
        }
        {
            String theNote;
            theNote = this.getNote();
            strategy.appendField(locator, this, "note", buffer, theNote);
        }
        {
            String theSummary;
            theSummary = this.getSummary();
            strategy.appendField(locator, this, "summary", buffer, theSummary);
        }
        {
            String theDatabaseSource;
            theDatabaseSource = this.getDatabaseSource();
            strategy.appendField(locator, this, "databaseSource", buffer, theDatabaseSource);
        }
        {
            String theOrigin;
            theOrigin = this.getOrigin();
            strategy.appendField(locator, this, "origin", buffer, theOrigin);
        }
        {
            String theLang;
            theLang = this.getLang();
            strategy.appendField(locator, this, "lang", buffer, theLang);
        }
        {
            String theRm;
            theRm = this.getRm();
            strategy.appendField(locator, this, "rm", buffer, theRm);
        }
        {
            String theRelatedId;
            theRelatedId = this.getRelatedId();
            strategy.appendField(locator, this, "relatedId", buffer, theRelatedId);
        }
        {
            String theDocumentType;
            theDocumentType = this.getDocumentType();
            strategy.appendField(locator, this, "documentType", buffer, theDocumentType);
        }
        {
            String theDocType;
            theDocType = this.getDocType();
            strategy.appendField(locator, this, "docType", buffer, theDocType);
        }
        {
            String theSubType;
            theSubType = this.getSubType();
            strategy.appendField(locator, this, "subType", buffer, theSubType);
        }
        {
            String theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            String theLabel;
            theLabel = this.getLabel();
            strategy.appendField(locator, this, "label", buffer, theLabel);
        }
        {
            String theTempLabel;
            theTempLabel = this.getTempLabel();
            strategy.appendField(locator, this, "tempLabel", buffer, theTempLabel);
        }
        {
            String theOrg;
            theOrg = this.getOrg();
            strategy.appendField(locator, this, "org", buffer, theOrg);
        }
        {
            BigInteger theNumberValue;
            theNumberValue = this.getNumberValue();
            strategy.appendField(locator, this, "numberValue", buffer, theNumberValue);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            strategy.appendField(locator, this, "title", buffer, theTitle);
        }
        {
            String theSubTitle;
            theSubTitle = this.getSubTitle();
            strategy.appendField(locator, this, "subTitle", buffer, theSubTitle);
        }
        {
            String theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            strategy.appendField(locator, this, "createdDate", buffer, theCreatedDate);
        }
        {
            String theMadePublicDate;
            theMadePublicDate = this.getMadePublicDate();
            strategy.appendField(locator, this, "madePublicDate", buffer, theMadePublicDate);
        }
        {
            String theSystemDate;
            theSystemDate = this.getSystemDate();
            strategy.appendField(locator, this, "systemDate", buffer, theSystemDate);
        }
        {
            String theKallId;
            theKallId = this.getKallId();
            strategy.appendField(locator, this, "kallId", buffer, theKallId);
        }
        {
            String theDocumentFormat;
            theDocumentFormat = this.getDocumentFormat();
            strategy.appendField(locator, this, "documentFormat", buffer, theDocumentFormat);
        }
        {
            String theDocumentUrlText;
            theDocumentUrlText = this.getDocumentUrlText();
            strategy.appendField(locator, this, "documentUrlText", buffer, theDocumentUrlText);
        }
        {
            String theDocumentUrlHtml;
            theDocumentUrlHtml = this.getDocumentUrlHtml();
            strategy.appendField(locator, this, "documentUrlHtml", buffer, theDocumentUrlHtml);
        }
        {
            String theDocumentStatusUrlXml;
            theDocumentStatusUrlXml = this.getDocumentStatusUrlXml();
            strategy.appendField(locator, this, "documentStatusUrlXml", buffer, theDocumentStatusUrlXml);
        }
        {
            String theCommitteeReportUrlXml;
            theCommitteeReportUrlXml = this.getCommitteeReportUrlXml();
            strategy.appendField(locator, this, "committeeReportUrlXml", buffer, theCommitteeReportUrlXml);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DocumentElement that = ((DocumentElement) object);
        {
            BigInteger lhsHit;
            lhsHit = this.getHit();
            BigInteger rhsHit;
            rhsHit = that.getHit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hit", lhsHit), LocatorUtils.property(thatLocator, "hit", rhsHit), lhsHit, rhsHit)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            String lhsDomainOrg;
            lhsDomainOrg = this.getDomainOrg();
            String rhsDomainOrg;
            rhsDomainOrg = that.getDomainOrg();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "domainOrg", lhsDomainOrg), LocatorUtils.property(thatLocator, "domainOrg", rhsDomainOrg), lhsDomainOrg, rhsDomainOrg)) {
                return false;
            }
        }
        {
            String lhsDocumentName;
            lhsDocumentName = this.getDocumentName();
            String rhsDocumentName;
            rhsDocumentName = that.getDocumentName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentName", lhsDocumentName), LocatorUtils.property(thatLocator, "documentName", rhsDocumentName), lhsDocumentName, rhsDocumentName)) {
                return false;
            }
        }
        {
            String lhsDebateName;
            lhsDebateName = this.getDebateName();
            String rhsDebateName;
            rhsDebateName = that.getDebateName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "debateName", lhsDebateName), LocatorUtils.property(thatLocator, "debateName", rhsDebateName), lhsDebateName, rhsDebateName)) {
                return false;
            }
        }
        {
            String lhsNoteTitle;
            lhsNoteTitle = this.getNoteTitle();
            String rhsNoteTitle;
            rhsNoteTitle = that.getNoteTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noteTitle", lhsNoteTitle), LocatorUtils.property(thatLocator, "noteTitle", rhsNoteTitle), lhsNoteTitle, rhsNoteTitle)) {
                return false;
            }
        }
        {
            String lhsNote;
            lhsNote = this.getNote();
            String rhsNote;
            rhsNote = that.getNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "note", lhsNote), LocatorUtils.property(thatLocator, "note", rhsNote), lhsNote, rhsNote)) {
                return false;
            }
        }
        {
            String lhsSummary;
            lhsSummary = this.getSummary();
            String rhsSummary;
            rhsSummary = that.getSummary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "summary", lhsSummary), LocatorUtils.property(thatLocator, "summary", rhsSummary), lhsSummary, rhsSummary)) {
                return false;
            }
        }
        {
            String lhsDatabaseSource;
            lhsDatabaseSource = this.getDatabaseSource();
            String rhsDatabaseSource;
            rhsDatabaseSource = that.getDatabaseSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "databaseSource", lhsDatabaseSource), LocatorUtils.property(thatLocator, "databaseSource", rhsDatabaseSource), lhsDatabaseSource, rhsDatabaseSource)) {
                return false;
            }
        }
        {
            String lhsOrigin;
            lhsOrigin = this.getOrigin();
            String rhsOrigin;
            rhsOrigin = that.getOrigin();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "origin", lhsOrigin), LocatorUtils.property(thatLocator, "origin", rhsOrigin), lhsOrigin, rhsOrigin)) {
                return false;
            }
        }
        {
            String lhsLang;
            lhsLang = this.getLang();
            String rhsLang;
            rhsLang = that.getLang();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lang", lhsLang), LocatorUtils.property(thatLocator, "lang", rhsLang), lhsLang, rhsLang)) {
                return false;
            }
        }
        {
            String lhsRm;
            lhsRm = this.getRm();
            String rhsRm;
            rhsRm = that.getRm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rm", lhsRm), LocatorUtils.property(thatLocator, "rm", rhsRm), lhsRm, rhsRm)) {
                return false;
            }
        }
        {
            String lhsRelatedId;
            lhsRelatedId = this.getRelatedId();
            String rhsRelatedId;
            rhsRelatedId = that.getRelatedId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relatedId", lhsRelatedId), LocatorUtils.property(thatLocator, "relatedId", rhsRelatedId), lhsRelatedId, rhsRelatedId)) {
                return false;
            }
        }
        {
            String lhsDocumentType;
            lhsDocumentType = this.getDocumentType();
            String rhsDocumentType;
            rhsDocumentType = that.getDocumentType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentType", lhsDocumentType), LocatorUtils.property(thatLocator, "documentType", rhsDocumentType), lhsDocumentType, rhsDocumentType)) {
                return false;
            }
        }
        {
            String lhsDocType;
            lhsDocType = this.getDocType();
            String rhsDocType;
            rhsDocType = that.getDocType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docType", lhsDocType), LocatorUtils.property(thatLocator, "docType", rhsDocType), lhsDocType, rhsDocType)) {
                return false;
            }
        }
        {
            String lhsSubType;
            lhsSubType = this.getSubType();
            String rhsSubType;
            rhsSubType = that.getSubType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subType", lhsSubType), LocatorUtils.property(thatLocator, "subType", rhsSubType), lhsSubType, rhsSubType)) {
                return false;
            }
        }
        {
            String lhsStatus;
            lhsStatus = this.getStatus();
            String rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            String lhsLabel;
            lhsLabel = this.getLabel();
            String rhsLabel;
            rhsLabel = that.getLabel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "label", lhsLabel), LocatorUtils.property(thatLocator, "label", rhsLabel), lhsLabel, rhsLabel)) {
                return false;
            }
        }
        {
            String lhsTempLabel;
            lhsTempLabel = this.getTempLabel();
            String rhsTempLabel;
            rhsTempLabel = that.getTempLabel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tempLabel", lhsTempLabel), LocatorUtils.property(thatLocator, "tempLabel", rhsTempLabel), lhsTempLabel, rhsTempLabel)) {
                return false;
            }
        }
        {
            String lhsOrg;
            lhsOrg = this.getOrg();
            String rhsOrg;
            rhsOrg = that.getOrg();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "org", lhsOrg), LocatorUtils.property(thatLocator, "org", rhsOrg), lhsOrg, rhsOrg)) {
                return false;
            }
        }
        {
            BigInteger lhsNumberValue;
            lhsNumberValue = this.getNumberValue();
            BigInteger rhsNumberValue;
            rhsNumberValue = that.getNumberValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberValue", lhsNumberValue), LocatorUtils.property(thatLocator, "numberValue", rhsNumberValue), lhsNumberValue, rhsNumberValue)) {
                return false;
            }
        }
        {
            String lhsTitle;
            lhsTitle = this.getTitle();
            String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        {
            String lhsSubTitle;
            lhsSubTitle = this.getSubTitle();
            String rhsSubTitle;
            rhsSubTitle = that.getSubTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subTitle", lhsSubTitle), LocatorUtils.property(thatLocator, "subTitle", rhsSubTitle), lhsSubTitle, rhsSubTitle)) {
                return false;
            }
        }
        {
            String lhsCreatedDate;
            lhsCreatedDate = this.getCreatedDate();
            String rhsCreatedDate;
            rhsCreatedDate = that.getCreatedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdDate", lhsCreatedDate), LocatorUtils.property(thatLocator, "createdDate", rhsCreatedDate), lhsCreatedDate, rhsCreatedDate)) {
                return false;
            }
        }
        {
            String lhsMadePublicDate;
            lhsMadePublicDate = this.getMadePublicDate();
            String rhsMadePublicDate;
            rhsMadePublicDate = that.getMadePublicDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "madePublicDate", lhsMadePublicDate), LocatorUtils.property(thatLocator, "madePublicDate", rhsMadePublicDate), lhsMadePublicDate, rhsMadePublicDate)) {
                return false;
            }
        }
        {
            String lhsSystemDate;
            lhsSystemDate = this.getSystemDate();
            String rhsSystemDate;
            rhsSystemDate = that.getSystemDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "systemDate", lhsSystemDate), LocatorUtils.property(thatLocator, "systemDate", rhsSystemDate), lhsSystemDate, rhsSystemDate)) {
                return false;
            }
        }
        {
            String lhsKallId;
            lhsKallId = this.getKallId();
            String rhsKallId;
            rhsKallId = that.getKallId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kallId", lhsKallId), LocatorUtils.property(thatLocator, "kallId", rhsKallId), lhsKallId, rhsKallId)) {
                return false;
            }
        }
        {
            String lhsDocumentFormat;
            lhsDocumentFormat = this.getDocumentFormat();
            String rhsDocumentFormat;
            rhsDocumentFormat = that.getDocumentFormat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentFormat", lhsDocumentFormat), LocatorUtils.property(thatLocator, "documentFormat", rhsDocumentFormat), lhsDocumentFormat, rhsDocumentFormat)) {
                return false;
            }
        }
        {
            String lhsDocumentUrlText;
            lhsDocumentUrlText = this.getDocumentUrlText();
            String rhsDocumentUrlText;
            rhsDocumentUrlText = that.getDocumentUrlText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentUrlText", lhsDocumentUrlText), LocatorUtils.property(thatLocator, "documentUrlText", rhsDocumentUrlText), lhsDocumentUrlText, rhsDocumentUrlText)) {
                return false;
            }
        }
        {
            String lhsDocumentUrlHtml;
            lhsDocumentUrlHtml = this.getDocumentUrlHtml();
            String rhsDocumentUrlHtml;
            rhsDocumentUrlHtml = that.getDocumentUrlHtml();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentUrlHtml", lhsDocumentUrlHtml), LocatorUtils.property(thatLocator, "documentUrlHtml", rhsDocumentUrlHtml), lhsDocumentUrlHtml, rhsDocumentUrlHtml)) {
                return false;
            }
        }
        {
            String lhsDocumentStatusUrlXml;
            lhsDocumentStatusUrlXml = this.getDocumentStatusUrlXml();
            String rhsDocumentStatusUrlXml;
            rhsDocumentStatusUrlXml = that.getDocumentStatusUrlXml();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentStatusUrlXml", lhsDocumentStatusUrlXml), LocatorUtils.property(thatLocator, "documentStatusUrlXml", rhsDocumentStatusUrlXml), lhsDocumentStatusUrlXml, rhsDocumentStatusUrlXml)) {
                return false;
            }
        }
        {
            String lhsCommitteeReportUrlXml;
            lhsCommitteeReportUrlXml = this.getCommitteeReportUrlXml();
            String rhsCommitteeReportUrlXml;
            rhsCommitteeReportUrlXml = that.getCommitteeReportUrlXml();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "committeeReportUrlXml", lhsCommitteeReportUrlXml), LocatorUtils.property(thatLocator, "committeeReportUrlXml", rhsCommitteeReportUrlXml), lhsCommitteeReportUrlXml, rhsCommitteeReportUrlXml)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            BigInteger theHit;
            theHit = this.getHit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hit", theHit), currentHashCode, theHit);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            String theDomainOrg;
            theDomainOrg = this.getDomainOrg();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "domainOrg", theDomainOrg), currentHashCode, theDomainOrg);
        }
        {
            String theDocumentName;
            theDocumentName = this.getDocumentName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentName", theDocumentName), currentHashCode, theDocumentName);
        }
        {
            String theDebateName;
            theDebateName = this.getDebateName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "debateName", theDebateName), currentHashCode, theDebateName);
        }
        {
            String theNoteTitle;
            theNoteTitle = this.getNoteTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noteTitle", theNoteTitle), currentHashCode, theNoteTitle);
        }
        {
            String theNote;
            theNote = this.getNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "note", theNote), currentHashCode, theNote);
        }
        {
            String theSummary;
            theSummary = this.getSummary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "summary", theSummary), currentHashCode, theSummary);
        }
        {
            String theDatabaseSource;
            theDatabaseSource = this.getDatabaseSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "databaseSource", theDatabaseSource), currentHashCode, theDatabaseSource);
        }
        {
            String theOrigin;
            theOrigin = this.getOrigin();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "origin", theOrigin), currentHashCode, theOrigin);
        }
        {
            String theLang;
            theLang = this.getLang();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lang", theLang), currentHashCode, theLang);
        }
        {
            String theRm;
            theRm = this.getRm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rm", theRm), currentHashCode, theRm);
        }
        {
            String theRelatedId;
            theRelatedId = this.getRelatedId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relatedId", theRelatedId), currentHashCode, theRelatedId);
        }
        {
            String theDocumentType;
            theDocumentType = this.getDocumentType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentType", theDocumentType), currentHashCode, theDocumentType);
        }
        {
            String theDocType;
            theDocType = this.getDocType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docType", theDocType), currentHashCode, theDocType);
        }
        {
            String theSubType;
            theSubType = this.getSubType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subType", theSubType), currentHashCode, theSubType);
        }
        {
            String theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            String theLabel;
            theLabel = this.getLabel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "label", theLabel), currentHashCode, theLabel);
        }
        {
            String theTempLabel;
            theTempLabel = this.getTempLabel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempLabel", theTempLabel), currentHashCode, theTempLabel);
        }
        {
            String theOrg;
            theOrg = this.getOrg();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "org", theOrg), currentHashCode, theOrg);
        }
        {
            BigInteger theNumberValue;
            theNumberValue = this.getNumberValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberValue", theNumberValue), currentHashCode, theNumberValue);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        {
            String theSubTitle;
            theSubTitle = this.getSubTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subTitle", theSubTitle), currentHashCode, theSubTitle);
        }
        {
            String theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdDate", theCreatedDate), currentHashCode, theCreatedDate);
        }
        {
            String theMadePublicDate;
            theMadePublicDate = this.getMadePublicDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "madePublicDate", theMadePublicDate), currentHashCode, theMadePublicDate);
        }
        {
            String theSystemDate;
            theSystemDate = this.getSystemDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "systemDate", theSystemDate), currentHashCode, theSystemDate);
        }
        {
            String theKallId;
            theKallId = this.getKallId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kallId", theKallId), currentHashCode, theKallId);
        }
        {
            String theDocumentFormat;
            theDocumentFormat = this.getDocumentFormat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentFormat", theDocumentFormat), currentHashCode, theDocumentFormat);
        }
        {
            String theDocumentUrlText;
            theDocumentUrlText = this.getDocumentUrlText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentUrlText", theDocumentUrlText), currentHashCode, theDocumentUrlText);
        }
        {
            String theDocumentUrlHtml;
            theDocumentUrlHtml = this.getDocumentUrlHtml();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentUrlHtml", theDocumentUrlHtml), currentHashCode, theDocumentUrlHtml);
        }
        {
            String theDocumentStatusUrlXml;
            theDocumentStatusUrlXml = this.getDocumentStatusUrlXml();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentStatusUrlXml", theDocumentStatusUrlXml), currentHashCode, theDocumentStatusUrlXml);
        }
        {
            String theCommitteeReportUrlXml;
            theCommitteeReportUrlXml = this.getCommitteeReportUrlXml();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "committeeReportUrlXml", theCommitteeReportUrlXml), currentHashCode, theCommitteeReportUrlXml);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
