//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.24 at 11:40:07 PM CET 
//


package com.hack23.cia.model.external.riksdagen.dokumentstatus.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import com.hack23.cia.model.common.api.ModelObject;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DocumentPersonReferenceContainer complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DocumentPersonReferenceContainer"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="intressent" type="{http://dokumentstatus.riksdagen.external.model.cia.hack23.com/impl}DocumentPersonReferenceData" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DocumentPersonReferenceContainer", propOrder = {
    "documentPersonReferenceList"
})
@Entity(name = "DocumentPersonReferenceContainer")
@Table(name = "DOCUMENT_PERSON_REFERENCE_CO_0")
@Inheritance(strategy = InheritanceType.JOINED)
public class DocumentPersonReferenceContainer
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    @XmlElement(name = "intressent", required = true)
    protected List<DocumentPersonReferenceData> documentPersonReferenceList;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the documentPersonReferenceList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the documentPersonReferenceList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDocumentPersonReferenceList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentPersonReferenceData }
     * 
     * 
     */
    @OneToMany(targetEntity = DocumentPersonReferenceData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DOCUMENT_PERSON_REFERENCE_LI_1")
    public List<DocumentPersonReferenceData> getDocumentPersonReferenceList() {
        if (documentPersonReferenceList == null) {
            documentPersonReferenceList = new ArrayList<DocumentPersonReferenceData>();
        }
        return this.documentPersonReferenceList;
    }

    /**
     * 
     * 
     */
    public void setDocumentPersonReferenceList(List<DocumentPersonReferenceData> documentPersonReferenceList) {
        this.documentPersonReferenceList = documentPersonReferenceList;
    }

    public DocumentPersonReferenceContainer withDocumentPersonReferenceList(DocumentPersonReferenceData... values) {
        if (values!= null) {
            for (DocumentPersonReferenceData value: values) {
                getDocumentPersonReferenceList().add(value);
            }
        }
        return this;
    }

    public DocumentPersonReferenceContainer withDocumentPersonReferenceList(Collection<DocumentPersonReferenceData> values) {
        if (values!= null) {
            getDocumentPersonReferenceList().addAll(values);
        }
        return this;
    }

    public DocumentPersonReferenceContainer withDocumentPersonReferenceList(List<DocumentPersonReferenceData> documentPersonReferenceList) {
        setDocumentPersonReferenceList(documentPersonReferenceList);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<DocumentPersonReferenceData> theDocumentPersonReferenceList;
            theDocumentPersonReferenceList = (((this.documentPersonReferenceList!= null)&&(!this.documentPersonReferenceList.isEmpty()))?this.getDocumentPersonReferenceList():null);
            strategy.appendField(locator, this, "documentPersonReferenceList", buffer, theDocumentPersonReferenceList);
        }
        return buffer;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DocumentPersonReferenceContainer that = ((DocumentPersonReferenceContainer) object);
        {
            List<DocumentPersonReferenceData> lhsDocumentPersonReferenceList;
            lhsDocumentPersonReferenceList = (((this.documentPersonReferenceList!= null)&&(!this.documentPersonReferenceList.isEmpty()))?this.getDocumentPersonReferenceList():null);
            List<DocumentPersonReferenceData> rhsDocumentPersonReferenceList;
            rhsDocumentPersonReferenceList = (((that.documentPersonReferenceList!= null)&&(!that.documentPersonReferenceList.isEmpty()))?that.getDocumentPersonReferenceList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentPersonReferenceList", lhsDocumentPersonReferenceList), LocatorUtils.property(thatLocator, "documentPersonReferenceList", rhsDocumentPersonReferenceList), lhsDocumentPersonReferenceList, rhsDocumentPersonReferenceList)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<DocumentPersonReferenceData> theDocumentPersonReferenceList;
            theDocumentPersonReferenceList = (((this.documentPersonReferenceList!= null)&&(!this.documentPersonReferenceList.isEmpty()))?this.getDocumentPersonReferenceList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentPersonReferenceList", theDocumentPersonReferenceList), currentHashCode, theDocumentPersonReferenceList);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
