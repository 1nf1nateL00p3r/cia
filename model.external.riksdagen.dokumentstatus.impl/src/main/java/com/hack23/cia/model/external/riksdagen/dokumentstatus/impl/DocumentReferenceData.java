//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.24 at 11:40:07 PM CET 
//


package com.hack23.cia.model.external.riksdagen.dokumentstatus.impl;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import com.hack23.cia.model.common.api.ModelObject;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DocumentReferenceData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DocumentReferenceData"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="referenstyp" type="{http://dokumentstatus.riksdagen.external.model.cia.hack23.com/impl}ReferenceType"/&gt;
 *         &lt;element name="ref_dokid" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="uppgift" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DocumentReferenceData", propOrder = {
    "referenceType",
    "referenceDocumentId",
    "detail"
})
@Entity(name = "DocumentReferenceData")
@Table(name = "DOCUMENT_REFERENCE_DATA")
@Inheritance(strategy = InheritanceType.JOINED)
public class DocumentReferenceData
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    @XmlElement(name = "referenstyp", required = true)
    @XmlSchemaType(name = "string")
    protected ReferenceType referenceType;
    @XmlElement(name = "ref_dokid", required = true)
    protected String referenceDocumentId;
    @XmlElement(name = "uppgift", required = true)
    protected String detail;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the referenceType property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    @Basic
    @Column(name = "REFERENCE_TYPE", length = 255)
    @Enumerated(EnumType.STRING)
    public ReferenceType getReferenceType() {
        return referenceType;
    }

    /**
     * Sets the value of the referenceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setReferenceType(ReferenceType value) {
        this.referenceType = value;
    }

    /**
     * Gets the value of the referenceDocumentId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "REFERENCE_DOCUMENT_ID", length = 255)
    public String getReferenceDocumentId() {
        return referenceDocumentId;
    }

    /**
     * Sets the value of the referenceDocumentId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReferenceDocumentId(String value) {
        this.referenceDocumentId = value;
    }

    /**
     * Gets the value of the detail property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DETAIL", length = 65536)
    public String getDetail() {
        return detail;
    }

    /**
     * Sets the value of the detail property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDetail(String value) {
        this.detail = value;
    }

    public DocumentReferenceData withReferenceType(ReferenceType value) {
        setReferenceType(value);
        return this;
    }

    public DocumentReferenceData withReferenceDocumentId(String value) {
        setReferenceDocumentId(value);
        return this;
    }

    public DocumentReferenceData withDetail(String value) {
        setDetail(value);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ReferenceType theReferenceType;
            theReferenceType = this.getReferenceType();
            strategy.appendField(locator, this, "referenceType", buffer, theReferenceType);
        }
        {
            String theReferenceDocumentId;
            theReferenceDocumentId = this.getReferenceDocumentId();
            strategy.appendField(locator, this, "referenceDocumentId", buffer, theReferenceDocumentId);
        }
        {
            String theDetail;
            theDetail = this.getDetail();
            strategy.appendField(locator, this, "detail", buffer, theDetail);
        }
        return buffer;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DocumentReferenceData that = ((DocumentReferenceData) object);
        {
            ReferenceType lhsReferenceType;
            lhsReferenceType = this.getReferenceType();
            ReferenceType rhsReferenceType;
            rhsReferenceType = that.getReferenceType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceType", lhsReferenceType), LocatorUtils.property(thatLocator, "referenceType", rhsReferenceType), lhsReferenceType, rhsReferenceType)) {
                return false;
            }
        }
        {
            String lhsReferenceDocumentId;
            lhsReferenceDocumentId = this.getReferenceDocumentId();
            String rhsReferenceDocumentId;
            rhsReferenceDocumentId = that.getReferenceDocumentId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceDocumentId", lhsReferenceDocumentId), LocatorUtils.property(thatLocator, "referenceDocumentId", rhsReferenceDocumentId), lhsReferenceDocumentId, rhsReferenceDocumentId)) {
                return false;
            }
        }
        {
            String lhsDetail;
            lhsDetail = this.getDetail();
            String rhsDetail;
            rhsDetail = that.getDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "detail", lhsDetail), LocatorUtils.property(thatLocator, "detail", rhsDetail), lhsDetail, rhsDetail)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ReferenceType theReferenceType;
            theReferenceType = this.getReferenceType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceType", theReferenceType), currentHashCode, theReferenceType);
        }
        {
            String theReferenceDocumentId;
            theReferenceDocumentId = this.getReferenceDocumentId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceDocumentId", theReferenceDocumentId), currentHashCode, theReferenceDocumentId);
        }
        {
            String theDetail;
            theDetail = this.getDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "detail", theDetail), currentHashCode, theDetail);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
