/*
 * Copyright 2010 James Pether Sörling
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *	$Id$
 *  $HeadURL$
*/
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.24 at 11:39:56 PM CET 
//


package com.hack23.cia.model.external.riksdagen.person.impl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * The Enum RoleStatus.
 */
@XmlType(name = "RoleStatus")
@XmlEnum
public enum RoleStatus {

    /** The utbildningsminister. */
    @XmlEnumValue("Utbildningsminister")
    UTBILDNINGSMINISTER("Utbildningsminister"),
    
    /** The suppleant. */
    @XmlEnumValue("Suppleant")
    SUPPLEANT("Suppleant"),
    
    /** The arbetsmarknadsminister. */
    @XmlEnumValue("Arbetsmarknadsminister")
    ARBETSMARKNADSMINISTER("Arbetsmarknadsminister"),
    
    /** The kvittningsman. */
    @XmlEnumValue("Kvittningsman")
    KVITTNINGSMAN("Kvittningsman"),
    
    /** The PERSONLI G ersättare. */
    @XmlEnumValue("Personlig ers\u00e4ttare")
    PERSONLIG_ERSÄTTARE("Personlig ers\u00e4ttare"),
    
    /** The migrations och arbetsmarknadsminister. */
    @XmlEnumValue("Migrations- och arbetsmarknadsminister")
    MIGRATIONS_OCH_ARBETSMARKNADSMINISTER("Migrations- och arbetsmarknadsminister"),
    
    /** The ORDFÖRANDE. */
    @XmlEnumValue("Ordf\u00f6rande")
    ORDFÖRANDE("Ordf\u00f6rande"),
    
    /** The STATSRÅD. */
    @XmlEnumValue("Statsr\u00e5d")
    STATSRÅD("Statsr\u00e5d"),
    
    /** The partiledare. */
    @XmlEnumValue("Partiledare")
    PARTILEDARE("Partiledare"),
    
    /** The STATSRÅDSERSÄTTARE. */
    @XmlEnumValue("Statsr\u00e5dsers\u00e4ttare")
    STATSRÅDSERSÄTTARE("Statsr\u00e5dsers\u00e4ttare"),
    
    /** The KLIMA T OC H miljöminister. */
    @XmlEnumValue("Klimat- och milj\u00f6minister")
    KLIMAT_OCH_MILJÖMINISTER("Klimat- och milj\u00f6minister"),
    
    /** The SAMHÄLLSBYGGNADSMINISTER. */
    @XmlEnumValue("Samh\u00e4llsbyggnadsminister")
    SAMHÄLLSBYGGNADSMINISTER("Samh\u00e4llsbyggnadsminister"),
    
    /** The NÄRING S OC H INNOVATIONSMINISTER. */
    @XmlEnumValue("N\u00e4rings- och innovationsminister")
    NÄRINGS_OCH_INNOVATIONSMINISTER("N\u00e4rings- och innovationsminister"),
    
    /** The talman. */
    @XmlEnumValue("Talman")
    TALMAN("Talman"),
    
    /** The andre vice talman. */
    @XmlEnumValue("Andre vice talman")
    ANDRE_VICE_TALMAN("Andre vice talman"),
    
    /** The SPRÅKRÖR. */
    @XmlEnumValue("Spr\u00e5kr\u00f6r")
    SPRÅKRÖR("Spr\u00e5kr\u00f6r"),
    
    /** The justitie och migrationsminister. */
    @XmlEnumValue("Justitie- och migrationsminister")
    JUSTITIE_OCH_MIGRATIONSMINISTER("Justitie- och migrationsminister"),
    
    /** The kulturminister. */
    @XmlEnumValue("Kulturminister")
    KULTURMINISTER("Kulturminister"),
    
    /** The TALMANSERSÄTTARE. */
    @XmlEnumValue("Talmansers\u00e4ttare")
    TALMANSERSÄTTARE("Talmansers\u00e4ttare"),
    
    /** The socialminister. */
    @XmlEnumValue("Socialminister")
    SOCIALMINISTER("Socialminister"),
    
    /** The NÄRINGSMINISTER. */
    @XmlEnumValue("N\u00e4ringsminister")
    NÄRINGSMINISTER("N\u00e4ringsminister"),
    
    /** The gruppledare. */
    @XmlEnumValue("Gruppledare")
    GRUPPLEDARE("Gruppledare"),
    
    /** The utrikesminister. */
    @XmlEnumValue("Utrikesminister")
    UTRIKESMINISTER("Utrikesminister"),
    
    /** The extra suppleant. */
    @XmlEnumValue("Extra suppleant")
    EXTRA_SUPPLEANT("Extra suppleant"),
    
    /** The TREDJ E VIC E ordförande. */
    @XmlEnumValue("Tredje vice ordf\u00f6rande")
    TREDJE_VICE_ORDFÖRANDE("Tredje vice ordf\u00f6rande"),
    
    /** The deputerad. */
    @XmlEnumValue("Deputerad")
    DEPUTERAD("Deputerad"),
    
    /** The INFRASTRUKTU R OC H försvarsminister. */
    @XmlEnumValue("Infrastruktur- och f\u00f6rsvarsminister")
    INFRASTRUKTUR_OCH_FÖRSVARSMINISTER("Infrastruktur- och f\u00f6rsvarsminister"),
    
    /** The MILJÖMINISTER. */
    @XmlEnumValue("Milj\u00f6minister")
    MILJÖMINISTER("Milj\u00f6minister"),
    
    /** The jordbruksminister. */
    @XmlEnumValue("Jordbruksminister")
    JORDBRUKSMINISTER("Jordbruksminister"),
    
    /** The NÄRING S OC H ENERGIMINISTER. */
    @XmlEnumValue("N\u00e4rings- och energiminister")
    NÄRINGS_OCH_ENERGIMINISTER("N\u00e4rings- och energiminister"),
    
    /** The tredje vice talman. */
    @XmlEnumValue("Tredje vice talman")
    TREDJE_VICE_TALMAN("Tredje vice talman"),
    
    /** The justitieminister. */
    @XmlEnumValue("Justitieminister")
    JUSTITIEMINISTER("Justitieminister"),
    
    /** The ledamot. */
    @XmlEnumValue("Ledamot")
    LEDAMOT("Ledamot"),
    
    /** The FÖRST E VIC E TALMAN. */
    @XmlEnumValue("F\u00f6rste vice talman")
    FÖRSTE_VICE_TALMAN("F\u00f6rste vice talman"),
    
    /** The ANDR E VIC E ordförande. */
    @XmlEnumValue("Andre vice ordf\u00f6rande")
    ANDRE_VICE_ORDFÖRANDE("Andre vice ordf\u00f6rande"),
    
    /** The INTEGRATION S OC H jämställdhetsminister. */
    @XmlEnumValue("Integrations- och j\u00e4mst\u00e4lldhetsminister")
    INTEGRATIONS_OCH_JÄMSTÄLLDHETSMINISTER("Integrations- och j\u00e4mst\u00e4lldhetsminister"),
    
    /** The riksdagsledamot. */
    @XmlEnumValue("Riksdagsledamot")
    RIKSDAGSLEDAMOT("Riksdagsledamot"),
    
    /** The VIC E ordförande. */
    @XmlEnumValue("Vice ordf\u00f6rande")
    VICE_ORDFÖRANDE("Vice ordf\u00f6rande"),
    
    /** The revisor. */
    @XmlEnumValue("Revisor")
    REVISOR("Revisor"),
    
    /** The vice gruppledare. */
    @XmlEnumValue("Vice gruppledare")
    VICE_GRUPPLEDARE("Vice gruppledare"),
    
    /** The kultur och demokratiminister. */
    @XmlEnumValue("Kultur- och demokratiminister")
    KULTUR_OCH_DEMOKRATIMINISTER("Kultur- och demokratiminister"),
    
    /** The vice statsminister. */
    @XmlEnumValue("Vice statsminister")
    VICE_STATSMINISTER("Vice statsminister"),
    
    /** The FÖRST E VIC E ordförande. */
    @XmlEnumValue("F\u00f6rste vice ordf\u00f6rande")
    FÖRSTE_VICE_ORDFÖRANDE("F\u00f6rste vice ordf\u00f6rande"),
    
    /** The FÖRSVARSMINISTER. */
    @XmlEnumValue("F\u00f6rsvarsminister")
    FÖRSVARSMINISTER("F\u00f6rsvarsminister"),
    
    /** The finansminister. */
    @XmlEnumValue("Finansminister")
    FINANSMINISTER("Finansminister"),
    
    /** The statsminister. */
    @XmlEnumValue("Statsminister")
    STATSMINISTER("Statsminister"),
    
    /** The SOCIALFÖRSÄKRINGSMINISTER. */
    @XmlEnumValue("Socialf\u00f6rs\u00e4kringsminister")
    SOCIALFÖRSÄKRINGSMINISTER("Socialf\u00f6rs\u00e4kringsminister"),
    
    /** The ERSÄTTARE. */
    @XmlEnumValue("Ers\u00e4ttare")
    ERSÄTTARE("Ers\u00e4ttare"),
    
    /** The revisorssuppleant. */
    @XmlEnumValue("Revisorssuppleant")
    REVISORSSUPPLEANT("Revisorssuppleant"),
    
    /** The landsbygdsminister. */
    @XmlEnumValue("Landsbygdsminister")
    LANDSBYGDSMINISTER("Landsbygdsminister"),
    
    /** The personlig suppleant. */
    @XmlEnumValue("Personlig suppleant")
    PERSONLIG_SUPPLEANT("Personlig suppleant"),
    
    /** The kultur och idrottsminister. */
    @XmlEnumValue("Kultur- och idrottsminister")
    KULTUR_OCH_IDROTTSMINISTER("Kultur- och idrottsminister");
    
    /** The value. */
    private final String value;

    /**
	 * Instantiates a new role status.
	 *
	 * @param v the v
	 */
    RoleStatus(final String v) {
        value = v;
    }

    /**
	 * Value.
	 *
	 * @return the string
	 */
    public String value() {
        return value;
    }

    /**
	 * From value.
	 *
	 * @param v the v
	 * @return the role status
	 */
    public static RoleStatus fromValue(final String v) {
        for (final RoleStatus c: RoleStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
