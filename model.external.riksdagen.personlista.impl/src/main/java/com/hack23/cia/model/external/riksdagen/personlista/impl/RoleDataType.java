//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.24 at 11:39:59 PM CET 
//


package com.hack23.cia.model.external.riksdagen.personlista.impl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RoleDataType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RoleDataType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="eadress"/&gt;
 *     &lt;enumeration value="kammaruppdrag"/&gt;
 *     &lt;enumeration value="partiuppdrag"/&gt;
 *     &lt;enumeration value="talmansuppdrag"/&gt;
 *     &lt;enumeration value="telefonnummer"/&gt;
 *     &lt;enumeration value="titlar"/&gt;
 *     &lt;enumeration value="uppdrag"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "RoleDataType")
@XmlEnum
public enum RoleDataType {

    @XmlEnumValue("eadress")
    EADRESS("eadress"),
    @XmlEnumValue("kammaruppdrag")
    KAMMARUPPDRAG("kammaruppdrag"),
    @XmlEnumValue("partiuppdrag")
    PARTIUPPDRAG("partiuppdrag"),
    @XmlEnumValue("talmansuppdrag")
    TALMANSUPPDRAG("talmansuppdrag"),
    @XmlEnumValue("telefonnummer")
    TELEFONNUMMER("telefonnummer"),
    @XmlEnumValue("titlar")
    TITLAR("titlar"),
    @XmlEnumValue("uppdrag")
    UPPDRAG("uppdrag");
    private final String value;

    RoleDataType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RoleDataType fromValue(String v) {
        for (RoleDataType c: RoleDataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
