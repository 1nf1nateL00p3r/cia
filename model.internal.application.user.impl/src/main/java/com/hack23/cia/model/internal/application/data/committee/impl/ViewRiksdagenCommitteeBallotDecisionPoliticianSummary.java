//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.25 at 12:05:09 AM CET 
//


package com.hack23.cia.model.internal.application.data.committee.impl;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.hack23.cia.model.common.api.ModelObject;
import com.hack23.cia.model.common.impl.xml.XmlDateTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ViewRiksdagenCommitteeBallotDecisionPoliticianSummary complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewRiksdagenCommitteeBallotDecisionPoliticianSummary"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="embeddedId" type="{http://committee.data.application.internal.model.cia.hack23.com/impl}ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId"/&gt;
 *         &lt;element name="committee_report" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="rm" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="title" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="sub_title" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="end_number" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="org" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="created_date" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="public_date" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="ballot_id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="decision_type" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="against_proposal_parties" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="against_proposal_number" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="winner" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="ballot_type" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="label" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="vote_date" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="avg_born_year" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="total_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="yes_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="no_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="abstain_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="absent_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="approved" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="no_winner" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="percentage_yes" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="percentage_no" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="percentage_absent" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="percentage_abstain" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="percentage_male" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party_avg_born_year" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party_total_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="party_yes_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="party_no_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="party_abstain_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="party_absent_votes" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="party_approved" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="party_no_winner" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="party_percentage_yes" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party_percentage_no" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party_percentage_absent" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party_percentage_abstain" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party_percentage_male" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="party" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="first_name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="last_name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="born_year" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="vote" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="won" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="rebel" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewRiksdagenCommitteeBallotDecisionPoliticianSummary", propOrder = {
    "embeddedId",
    "committeeReport",
    "rm",
    "title",
    "subTitle",
    "endNumber",
    "org",
    "createdDate",
    "publicDate",
    "ballotId",
    "decisionType",
    "againstProposalParties",
    "againstProposalNumber",
    "winner",
    "ballotType",
    "label",
    "voteDate",
    "avgBornYear",
    "totalVotes",
    "yesVotes",
    "noVotes",
    "abstainVotes",
    "absentVotes",
    "approved",
    "noWinner",
    "percentageYes",
    "percentageNo",
    "percentageAbsent",
    "percentageAbstain",
    "percentageMale",
    "partyAvgBornYear",
    "partyTotalVotes",
    "partyYesVotes",
    "partyNoVotes",
    "partyAbstainVotes",
    "partyAbsentVotes",
    "partyApproved",
    "partyNoWinner",
    "partyPercentageYes",
    "partyPercentageNo",
    "partyPercentageAbsent",
    "partyPercentageAbstain",
    "partyPercentageMale",
    "party",
    "firstName",
    "lastName",
    "bornYear",
    "vote",
    "won",
    "rebel"
})
@Entity(name = "ViewRiksdagenCommitteeBallotDecisionPoliticianSummary")
@Table(name = "View_Riksdagen_Committee_Ballot_Decision_Politician_Summary")
@Inheritance(strategy = InheritanceType.JOINED)
public class ViewRiksdagenCommitteeBallotDecisionPoliticianSummary
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId embeddedId;
    @XmlElement(name = "committee_report", required = true)
    protected String committeeReport;
    @XmlElement(required = true)
    protected String rm;
    @XmlElement(required = true)
    protected String title;
    @XmlElement(name = "sub_title", required = true)
    protected String subTitle;
    @XmlElement(name = "end_number", required = true)
    protected BigDecimal endNumber;
    @XmlElement(required = true)
    protected String org;
    @XmlElement(name = "created_date", required = true, type = String.class)
    @XmlJavaTypeAdapter(XmlDateTypeAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date createdDate;
    @XmlElement(name = "public_date", required = true, type = String.class)
    @XmlJavaTypeAdapter(XmlDateTypeAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date publicDate;
    @XmlElement(name = "ballot_id", required = true)
    protected String ballotId;
    @XmlElement(name = "decision_type", required = true)
    protected String decisionType;
    @XmlElement(name = "against_proposal_parties", required = true)
    protected String againstProposalParties;
    @XmlElement(name = "against_proposal_number", required = true)
    protected BigDecimal againstProposalNumber;
    @XmlElement(required = true)
    protected String winner;
    @XmlElement(name = "ballot_type", required = true)
    protected String ballotType;
    @XmlElement(required = true)
    protected String label;
    @XmlElement(name = "vote_date", required = true, type = String.class)
    @XmlJavaTypeAdapter(XmlDateTypeAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date voteDate;
    @XmlElement(name = "avg_born_year", required = true)
    protected BigDecimal avgBornYear;
    @XmlElement(name = "total_votes")
    protected long totalVotes;
    @XmlElement(name = "yes_votes")
    protected long yesVotes;
    @XmlElement(name = "no_votes")
    protected long noVotes;
    @XmlElement(name = "abstain_votes")
    protected long abstainVotes;
    @XmlElement(name = "absent_votes")
    protected long absentVotes;
    protected boolean approved;
    @XmlElement(name = "no_winner")
    protected boolean noWinner;
    @XmlElement(name = "percentage_yes", required = true)
    protected BigDecimal percentageYes;
    @XmlElement(name = "percentage_no", required = true)
    protected BigDecimal percentageNo;
    @XmlElement(name = "percentage_absent", required = true)
    protected BigDecimal percentageAbsent;
    @XmlElement(name = "percentage_abstain", required = true)
    protected BigDecimal percentageAbstain;
    @XmlElement(name = "percentage_male", required = true)
    protected BigDecimal percentageMale;
    @XmlElement(name = "party_avg_born_year", required = true)
    protected BigDecimal partyAvgBornYear;
    @XmlElement(name = "party_total_votes")
    protected long partyTotalVotes;
    @XmlElement(name = "party_yes_votes")
    protected long partyYesVotes;
    @XmlElement(name = "party_no_votes")
    protected long partyNoVotes;
    @XmlElement(name = "party_abstain_votes")
    protected long partyAbstainVotes;
    @XmlElement(name = "party_absent_votes")
    protected long partyAbsentVotes;
    @XmlElement(name = "party_approved")
    protected boolean partyApproved;
    @XmlElement(name = "party_no_winner")
    protected boolean partyNoWinner;
    @XmlElement(name = "party_percentage_yes", required = true)
    protected BigDecimal partyPercentageYes;
    @XmlElement(name = "party_percentage_no", required = true)
    protected BigDecimal partyPercentageNo;
    @XmlElement(name = "party_percentage_absent", required = true)
    protected BigDecimal partyPercentageAbsent;
    @XmlElement(name = "party_percentage_abstain", required = true)
    protected BigDecimal partyPercentageAbstain;
    @XmlElement(name = "party_percentage_male", required = true)
    protected BigDecimal partyPercentageMale;
    @XmlElement(required = true)
    protected String party;
    @XmlElement(name = "first_name", required = true)
    protected String firstName;
    @XmlElement(name = "last_name", required = true)
    protected String lastName;
    @XmlElement(name = "born_year")
    protected int bornYear;
    @XmlElement(required = true)
    protected String vote;
    protected boolean won;
    protected boolean rebel;

    /**
     * Gets the value of the embeddedId property.
     * 
     * @return
     *     possible object is
     *     {@link ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId }
     *     
     */
    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "id", column = @Column(name = "EMBEDDED_ID_ID", length = 255)),
        @AttributeOverride(name = "intressentId", column = @Column(name = "EMBEDDED_ID_INTRESSENT_ID", length = 255)),
        @AttributeOverride(name = "hangarId", column = @Column(name = "EMBEDDED_ID_HANGAR_ID", precision = 20, scale = 10)),
        @AttributeOverride(name = "issue", column = @Column(name = "EMBEDDED_ID_ISSUE", length = 255)),
        @AttributeOverride(name = "concern", column = @Column(name = "EMBEDDED_ID_CONCERN", length = 255))
    })
    public ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId getEmbeddedId() {
        return embeddedId;
    }

    /**
     * Sets the value of the embeddedId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId }
     *     
     */
    public void setEmbeddedId(ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId value) {
        this.embeddedId = value;
    }

    /**
     * Gets the value of the committeeReport property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COMMITTEE_REPORT", length = 255)
    public String getCommitteeReport() {
        return committeeReport;
    }

    /**
     * Sets the value of the committeeReport property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCommitteeReport(String value) {
        this.committeeReport = value;
    }

    /**
     * Gets the value of the rm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RM", length = 255)
    public String getRm() {
        return rm;
    }

    /**
     * Sets the value of the rm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRm(String value) {
        this.rm = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TITLE", length = 255)
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    /**
     * Gets the value of the subTitle property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUB_TITLE", length = 255)
    public String getSubTitle() {
        return subTitle;
    }

    /**
     * Sets the value of the subTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubTitle(String value) {
        this.subTitle = value;
    }

    /**
     * Gets the value of the endNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "END_NUMBER", precision = 20, scale = 10)
    public BigDecimal getEndNumber() {
        return endNumber;
    }

    /**
     * Sets the value of the endNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEndNumber(BigDecimal value) {
        this.endNumber = value;
    }

    /**
     * Gets the value of the org property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ORG", length = 255)
    public String getOrg() {
        return org;
    }

    /**
     * Sets the value of the org property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrg(String value) {
        this.org = value;
    }

    /**
     * Gets the value of the createdDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CREATED_DATE")
    @Temporal(TemporalType.DATE)
    public Date getCreatedDate() {
        return createdDate;
    }

    /**
     * Sets the value of the createdDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreatedDate(Date value) {
        this.createdDate = value;
    }

    /**
     * Gets the value of the publicDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PUBLIC_DATE")
    @Temporal(TemporalType.DATE)
    public Date getPublicDate() {
        return publicDate;
    }

    /**
     * Sets the value of the publicDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicDate(Date value) {
        this.publicDate = value;
    }

    /**
     * Gets the value of the ballotId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "BALLOT_ID", length = 255)
    public String getBallotId() {
        return ballotId;
    }

    /**
     * Sets the value of the ballotId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBallotId(String value) {
        this.ballotId = value;
    }

    /**
     * Gets the value of the decisionType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DECISION_TYPE", length = 255)
    public String getDecisionType() {
        return decisionType;
    }

    /**
     * Sets the value of the decisionType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDecisionType(String value) {
        this.decisionType = value;
    }

    /**
     * Gets the value of the againstProposalParties property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "AGAINST_PROPOSAL_PARTIES", length = 255)
    public String getAgainstProposalParties() {
        return againstProposalParties;
    }

    /**
     * Sets the value of the againstProposalParties property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAgainstProposalParties(String value) {
        this.againstProposalParties = value;
    }

    /**
     * Gets the value of the againstProposalNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "AGAINST_PROPOSAL_NUMBER", precision = 20, scale = 10)
    public BigDecimal getAgainstProposalNumber() {
        return againstProposalNumber;
    }

    /**
     * Sets the value of the againstProposalNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAgainstProposalNumber(BigDecimal value) {
        this.againstProposalNumber = value;
    }

    /**
     * Gets the value of the winner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WINNER", length = 255)
    public String getWinner() {
        return winner;
    }

    /**
     * Sets the value of the winner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWinner(String value) {
        this.winner = value;
    }

    /**
     * Gets the value of the ballotType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "BALLOT_TYPE", length = 255)
    public String getBallotType() {
        return ballotType;
    }

    /**
     * Sets the value of the ballotType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBallotType(String value) {
        this.ballotType = value;
    }

    /**
     * Gets the value of the label property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LABEL", length = 255)
    public String getLabel() {
        return label;
    }

    /**
     * Sets the value of the label property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLabel(String value) {
        this.label = value;
    }

    /**
     * Gets the value of the voteDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VOTE_DATE")
    @Temporal(TemporalType.DATE)
    public Date getVoteDate() {
        return voteDate;
    }

    /**
     * Sets the value of the voteDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVoteDate(Date value) {
        this.voteDate = value;
    }

    /**
     * Gets the value of the avgBornYear property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "AVG_BORN_YEAR", precision = 20, scale = 10)
    public BigDecimal getAvgBornYear() {
        return avgBornYear;
    }

    /**
     * Sets the value of the avgBornYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAvgBornYear(BigDecimal value) {
        this.avgBornYear = value;
    }

    /**
     * Gets the value of the totalVotes property.
     * 
     */
    @Basic
    @Column(name = "TOTAL_VOTES", precision = 20, scale = 0)
    public long getTotalVotes() {
        return totalVotes;
    }

    /**
     * Sets the value of the totalVotes property.
     * 
     */
    public void setTotalVotes(long value) {
        this.totalVotes = value;
    }

    /**
     * Gets the value of the yesVotes property.
     * 
     */
    @Basic
    @Column(name = "YES_VOTES", precision = 20, scale = 0)
    public long getYesVotes() {
        return yesVotes;
    }

    /**
     * Sets the value of the yesVotes property.
     * 
     */
    public void setYesVotes(long value) {
        this.yesVotes = value;
    }

    /**
     * Gets the value of the noVotes property.
     * 
     */
    @Basic
    @Column(name = "NO_VOTES", precision = 20, scale = 0)
    public long getNoVotes() {
        return noVotes;
    }

    /**
     * Sets the value of the noVotes property.
     * 
     */
    public void setNoVotes(long value) {
        this.noVotes = value;
    }

    /**
     * Gets the value of the abstainVotes property.
     * 
     */
    @Basic
    @Column(name = "ABSTAIN_VOTES", precision = 20, scale = 0)
    public long getAbstainVotes() {
        return abstainVotes;
    }

    /**
     * Sets the value of the abstainVotes property.
     * 
     */
    public void setAbstainVotes(long value) {
        this.abstainVotes = value;
    }

    /**
     * Gets the value of the absentVotes property.
     * 
     */
    @Basic
    @Column(name = "ABSENT_VOTES", precision = 20, scale = 0)
    public long getAbsentVotes() {
        return absentVotes;
    }

    /**
     * Sets the value of the absentVotes property.
     * 
     */
    public void setAbsentVotes(long value) {
        this.absentVotes = value;
    }

    /**
     * Gets the value of the approved property.
     * 
     */
    @Basic
    @Column(name = "APPROVED")
    public boolean isApproved() {
        return approved;
    }

    /**
     * Sets the value of the approved property.
     * 
     */
    public void setApproved(boolean value) {
        this.approved = value;
    }

    /**
     * Gets the value of the noWinner property.
     * 
     */
    @Basic
    @Column(name = "NO_WINNER")
    public boolean isNoWinner() {
        return noWinner;
    }

    /**
     * Sets the value of the noWinner property.
     * 
     */
    public void setNoWinner(boolean value) {
        this.noWinner = value;
    }

    /**
     * Gets the value of the percentageYes property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PERCENTAGE_YES", precision = 20, scale = 10)
    public BigDecimal getPercentageYes() {
        return percentageYes;
    }

    /**
     * Sets the value of the percentageYes property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPercentageYes(BigDecimal value) {
        this.percentageYes = value;
    }

    /**
     * Gets the value of the percentageNo property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PERCENTAGE_NO", precision = 20, scale = 10)
    public BigDecimal getPercentageNo() {
        return percentageNo;
    }

    /**
     * Sets the value of the percentageNo property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPercentageNo(BigDecimal value) {
        this.percentageNo = value;
    }

    /**
     * Gets the value of the percentageAbsent property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PERCENTAGE_ABSENT", precision = 20, scale = 10)
    public BigDecimal getPercentageAbsent() {
        return percentageAbsent;
    }

    /**
     * Sets the value of the percentageAbsent property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPercentageAbsent(BigDecimal value) {
        this.percentageAbsent = value;
    }

    /**
     * Gets the value of the percentageAbstain property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PERCENTAGE_ABSTAIN", precision = 20, scale = 10)
    public BigDecimal getPercentageAbstain() {
        return percentageAbstain;
    }

    /**
     * Sets the value of the percentageAbstain property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPercentageAbstain(BigDecimal value) {
        this.percentageAbstain = value;
    }

    /**
     * Gets the value of the percentageMale property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PERCENTAGE_MALE", precision = 20, scale = 10)
    public BigDecimal getPercentageMale() {
        return percentageMale;
    }

    /**
     * Sets the value of the percentageMale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPercentageMale(BigDecimal value) {
        this.percentageMale = value;
    }

    /**
     * Gets the value of the partyAvgBornYear property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PARTY_AVG_BORN_YEAR", precision = 20, scale = 10)
    public BigDecimal getPartyAvgBornYear() {
        return partyAvgBornYear;
    }

    /**
     * Sets the value of the partyAvgBornYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPartyAvgBornYear(BigDecimal value) {
        this.partyAvgBornYear = value;
    }

    /**
     * Gets the value of the partyTotalVotes property.
     * 
     */
    @Basic
    @Column(name = "PARTY_TOTAL_VOTES", precision = 20, scale = 0)
    public long getPartyTotalVotes() {
        return partyTotalVotes;
    }

    /**
     * Sets the value of the partyTotalVotes property.
     * 
     */
    public void setPartyTotalVotes(long value) {
        this.partyTotalVotes = value;
    }

    /**
     * Gets the value of the partyYesVotes property.
     * 
     */
    @Basic
    @Column(name = "PARTY_YES_VOTES", precision = 20, scale = 0)
    public long getPartyYesVotes() {
        return partyYesVotes;
    }

    /**
     * Sets the value of the partyYesVotes property.
     * 
     */
    public void setPartyYesVotes(long value) {
        this.partyYesVotes = value;
    }

    /**
     * Gets the value of the partyNoVotes property.
     * 
     */
    @Basic
    @Column(name = "PARTY_NO_VOTES", precision = 20, scale = 0)
    public long getPartyNoVotes() {
        return partyNoVotes;
    }

    /**
     * Sets the value of the partyNoVotes property.
     * 
     */
    public void setPartyNoVotes(long value) {
        this.partyNoVotes = value;
    }

    /**
     * Gets the value of the partyAbstainVotes property.
     * 
     */
    @Basic
    @Column(name = "PARTY_ABSTAIN_VOTES", precision = 20, scale = 0)
    public long getPartyAbstainVotes() {
        return partyAbstainVotes;
    }

    /**
     * Sets the value of the partyAbstainVotes property.
     * 
     */
    public void setPartyAbstainVotes(long value) {
        this.partyAbstainVotes = value;
    }

    /**
     * Gets the value of the partyAbsentVotes property.
     * 
     */
    @Basic
    @Column(name = "PARTY_ABSENT_VOTES", precision = 20, scale = 0)
    public long getPartyAbsentVotes() {
        return partyAbsentVotes;
    }

    /**
     * Sets the value of the partyAbsentVotes property.
     * 
     */
    public void setPartyAbsentVotes(long value) {
        this.partyAbsentVotes = value;
    }

    /**
     * Gets the value of the partyApproved property.
     * 
     */
    @Basic
    @Column(name = "PARTY_APPROVED")
    public boolean isPartyApproved() {
        return partyApproved;
    }

    /**
     * Sets the value of the partyApproved property.
     * 
     */
    public void setPartyApproved(boolean value) {
        this.partyApproved = value;
    }

    /**
     * Gets the value of the partyNoWinner property.
     * 
     */
    @Basic
    @Column(name = "PARTY_NO_WINNER")
    public boolean isPartyNoWinner() {
        return partyNoWinner;
    }

    /**
     * Sets the value of the partyNoWinner property.
     * 
     */
    public void setPartyNoWinner(boolean value) {
        this.partyNoWinner = value;
    }

    /**
     * Gets the value of the partyPercentageYes property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PARTY_PERCENTAGE_YES", precision = 20, scale = 10)
    public BigDecimal getPartyPercentageYes() {
        return partyPercentageYes;
    }

    /**
     * Sets the value of the partyPercentageYes property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPartyPercentageYes(BigDecimal value) {
        this.partyPercentageYes = value;
    }

    /**
     * Gets the value of the partyPercentageNo property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PARTY_PERCENTAGE_NO", precision = 20, scale = 10)
    public BigDecimal getPartyPercentageNo() {
        return partyPercentageNo;
    }

    /**
     * Sets the value of the partyPercentageNo property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPartyPercentageNo(BigDecimal value) {
        this.partyPercentageNo = value;
    }

    /**
     * Gets the value of the partyPercentageAbsent property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PARTY_PERCENTAGE_ABSENT", precision = 20, scale = 10)
    public BigDecimal getPartyPercentageAbsent() {
        return partyPercentageAbsent;
    }

    /**
     * Sets the value of the partyPercentageAbsent property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPartyPercentageAbsent(BigDecimal value) {
        this.partyPercentageAbsent = value;
    }

    /**
     * Gets the value of the partyPercentageAbstain property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PARTY_PERCENTAGE_ABSTAIN", precision = 20, scale = 10)
    public BigDecimal getPartyPercentageAbstain() {
        return partyPercentageAbstain;
    }

    /**
     * Sets the value of the partyPercentageAbstain property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPartyPercentageAbstain(BigDecimal value) {
        this.partyPercentageAbstain = value;
    }

    /**
     * Gets the value of the partyPercentageMale property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PARTY_PERCENTAGE_MALE", precision = 20, scale = 10)
    public BigDecimal getPartyPercentageMale() {
        return partyPercentageMale;
    }

    /**
     * Sets the value of the partyPercentageMale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPartyPercentageMale(BigDecimal value) {
        this.partyPercentageMale = value;
    }

    /**
     * Gets the value of the party property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PARTY", length = 255)
    public String getParty() {
        return party;
    }

    /**
     * Sets the value of the party property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setParty(String value) {
        this.party = value;
    }

    /**
     * Gets the value of the firstName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FIRST_NAME", length = 255)
    public String getFirstName() {
        return firstName;
    }

    /**
     * Sets the value of the firstName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFirstName(String value) {
        this.firstName = value;
    }

    /**
     * Gets the value of the lastName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LAST_NAME", length = 255)
    public String getLastName() {
        return lastName;
    }

    /**
     * Sets the value of the lastName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastName(String value) {
        this.lastName = value;
    }

    /**
     * Gets the value of the bornYear property.
     * 
     */
    @Basic
    @Column(name = "BORN_YEAR", precision = 10, scale = 0)
    public int getBornYear() {
        return bornYear;
    }

    /**
     * Sets the value of the bornYear property.
     * 
     */
    public void setBornYear(int value) {
        this.bornYear = value;
    }

    /**
     * Gets the value of the vote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VOTE", length = 255)
    public String getVote() {
        return vote;
    }

    /**
     * Sets the value of the vote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVote(String value) {
        this.vote = value;
    }

    /**
     * Gets the value of the won property.
     * 
     */
    @Basic
    @Column(name = "WON")
    public boolean isWon() {
        return won;
    }

    /**
     * Sets the value of the won property.
     * 
     */
    public void setWon(boolean value) {
        this.won = value;
    }

    /**
     * Gets the value of the rebel property.
     * 
     */
    @Basic
    @Column(name = "REBEL")
    public boolean isRebel() {
        return rebel;
    }

    /**
     * Sets the value of the rebel property.
     * 
     */
    public void setRebel(boolean value) {
        this.rebel = value;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withEmbeddedId(ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId value) {
        setEmbeddedId(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withCommitteeReport(String value) {
        setCommitteeReport(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withRm(String value) {
        setRm(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withTitle(String value) {
        setTitle(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withSubTitle(String value) {
        setSubTitle(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withEndNumber(BigDecimal value) {
        setEndNumber(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withOrg(String value) {
        setOrg(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withCreatedDate(Date value) {
        setCreatedDate(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPublicDate(Date value) {
        setPublicDate(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withBallotId(String value) {
        setBallotId(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withDecisionType(String value) {
        setDecisionType(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withAgainstProposalParties(String value) {
        setAgainstProposalParties(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withAgainstProposalNumber(BigDecimal value) {
        setAgainstProposalNumber(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withWinner(String value) {
        setWinner(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withBallotType(String value) {
        setBallotType(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withLabel(String value) {
        setLabel(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withVoteDate(Date value) {
        setVoteDate(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withAvgBornYear(BigDecimal value) {
        setAvgBornYear(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withTotalVotes(long value) {
        setTotalVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withYesVotes(long value) {
        setYesVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withNoVotes(long value) {
        setNoVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withAbstainVotes(long value) {
        setAbstainVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withAbsentVotes(long value) {
        setAbsentVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withApproved(boolean value) {
        setApproved(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withNoWinner(boolean value) {
        setNoWinner(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPercentageYes(BigDecimal value) {
        setPercentageYes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPercentageNo(BigDecimal value) {
        setPercentageNo(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPercentageAbsent(BigDecimal value) {
        setPercentageAbsent(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPercentageAbstain(BigDecimal value) {
        setPercentageAbstain(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPercentageMale(BigDecimal value) {
        setPercentageMale(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyAvgBornYear(BigDecimal value) {
        setPartyAvgBornYear(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyTotalVotes(long value) {
        setPartyTotalVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyYesVotes(long value) {
        setPartyYesVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyNoVotes(long value) {
        setPartyNoVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyAbstainVotes(long value) {
        setPartyAbstainVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyAbsentVotes(long value) {
        setPartyAbsentVotes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyApproved(boolean value) {
        setPartyApproved(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyNoWinner(boolean value) {
        setPartyNoWinner(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyPercentageYes(BigDecimal value) {
        setPartyPercentageYes(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyPercentageNo(BigDecimal value) {
        setPartyPercentageNo(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyPercentageAbsent(BigDecimal value) {
        setPartyPercentageAbsent(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyPercentageAbstain(BigDecimal value) {
        setPartyPercentageAbstain(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withPartyPercentageMale(BigDecimal value) {
        setPartyPercentageMale(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withParty(String value) {
        setParty(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withFirstName(String value) {
        setFirstName(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withLastName(String value) {
        setLastName(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withBornYear(int value) {
        setBornYear(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withVote(String value) {
        setVote(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withWon(boolean value) {
        setWon(value);
        return this;
    }

    public ViewRiksdagenCommitteeBallotDecisionPoliticianSummary withRebel(boolean value) {
        setRebel(value);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId theEmbeddedId;
            theEmbeddedId = this.getEmbeddedId();
            strategy.appendField(locator, this, "embeddedId", buffer, theEmbeddedId);
        }
        {
            String theCommitteeReport;
            theCommitteeReport = this.getCommitteeReport();
            strategy.appendField(locator, this, "committeeReport", buffer, theCommitteeReport);
        }
        {
            String theRm;
            theRm = this.getRm();
            strategy.appendField(locator, this, "rm", buffer, theRm);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            strategy.appendField(locator, this, "title", buffer, theTitle);
        }
        {
            String theSubTitle;
            theSubTitle = this.getSubTitle();
            strategy.appendField(locator, this, "subTitle", buffer, theSubTitle);
        }
        {
            BigDecimal theEndNumber;
            theEndNumber = this.getEndNumber();
            strategy.appendField(locator, this, "endNumber", buffer, theEndNumber);
        }
        {
            String theOrg;
            theOrg = this.getOrg();
            strategy.appendField(locator, this, "org", buffer, theOrg);
        }
        {
            Date theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            strategy.appendField(locator, this, "createdDate", buffer, theCreatedDate);
        }
        {
            Date thePublicDate;
            thePublicDate = this.getPublicDate();
            strategy.appendField(locator, this, "publicDate", buffer, thePublicDate);
        }
        {
            String theBallotId;
            theBallotId = this.getBallotId();
            strategy.appendField(locator, this, "ballotId", buffer, theBallotId);
        }
        {
            String theDecisionType;
            theDecisionType = this.getDecisionType();
            strategy.appendField(locator, this, "decisionType", buffer, theDecisionType);
        }
        {
            String theAgainstProposalParties;
            theAgainstProposalParties = this.getAgainstProposalParties();
            strategy.appendField(locator, this, "againstProposalParties", buffer, theAgainstProposalParties);
        }
        {
            BigDecimal theAgainstProposalNumber;
            theAgainstProposalNumber = this.getAgainstProposalNumber();
            strategy.appendField(locator, this, "againstProposalNumber", buffer, theAgainstProposalNumber);
        }
        {
            String theWinner;
            theWinner = this.getWinner();
            strategy.appendField(locator, this, "winner", buffer, theWinner);
        }
        {
            String theBallotType;
            theBallotType = this.getBallotType();
            strategy.appendField(locator, this, "ballotType", buffer, theBallotType);
        }
        {
            String theLabel;
            theLabel = this.getLabel();
            strategy.appendField(locator, this, "label", buffer, theLabel);
        }
        {
            Date theVoteDate;
            theVoteDate = this.getVoteDate();
            strategy.appendField(locator, this, "voteDate", buffer, theVoteDate);
        }
        {
            BigDecimal theAvgBornYear;
            theAvgBornYear = this.getAvgBornYear();
            strategy.appendField(locator, this, "avgBornYear", buffer, theAvgBornYear);
        }
        {
            long theTotalVotes;
            theTotalVotes = this.getTotalVotes();
            strategy.appendField(locator, this, "totalVotes", buffer, theTotalVotes);
        }
        {
            long theYesVotes;
            theYesVotes = this.getYesVotes();
            strategy.appendField(locator, this, "yesVotes", buffer, theYesVotes);
        }
        {
            long theNoVotes;
            theNoVotes = this.getNoVotes();
            strategy.appendField(locator, this, "noVotes", buffer, theNoVotes);
        }
        {
            long theAbstainVotes;
            theAbstainVotes = this.getAbstainVotes();
            strategy.appendField(locator, this, "abstainVotes", buffer, theAbstainVotes);
        }
        {
            long theAbsentVotes;
            theAbsentVotes = this.getAbsentVotes();
            strategy.appendField(locator, this, "absentVotes", buffer, theAbsentVotes);
        }
        {
            boolean theApproved;
            theApproved = this.isApproved();
            strategy.appendField(locator, this, "approved", buffer, theApproved);
        }
        {
            boolean theNoWinner;
            theNoWinner = this.isNoWinner();
            strategy.appendField(locator, this, "noWinner", buffer, theNoWinner);
        }
        {
            BigDecimal thePercentageYes;
            thePercentageYes = this.getPercentageYes();
            strategy.appendField(locator, this, "percentageYes", buffer, thePercentageYes);
        }
        {
            BigDecimal thePercentageNo;
            thePercentageNo = this.getPercentageNo();
            strategy.appendField(locator, this, "percentageNo", buffer, thePercentageNo);
        }
        {
            BigDecimal thePercentageAbsent;
            thePercentageAbsent = this.getPercentageAbsent();
            strategy.appendField(locator, this, "percentageAbsent", buffer, thePercentageAbsent);
        }
        {
            BigDecimal thePercentageAbstain;
            thePercentageAbstain = this.getPercentageAbstain();
            strategy.appendField(locator, this, "percentageAbstain", buffer, thePercentageAbstain);
        }
        {
            BigDecimal thePercentageMale;
            thePercentageMale = this.getPercentageMale();
            strategy.appendField(locator, this, "percentageMale", buffer, thePercentageMale);
        }
        {
            BigDecimal thePartyAvgBornYear;
            thePartyAvgBornYear = this.getPartyAvgBornYear();
            strategy.appendField(locator, this, "partyAvgBornYear", buffer, thePartyAvgBornYear);
        }
        {
            long thePartyTotalVotes;
            thePartyTotalVotes = this.getPartyTotalVotes();
            strategy.appendField(locator, this, "partyTotalVotes", buffer, thePartyTotalVotes);
        }
        {
            long thePartyYesVotes;
            thePartyYesVotes = this.getPartyYesVotes();
            strategy.appendField(locator, this, "partyYesVotes", buffer, thePartyYesVotes);
        }
        {
            long thePartyNoVotes;
            thePartyNoVotes = this.getPartyNoVotes();
            strategy.appendField(locator, this, "partyNoVotes", buffer, thePartyNoVotes);
        }
        {
            long thePartyAbstainVotes;
            thePartyAbstainVotes = this.getPartyAbstainVotes();
            strategy.appendField(locator, this, "partyAbstainVotes", buffer, thePartyAbstainVotes);
        }
        {
            long thePartyAbsentVotes;
            thePartyAbsentVotes = this.getPartyAbsentVotes();
            strategy.appendField(locator, this, "partyAbsentVotes", buffer, thePartyAbsentVotes);
        }
        {
            boolean thePartyApproved;
            thePartyApproved = this.isPartyApproved();
            strategy.appendField(locator, this, "partyApproved", buffer, thePartyApproved);
        }
        {
            boolean thePartyNoWinner;
            thePartyNoWinner = this.isPartyNoWinner();
            strategy.appendField(locator, this, "partyNoWinner", buffer, thePartyNoWinner);
        }
        {
            BigDecimal thePartyPercentageYes;
            thePartyPercentageYes = this.getPartyPercentageYes();
            strategy.appendField(locator, this, "partyPercentageYes", buffer, thePartyPercentageYes);
        }
        {
            BigDecimal thePartyPercentageNo;
            thePartyPercentageNo = this.getPartyPercentageNo();
            strategy.appendField(locator, this, "partyPercentageNo", buffer, thePartyPercentageNo);
        }
        {
            BigDecimal thePartyPercentageAbsent;
            thePartyPercentageAbsent = this.getPartyPercentageAbsent();
            strategy.appendField(locator, this, "partyPercentageAbsent", buffer, thePartyPercentageAbsent);
        }
        {
            BigDecimal thePartyPercentageAbstain;
            thePartyPercentageAbstain = this.getPartyPercentageAbstain();
            strategy.appendField(locator, this, "partyPercentageAbstain", buffer, thePartyPercentageAbstain);
        }
        {
            BigDecimal thePartyPercentageMale;
            thePartyPercentageMale = this.getPartyPercentageMale();
            strategy.appendField(locator, this, "partyPercentageMale", buffer, thePartyPercentageMale);
        }
        {
            String theParty;
            theParty = this.getParty();
            strategy.appendField(locator, this, "party", buffer, theParty);
        }
        {
            String theFirstName;
            theFirstName = this.getFirstName();
            strategy.appendField(locator, this, "firstName", buffer, theFirstName);
        }
        {
            String theLastName;
            theLastName = this.getLastName();
            strategy.appendField(locator, this, "lastName", buffer, theLastName);
        }
        {
            int theBornYear;
            theBornYear = this.getBornYear();
            strategy.appendField(locator, this, "bornYear", buffer, theBornYear);
        }
        {
            String theVote;
            theVote = this.getVote();
            strategy.appendField(locator, this, "vote", buffer, theVote);
        }
        {
            boolean theWon;
            theWon = this.isWon();
            strategy.appendField(locator, this, "won", buffer, theWon);
        }
        {
            boolean theRebel;
            theRebel = this.isRebel();
            strategy.appendField(locator, this, "rebel", buffer, theRebel);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ViewRiksdagenCommitteeBallotDecisionPoliticianSummary that = ((ViewRiksdagenCommitteeBallotDecisionPoliticianSummary) object);
        {
            ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId lhsEmbeddedId;
            lhsEmbeddedId = this.getEmbeddedId();
            ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId rhsEmbeddedId;
            rhsEmbeddedId = that.getEmbeddedId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "embeddedId", lhsEmbeddedId), LocatorUtils.property(thatLocator, "embeddedId", rhsEmbeddedId), lhsEmbeddedId, rhsEmbeddedId)) {
                return false;
            }
        }
        {
            String lhsCommitteeReport;
            lhsCommitteeReport = this.getCommitteeReport();
            String rhsCommitteeReport;
            rhsCommitteeReport = that.getCommitteeReport();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "committeeReport", lhsCommitteeReport), LocatorUtils.property(thatLocator, "committeeReport", rhsCommitteeReport), lhsCommitteeReport, rhsCommitteeReport)) {
                return false;
            }
        }
        {
            String lhsRm;
            lhsRm = this.getRm();
            String rhsRm;
            rhsRm = that.getRm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rm", lhsRm), LocatorUtils.property(thatLocator, "rm", rhsRm), lhsRm, rhsRm)) {
                return false;
            }
        }
        {
            String lhsTitle;
            lhsTitle = this.getTitle();
            String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        {
            String lhsSubTitle;
            lhsSubTitle = this.getSubTitle();
            String rhsSubTitle;
            rhsSubTitle = that.getSubTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subTitle", lhsSubTitle), LocatorUtils.property(thatLocator, "subTitle", rhsSubTitle), lhsSubTitle, rhsSubTitle)) {
                return false;
            }
        }
        {
            BigDecimal lhsEndNumber;
            lhsEndNumber = this.getEndNumber();
            BigDecimal rhsEndNumber;
            rhsEndNumber = that.getEndNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "endNumber", lhsEndNumber), LocatorUtils.property(thatLocator, "endNumber", rhsEndNumber), lhsEndNumber, rhsEndNumber)) {
                return false;
            }
        }
        {
            String lhsOrg;
            lhsOrg = this.getOrg();
            String rhsOrg;
            rhsOrg = that.getOrg();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "org", lhsOrg), LocatorUtils.property(thatLocator, "org", rhsOrg), lhsOrg, rhsOrg)) {
                return false;
            }
        }
        {
            Date lhsCreatedDate;
            lhsCreatedDate = this.getCreatedDate();
            Date rhsCreatedDate;
            rhsCreatedDate = that.getCreatedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdDate", lhsCreatedDate), LocatorUtils.property(thatLocator, "createdDate", rhsCreatedDate), lhsCreatedDate, rhsCreatedDate)) {
                return false;
            }
        }
        {
            Date lhsPublicDate;
            lhsPublicDate = this.getPublicDate();
            Date rhsPublicDate;
            rhsPublicDate = that.getPublicDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publicDate", lhsPublicDate), LocatorUtils.property(thatLocator, "publicDate", rhsPublicDate), lhsPublicDate, rhsPublicDate)) {
                return false;
            }
        }
        {
            String lhsBallotId;
            lhsBallotId = this.getBallotId();
            String rhsBallotId;
            rhsBallotId = that.getBallotId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ballotId", lhsBallotId), LocatorUtils.property(thatLocator, "ballotId", rhsBallotId), lhsBallotId, rhsBallotId)) {
                return false;
            }
        }
        {
            String lhsDecisionType;
            lhsDecisionType = this.getDecisionType();
            String rhsDecisionType;
            rhsDecisionType = that.getDecisionType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "decisionType", lhsDecisionType), LocatorUtils.property(thatLocator, "decisionType", rhsDecisionType), lhsDecisionType, rhsDecisionType)) {
                return false;
            }
        }
        {
            String lhsAgainstProposalParties;
            lhsAgainstProposalParties = this.getAgainstProposalParties();
            String rhsAgainstProposalParties;
            rhsAgainstProposalParties = that.getAgainstProposalParties();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "againstProposalParties", lhsAgainstProposalParties), LocatorUtils.property(thatLocator, "againstProposalParties", rhsAgainstProposalParties), lhsAgainstProposalParties, rhsAgainstProposalParties)) {
                return false;
            }
        }
        {
            BigDecimal lhsAgainstProposalNumber;
            lhsAgainstProposalNumber = this.getAgainstProposalNumber();
            BigDecimal rhsAgainstProposalNumber;
            rhsAgainstProposalNumber = that.getAgainstProposalNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "againstProposalNumber", lhsAgainstProposalNumber), LocatorUtils.property(thatLocator, "againstProposalNumber", rhsAgainstProposalNumber), lhsAgainstProposalNumber, rhsAgainstProposalNumber)) {
                return false;
            }
        }
        {
            String lhsWinner;
            lhsWinner = this.getWinner();
            String rhsWinner;
            rhsWinner = that.getWinner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "winner", lhsWinner), LocatorUtils.property(thatLocator, "winner", rhsWinner), lhsWinner, rhsWinner)) {
                return false;
            }
        }
        {
            String lhsBallotType;
            lhsBallotType = this.getBallotType();
            String rhsBallotType;
            rhsBallotType = that.getBallotType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ballotType", lhsBallotType), LocatorUtils.property(thatLocator, "ballotType", rhsBallotType), lhsBallotType, rhsBallotType)) {
                return false;
            }
        }
        {
            String lhsLabel;
            lhsLabel = this.getLabel();
            String rhsLabel;
            rhsLabel = that.getLabel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "label", lhsLabel), LocatorUtils.property(thatLocator, "label", rhsLabel), lhsLabel, rhsLabel)) {
                return false;
            }
        }
        {
            Date lhsVoteDate;
            lhsVoteDate = this.getVoteDate();
            Date rhsVoteDate;
            rhsVoteDate = that.getVoteDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "voteDate", lhsVoteDate), LocatorUtils.property(thatLocator, "voteDate", rhsVoteDate), lhsVoteDate, rhsVoteDate)) {
                return false;
            }
        }
        {
            BigDecimal lhsAvgBornYear;
            lhsAvgBornYear = this.getAvgBornYear();
            BigDecimal rhsAvgBornYear;
            rhsAvgBornYear = that.getAvgBornYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "avgBornYear", lhsAvgBornYear), LocatorUtils.property(thatLocator, "avgBornYear", rhsAvgBornYear), lhsAvgBornYear, rhsAvgBornYear)) {
                return false;
            }
        }
        {
            long lhsTotalVotes;
            lhsTotalVotes = this.getTotalVotes();
            long rhsTotalVotes;
            rhsTotalVotes = that.getTotalVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalVotes", lhsTotalVotes), LocatorUtils.property(thatLocator, "totalVotes", rhsTotalVotes), lhsTotalVotes, rhsTotalVotes)) {
                return false;
            }
        }
        {
            long lhsYesVotes;
            lhsYesVotes = this.getYesVotes();
            long rhsYesVotes;
            rhsYesVotes = that.getYesVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "yesVotes", lhsYesVotes), LocatorUtils.property(thatLocator, "yesVotes", rhsYesVotes), lhsYesVotes, rhsYesVotes)) {
                return false;
            }
        }
        {
            long lhsNoVotes;
            lhsNoVotes = this.getNoVotes();
            long rhsNoVotes;
            rhsNoVotes = that.getNoVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noVotes", lhsNoVotes), LocatorUtils.property(thatLocator, "noVotes", rhsNoVotes), lhsNoVotes, rhsNoVotes)) {
                return false;
            }
        }
        {
            long lhsAbstainVotes;
            lhsAbstainVotes = this.getAbstainVotes();
            long rhsAbstainVotes;
            rhsAbstainVotes = that.getAbstainVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "abstainVotes", lhsAbstainVotes), LocatorUtils.property(thatLocator, "abstainVotes", rhsAbstainVotes), lhsAbstainVotes, rhsAbstainVotes)) {
                return false;
            }
        }
        {
            long lhsAbsentVotes;
            lhsAbsentVotes = this.getAbsentVotes();
            long rhsAbsentVotes;
            rhsAbsentVotes = that.getAbsentVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "absentVotes", lhsAbsentVotes), LocatorUtils.property(thatLocator, "absentVotes", rhsAbsentVotes), lhsAbsentVotes, rhsAbsentVotes)) {
                return false;
            }
        }
        {
            boolean lhsApproved;
            lhsApproved = this.isApproved();
            boolean rhsApproved;
            rhsApproved = that.isApproved();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "approved", lhsApproved), LocatorUtils.property(thatLocator, "approved", rhsApproved), lhsApproved, rhsApproved)) {
                return false;
            }
        }
        {
            boolean lhsNoWinner;
            lhsNoWinner = this.isNoWinner();
            boolean rhsNoWinner;
            rhsNoWinner = that.isNoWinner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noWinner", lhsNoWinner), LocatorUtils.property(thatLocator, "noWinner", rhsNoWinner), lhsNoWinner, rhsNoWinner)) {
                return false;
            }
        }
        {
            BigDecimal lhsPercentageYes;
            lhsPercentageYes = this.getPercentageYes();
            BigDecimal rhsPercentageYes;
            rhsPercentageYes = that.getPercentageYes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentageYes", lhsPercentageYes), LocatorUtils.property(thatLocator, "percentageYes", rhsPercentageYes), lhsPercentageYes, rhsPercentageYes)) {
                return false;
            }
        }
        {
            BigDecimal lhsPercentageNo;
            lhsPercentageNo = this.getPercentageNo();
            BigDecimal rhsPercentageNo;
            rhsPercentageNo = that.getPercentageNo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentageNo", lhsPercentageNo), LocatorUtils.property(thatLocator, "percentageNo", rhsPercentageNo), lhsPercentageNo, rhsPercentageNo)) {
                return false;
            }
        }
        {
            BigDecimal lhsPercentageAbsent;
            lhsPercentageAbsent = this.getPercentageAbsent();
            BigDecimal rhsPercentageAbsent;
            rhsPercentageAbsent = that.getPercentageAbsent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentageAbsent", lhsPercentageAbsent), LocatorUtils.property(thatLocator, "percentageAbsent", rhsPercentageAbsent), lhsPercentageAbsent, rhsPercentageAbsent)) {
                return false;
            }
        }
        {
            BigDecimal lhsPercentageAbstain;
            lhsPercentageAbstain = this.getPercentageAbstain();
            BigDecimal rhsPercentageAbstain;
            rhsPercentageAbstain = that.getPercentageAbstain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentageAbstain", lhsPercentageAbstain), LocatorUtils.property(thatLocator, "percentageAbstain", rhsPercentageAbstain), lhsPercentageAbstain, rhsPercentageAbstain)) {
                return false;
            }
        }
        {
            BigDecimal lhsPercentageMale;
            lhsPercentageMale = this.getPercentageMale();
            BigDecimal rhsPercentageMale;
            rhsPercentageMale = that.getPercentageMale();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentageMale", lhsPercentageMale), LocatorUtils.property(thatLocator, "percentageMale", rhsPercentageMale), lhsPercentageMale, rhsPercentageMale)) {
                return false;
            }
        }
        {
            BigDecimal lhsPartyAvgBornYear;
            lhsPartyAvgBornYear = this.getPartyAvgBornYear();
            BigDecimal rhsPartyAvgBornYear;
            rhsPartyAvgBornYear = that.getPartyAvgBornYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyAvgBornYear", lhsPartyAvgBornYear), LocatorUtils.property(thatLocator, "partyAvgBornYear", rhsPartyAvgBornYear), lhsPartyAvgBornYear, rhsPartyAvgBornYear)) {
                return false;
            }
        }
        {
            long lhsPartyTotalVotes;
            lhsPartyTotalVotes = this.getPartyTotalVotes();
            long rhsPartyTotalVotes;
            rhsPartyTotalVotes = that.getPartyTotalVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyTotalVotes", lhsPartyTotalVotes), LocatorUtils.property(thatLocator, "partyTotalVotes", rhsPartyTotalVotes), lhsPartyTotalVotes, rhsPartyTotalVotes)) {
                return false;
            }
        }
        {
            long lhsPartyYesVotes;
            lhsPartyYesVotes = this.getPartyYesVotes();
            long rhsPartyYesVotes;
            rhsPartyYesVotes = that.getPartyYesVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyYesVotes", lhsPartyYesVotes), LocatorUtils.property(thatLocator, "partyYesVotes", rhsPartyYesVotes), lhsPartyYesVotes, rhsPartyYesVotes)) {
                return false;
            }
        }
        {
            long lhsPartyNoVotes;
            lhsPartyNoVotes = this.getPartyNoVotes();
            long rhsPartyNoVotes;
            rhsPartyNoVotes = that.getPartyNoVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyNoVotes", lhsPartyNoVotes), LocatorUtils.property(thatLocator, "partyNoVotes", rhsPartyNoVotes), lhsPartyNoVotes, rhsPartyNoVotes)) {
                return false;
            }
        }
        {
            long lhsPartyAbstainVotes;
            lhsPartyAbstainVotes = this.getPartyAbstainVotes();
            long rhsPartyAbstainVotes;
            rhsPartyAbstainVotes = that.getPartyAbstainVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyAbstainVotes", lhsPartyAbstainVotes), LocatorUtils.property(thatLocator, "partyAbstainVotes", rhsPartyAbstainVotes), lhsPartyAbstainVotes, rhsPartyAbstainVotes)) {
                return false;
            }
        }
        {
            long lhsPartyAbsentVotes;
            lhsPartyAbsentVotes = this.getPartyAbsentVotes();
            long rhsPartyAbsentVotes;
            rhsPartyAbsentVotes = that.getPartyAbsentVotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyAbsentVotes", lhsPartyAbsentVotes), LocatorUtils.property(thatLocator, "partyAbsentVotes", rhsPartyAbsentVotes), lhsPartyAbsentVotes, rhsPartyAbsentVotes)) {
                return false;
            }
        }
        {
            boolean lhsPartyApproved;
            lhsPartyApproved = this.isPartyApproved();
            boolean rhsPartyApproved;
            rhsPartyApproved = that.isPartyApproved();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyApproved", lhsPartyApproved), LocatorUtils.property(thatLocator, "partyApproved", rhsPartyApproved), lhsPartyApproved, rhsPartyApproved)) {
                return false;
            }
        }
        {
            boolean lhsPartyNoWinner;
            lhsPartyNoWinner = this.isPartyNoWinner();
            boolean rhsPartyNoWinner;
            rhsPartyNoWinner = that.isPartyNoWinner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyNoWinner", lhsPartyNoWinner), LocatorUtils.property(thatLocator, "partyNoWinner", rhsPartyNoWinner), lhsPartyNoWinner, rhsPartyNoWinner)) {
                return false;
            }
        }
        {
            BigDecimal lhsPartyPercentageYes;
            lhsPartyPercentageYes = this.getPartyPercentageYes();
            BigDecimal rhsPartyPercentageYes;
            rhsPartyPercentageYes = that.getPartyPercentageYes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyPercentageYes", lhsPartyPercentageYes), LocatorUtils.property(thatLocator, "partyPercentageYes", rhsPartyPercentageYes), lhsPartyPercentageYes, rhsPartyPercentageYes)) {
                return false;
            }
        }
        {
            BigDecimal lhsPartyPercentageNo;
            lhsPartyPercentageNo = this.getPartyPercentageNo();
            BigDecimal rhsPartyPercentageNo;
            rhsPartyPercentageNo = that.getPartyPercentageNo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyPercentageNo", lhsPartyPercentageNo), LocatorUtils.property(thatLocator, "partyPercentageNo", rhsPartyPercentageNo), lhsPartyPercentageNo, rhsPartyPercentageNo)) {
                return false;
            }
        }
        {
            BigDecimal lhsPartyPercentageAbsent;
            lhsPartyPercentageAbsent = this.getPartyPercentageAbsent();
            BigDecimal rhsPartyPercentageAbsent;
            rhsPartyPercentageAbsent = that.getPartyPercentageAbsent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyPercentageAbsent", lhsPartyPercentageAbsent), LocatorUtils.property(thatLocator, "partyPercentageAbsent", rhsPartyPercentageAbsent), lhsPartyPercentageAbsent, rhsPartyPercentageAbsent)) {
                return false;
            }
        }
        {
            BigDecimal lhsPartyPercentageAbstain;
            lhsPartyPercentageAbstain = this.getPartyPercentageAbstain();
            BigDecimal rhsPartyPercentageAbstain;
            rhsPartyPercentageAbstain = that.getPartyPercentageAbstain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyPercentageAbstain", lhsPartyPercentageAbstain), LocatorUtils.property(thatLocator, "partyPercentageAbstain", rhsPartyPercentageAbstain), lhsPartyPercentageAbstain, rhsPartyPercentageAbstain)) {
                return false;
            }
        }
        {
            BigDecimal lhsPartyPercentageMale;
            lhsPartyPercentageMale = this.getPartyPercentageMale();
            BigDecimal rhsPartyPercentageMale;
            rhsPartyPercentageMale = that.getPartyPercentageMale();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "partyPercentageMale", lhsPartyPercentageMale), LocatorUtils.property(thatLocator, "partyPercentageMale", rhsPartyPercentageMale), lhsPartyPercentageMale, rhsPartyPercentageMale)) {
                return false;
            }
        }
        {
            String lhsParty;
            lhsParty = this.getParty();
            String rhsParty;
            rhsParty = that.getParty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "party", lhsParty), LocatorUtils.property(thatLocator, "party", rhsParty), lhsParty, rhsParty)) {
                return false;
            }
        }
        {
            String lhsFirstName;
            lhsFirstName = this.getFirstName();
            String rhsFirstName;
            rhsFirstName = that.getFirstName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firstName", lhsFirstName), LocatorUtils.property(thatLocator, "firstName", rhsFirstName), lhsFirstName, rhsFirstName)) {
                return false;
            }
        }
        {
            String lhsLastName;
            lhsLastName = this.getLastName();
            String rhsLastName;
            rhsLastName = that.getLastName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastName", lhsLastName), LocatorUtils.property(thatLocator, "lastName", rhsLastName), lhsLastName, rhsLastName)) {
                return false;
            }
        }
        {
            int lhsBornYear;
            lhsBornYear = this.getBornYear();
            int rhsBornYear;
            rhsBornYear = that.getBornYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bornYear", lhsBornYear), LocatorUtils.property(thatLocator, "bornYear", rhsBornYear), lhsBornYear, rhsBornYear)) {
                return false;
            }
        }
        {
            String lhsVote;
            lhsVote = this.getVote();
            String rhsVote;
            rhsVote = that.getVote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vote", lhsVote), LocatorUtils.property(thatLocator, "vote", rhsVote), lhsVote, rhsVote)) {
                return false;
            }
        }
        {
            boolean lhsWon;
            lhsWon = this.isWon();
            boolean rhsWon;
            rhsWon = that.isWon();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "won", lhsWon), LocatorUtils.property(thatLocator, "won", rhsWon), lhsWon, rhsWon)) {
                return false;
            }
        }
        {
            boolean lhsRebel;
            lhsRebel = this.isRebel();
            boolean rhsRebel;
            rhsRebel = that.isRebel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rebel", lhsRebel), LocatorUtils.property(thatLocator, "rebel", rhsRebel), lhsRebel, rhsRebel)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ViewRiksdagenCommitteeBallotDecisionPoliticianEmbeddedId theEmbeddedId;
            theEmbeddedId = this.getEmbeddedId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "embeddedId", theEmbeddedId), currentHashCode, theEmbeddedId);
        }
        {
            String theCommitteeReport;
            theCommitteeReport = this.getCommitteeReport();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "committeeReport", theCommitteeReport), currentHashCode, theCommitteeReport);
        }
        {
            String theRm;
            theRm = this.getRm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rm", theRm), currentHashCode, theRm);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        {
            String theSubTitle;
            theSubTitle = this.getSubTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subTitle", theSubTitle), currentHashCode, theSubTitle);
        }
        {
            BigDecimal theEndNumber;
            theEndNumber = this.getEndNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "endNumber", theEndNumber), currentHashCode, theEndNumber);
        }
        {
            String theOrg;
            theOrg = this.getOrg();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "org", theOrg), currentHashCode, theOrg);
        }
        {
            Date theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdDate", theCreatedDate), currentHashCode, theCreatedDate);
        }
        {
            Date thePublicDate;
            thePublicDate = this.getPublicDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publicDate", thePublicDate), currentHashCode, thePublicDate);
        }
        {
            String theBallotId;
            theBallotId = this.getBallotId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ballotId", theBallotId), currentHashCode, theBallotId);
        }
        {
            String theDecisionType;
            theDecisionType = this.getDecisionType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "decisionType", theDecisionType), currentHashCode, theDecisionType);
        }
        {
            String theAgainstProposalParties;
            theAgainstProposalParties = this.getAgainstProposalParties();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "againstProposalParties", theAgainstProposalParties), currentHashCode, theAgainstProposalParties);
        }
        {
            BigDecimal theAgainstProposalNumber;
            theAgainstProposalNumber = this.getAgainstProposalNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "againstProposalNumber", theAgainstProposalNumber), currentHashCode, theAgainstProposalNumber);
        }
        {
            String theWinner;
            theWinner = this.getWinner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "winner", theWinner), currentHashCode, theWinner);
        }
        {
            String theBallotType;
            theBallotType = this.getBallotType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ballotType", theBallotType), currentHashCode, theBallotType);
        }
        {
            String theLabel;
            theLabel = this.getLabel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "label", theLabel), currentHashCode, theLabel);
        }
        {
            Date theVoteDate;
            theVoteDate = this.getVoteDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "voteDate", theVoteDate), currentHashCode, theVoteDate);
        }
        {
            BigDecimal theAvgBornYear;
            theAvgBornYear = this.getAvgBornYear();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "avgBornYear", theAvgBornYear), currentHashCode, theAvgBornYear);
        }
        {
            long theTotalVotes;
            theTotalVotes = this.getTotalVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalVotes", theTotalVotes), currentHashCode, theTotalVotes);
        }
        {
            long theYesVotes;
            theYesVotes = this.getYesVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yesVotes", theYesVotes), currentHashCode, theYesVotes);
        }
        {
            long theNoVotes;
            theNoVotes = this.getNoVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noVotes", theNoVotes), currentHashCode, theNoVotes);
        }
        {
            long theAbstainVotes;
            theAbstainVotes = this.getAbstainVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "abstainVotes", theAbstainVotes), currentHashCode, theAbstainVotes);
        }
        {
            long theAbsentVotes;
            theAbsentVotes = this.getAbsentVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "absentVotes", theAbsentVotes), currentHashCode, theAbsentVotes);
        }
        {
            boolean theApproved;
            theApproved = this.isApproved();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "approved", theApproved), currentHashCode, theApproved);
        }
        {
            boolean theNoWinner;
            theNoWinner = this.isNoWinner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noWinner", theNoWinner), currentHashCode, theNoWinner);
        }
        {
            BigDecimal thePercentageYes;
            thePercentageYes = this.getPercentageYes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentageYes", thePercentageYes), currentHashCode, thePercentageYes);
        }
        {
            BigDecimal thePercentageNo;
            thePercentageNo = this.getPercentageNo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentageNo", thePercentageNo), currentHashCode, thePercentageNo);
        }
        {
            BigDecimal thePercentageAbsent;
            thePercentageAbsent = this.getPercentageAbsent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentageAbsent", thePercentageAbsent), currentHashCode, thePercentageAbsent);
        }
        {
            BigDecimal thePercentageAbstain;
            thePercentageAbstain = this.getPercentageAbstain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentageAbstain", thePercentageAbstain), currentHashCode, thePercentageAbstain);
        }
        {
            BigDecimal thePercentageMale;
            thePercentageMale = this.getPercentageMale();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentageMale", thePercentageMale), currentHashCode, thePercentageMale);
        }
        {
            BigDecimal thePartyAvgBornYear;
            thePartyAvgBornYear = this.getPartyAvgBornYear();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyAvgBornYear", thePartyAvgBornYear), currentHashCode, thePartyAvgBornYear);
        }
        {
            long thePartyTotalVotes;
            thePartyTotalVotes = this.getPartyTotalVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyTotalVotes", thePartyTotalVotes), currentHashCode, thePartyTotalVotes);
        }
        {
            long thePartyYesVotes;
            thePartyYesVotes = this.getPartyYesVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyYesVotes", thePartyYesVotes), currentHashCode, thePartyYesVotes);
        }
        {
            long thePartyNoVotes;
            thePartyNoVotes = this.getPartyNoVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyNoVotes", thePartyNoVotes), currentHashCode, thePartyNoVotes);
        }
        {
            long thePartyAbstainVotes;
            thePartyAbstainVotes = this.getPartyAbstainVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyAbstainVotes", thePartyAbstainVotes), currentHashCode, thePartyAbstainVotes);
        }
        {
            long thePartyAbsentVotes;
            thePartyAbsentVotes = this.getPartyAbsentVotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyAbsentVotes", thePartyAbsentVotes), currentHashCode, thePartyAbsentVotes);
        }
        {
            boolean thePartyApproved;
            thePartyApproved = this.isPartyApproved();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyApproved", thePartyApproved), currentHashCode, thePartyApproved);
        }
        {
            boolean thePartyNoWinner;
            thePartyNoWinner = this.isPartyNoWinner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyNoWinner", thePartyNoWinner), currentHashCode, thePartyNoWinner);
        }
        {
            BigDecimal thePartyPercentageYes;
            thePartyPercentageYes = this.getPartyPercentageYes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyPercentageYes", thePartyPercentageYes), currentHashCode, thePartyPercentageYes);
        }
        {
            BigDecimal thePartyPercentageNo;
            thePartyPercentageNo = this.getPartyPercentageNo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyPercentageNo", thePartyPercentageNo), currentHashCode, thePartyPercentageNo);
        }
        {
            BigDecimal thePartyPercentageAbsent;
            thePartyPercentageAbsent = this.getPartyPercentageAbsent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyPercentageAbsent", thePartyPercentageAbsent), currentHashCode, thePartyPercentageAbsent);
        }
        {
            BigDecimal thePartyPercentageAbstain;
            thePartyPercentageAbstain = this.getPartyPercentageAbstain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyPercentageAbstain", thePartyPercentageAbstain), currentHashCode, thePartyPercentageAbstain);
        }
        {
            BigDecimal thePartyPercentageMale;
            thePartyPercentageMale = this.getPartyPercentageMale();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partyPercentageMale", thePartyPercentageMale), currentHashCode, thePartyPercentageMale);
        }
        {
            String theParty;
            theParty = this.getParty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "party", theParty), currentHashCode, theParty);
        }
        {
            String theFirstName;
            theFirstName = this.getFirstName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firstName", theFirstName), currentHashCode, theFirstName);
        }
        {
            String theLastName;
            theLastName = this.getLastName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastName", theLastName), currentHashCode, theLastName);
        }
        {
            int theBornYear;
            theBornYear = this.getBornYear();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bornYear", theBornYear), currentHashCode, theBornYear);
        }
        {
            String theVote;
            theVote = this.getVote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vote", theVote), currentHashCode, theVote);
        }
        {
            boolean theWon;
            theWon = this.isWon();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "won", theWon), currentHashCode, theWon);
        }
        {
            boolean theRebel;
            theRebel = this.isRebel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rebel", theRebel), currentHashCode, theRebel);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
