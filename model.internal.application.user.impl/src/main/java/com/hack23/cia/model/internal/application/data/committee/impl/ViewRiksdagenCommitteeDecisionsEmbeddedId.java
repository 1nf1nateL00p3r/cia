//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.25 at 12:05:09 AM CET 
//


package com.hack23.cia.model.internal.application.data.committee.impl;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import com.hack23.cia.model.common.api.ModelObject;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ViewRiksdagenCommitteeDecisionsEmbeddedId complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewRiksdagenCommitteeDecisionsEmbeddedId"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="hangar_id" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="issue_nummer" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewRiksdagenCommitteeDecisionsEmbeddedId", propOrder = {
    "id",
    "hangarId",
    "issueNummer"
})
@Embeddable
public class ViewRiksdagenCommitteeDecisionsEmbeddedId
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String id;
    @XmlElement(name = "hangar_id", required = true)
    protected BigDecimal hangarId;
    @XmlElement(name = "issue_nummer", required = true)
    protected BigDecimal issueNummer;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ID", length = 255)
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the hangarId property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "HANGAR_ID", precision = 20, scale = 10)
    public BigDecimal getHangarId() {
        return hangarId;
    }

    /**
     * Sets the value of the hangarId property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setHangarId(BigDecimal value) {
        this.hangarId = value;
    }

    /**
     * Gets the value of the issueNummer property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "ISSUE_NUMMER", precision = 20, scale = 10)
    public BigDecimal getIssueNummer() {
        return issueNummer;
    }

    /**
     * Sets the value of the issueNummer property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setIssueNummer(BigDecimal value) {
        this.issueNummer = value;
    }

    public ViewRiksdagenCommitteeDecisionsEmbeddedId withId(String value) {
        setId(value);
        return this;
    }

    public ViewRiksdagenCommitteeDecisionsEmbeddedId withHangarId(BigDecimal value) {
        setHangarId(value);
        return this;
    }

    public ViewRiksdagenCommitteeDecisionsEmbeddedId withIssueNummer(BigDecimal value) {
        setIssueNummer(value);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            BigDecimal theHangarId;
            theHangarId = this.getHangarId();
            strategy.appendField(locator, this, "hangarId", buffer, theHangarId);
        }
        {
            BigDecimal theIssueNummer;
            theIssueNummer = this.getIssueNummer();
            strategy.appendField(locator, this, "issueNummer", buffer, theIssueNummer);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ViewRiksdagenCommitteeDecisionsEmbeddedId that = ((ViewRiksdagenCommitteeDecisionsEmbeddedId) object);
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            BigDecimal lhsHangarId;
            lhsHangarId = this.getHangarId();
            BigDecimal rhsHangarId;
            rhsHangarId = that.getHangarId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hangarId", lhsHangarId), LocatorUtils.property(thatLocator, "hangarId", rhsHangarId), lhsHangarId, rhsHangarId)) {
                return false;
            }
        }
        {
            BigDecimal lhsIssueNummer;
            lhsIssueNummer = this.getIssueNummer();
            BigDecimal rhsIssueNummer;
            rhsIssueNummer = that.getIssueNummer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "issueNummer", lhsIssueNummer), LocatorUtils.property(thatLocator, "issueNummer", rhsIssueNummer), lhsIssueNummer, rhsIssueNummer)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            BigDecimal theHangarId;
            theHangarId = this.getHangarId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hangarId", theHangarId), currentHashCode, theHangarId);
        }
        {
            BigDecimal theIssueNummer;
            theIssueNummer = this.getIssueNummer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "issueNummer", theIssueNummer), currentHashCode, theIssueNummer);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
