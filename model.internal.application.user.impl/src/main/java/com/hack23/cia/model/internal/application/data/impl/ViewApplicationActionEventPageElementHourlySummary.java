//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.25 at 12:05:09 AM CET 
//


package com.hack23.cia.model.internal.application.data.impl;

import java.io.Serializable;
import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import com.hack23.cia.model.common.api.ModelObject;


/**
 * <p>Java class for ViewApplicationActionEventPageElementHourlySummary complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewApplicationActionEventPageElementHourlySummary"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="embeddedId" type="{http://data.application.internal.model.cia.hack23.com/impl}ApplicationActionEventPageElementPeriodSummaryEmbeddedId"/&gt;
 *         &lt;element name="hits" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="rank" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="rank_percentage" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewApplicationActionEventPageElementHourlySummary", propOrder = {
    "embeddedId",
    "hits",
    "rank",
    "rankPercentage"
})
@Entity(name = "ViewApplicationActionEventPageElementHourlySummary")
@Table(name = "view_application_action_event_page_element_hourly_summary")
@Inheritance(strategy = InheritanceType.JOINED)
public class ViewApplicationActionEventPageElementHourlySummary
    implements Serializable, ModelObject, Equals
{

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@XmlElement(required = true)
    protected ApplicationActionEventPageElementPeriodSummaryEmbeddedId embeddedId;
    protected long hits;
    protected long rank;
    @XmlElement(name = "rank_percentage", required = true)
    protected BigDecimal rankPercentage;

    /**
     * Gets the value of the embeddedId property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationActionEventPageElementPeriodSummaryEmbeddedId }
     *     
     */
    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "createdDate", column = @Column(name = "EMBEDDED_ID_CREATED_DATE")),
        @AttributeOverride(name = "page", column = @Column(name = "EMBEDDED_ID_PAGE")),
        @AttributeOverride(name = "elementId", column = @Column(name = "EMBEDDED_ID_ELEMENT_ID"))
    })
    public ApplicationActionEventPageElementPeriodSummaryEmbeddedId getEmbeddedId() {
        return embeddedId;
    }

    /**
     * Sets the value of the embeddedId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationActionEventPageElementPeriodSummaryEmbeddedId }
     *     
     */
    public void setEmbeddedId(final ApplicationActionEventPageElementPeriodSummaryEmbeddedId value) {
        this.embeddedId = value;
    }

    /**
     * Gets the value of the hits property.
     * 
     */
    @Basic
    @Column(name = "HITS", precision = 20, scale = 0)
    public long getHits() {
        return hits;
    }

    /**
     * Sets the value of the hits property.
     * 
     */
    public void setHits(final long value) {
        this.hits = value;
    }

    /**
     * Gets the value of the rank property.
     * 
     */
    @Basic
    @Column(name = "RANK", precision = 20, scale = 0)
    public long getRank() {
        return rank;
    }

    /**
     * Sets the value of the rank property.
     * 
     */
    public void setRank(final long value) {
        this.rank = value;
    }

    /**
     * Gets the value of the rankPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "RANK_PERCENTAGE", precision = 20, scale = 10)
    public BigDecimal getRankPercentage() {
        return rankPercentage;
    }

    /**
     * Sets the value of the rankPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRankPercentage(final BigDecimal value) {
        this.rankPercentage = value;
    }

    public ViewApplicationActionEventPageElementHourlySummary withEmbeddedId(final ApplicationActionEventPageElementPeriodSummaryEmbeddedId value) {
        setEmbeddedId(value);
        return this;
    }

    public ViewApplicationActionEventPageElementHourlySummary withHits(final long value) {
        setHits(value);
        return this;
    }

    public ViewApplicationActionEventPageElementHourlySummary withRank(final long value) {
        setRank(value);
        return this;
    }

    public ViewApplicationActionEventPageElementHourlySummary withRankPercentage(final BigDecimal value) {
        setRankPercentage(value);
        return this;
    }

	@Override
	public final String toString() {
		return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
	}


    public boolean equals(final ObjectLocator thisLocator, final ObjectLocator thatLocator, final Object object, final EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ViewApplicationActionEventPageElementHourlySummary that = ((ViewApplicationActionEventPageElementHourlySummary) object);
        {
            ApplicationActionEventPageElementPeriodSummaryEmbeddedId lhsEmbeddedId;
            lhsEmbeddedId = this.getEmbeddedId();
            ApplicationActionEventPageElementPeriodSummaryEmbeddedId rhsEmbeddedId;
            rhsEmbeddedId = that.getEmbeddedId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "embeddedId", lhsEmbeddedId), LocatorUtils.property(thatLocator, "embeddedId", rhsEmbeddedId), lhsEmbeddedId, rhsEmbeddedId)) {
                return false;
            }
        }
        {
            long lhsHits;
            lhsHits = this.getHits();
            long rhsHits;
            rhsHits = that.getHits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hits", lhsHits), LocatorUtils.property(thatLocator, "hits", rhsHits), lhsHits, rhsHits)) {
                return false;
            }
        }
        {
            long lhsRank;
            lhsRank = this.getRank();
            long rhsRank;
            rhsRank = that.getRank();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rank", lhsRank), LocatorUtils.property(thatLocator, "rank", rhsRank), lhsRank, rhsRank)) {
                return false;
            }
        }
        {
            BigDecimal lhsRankPercentage;
            lhsRankPercentage = this.getRankPercentage();
            BigDecimal rhsRankPercentage;
            rhsRankPercentage = that.getRankPercentage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rankPercentage", lhsRankPercentage), LocatorUtils.property(thatLocator, "rankPercentage", rhsRankPercentage), lhsRankPercentage, rhsRankPercentage)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(final Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

	@Override
	public final int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

}
