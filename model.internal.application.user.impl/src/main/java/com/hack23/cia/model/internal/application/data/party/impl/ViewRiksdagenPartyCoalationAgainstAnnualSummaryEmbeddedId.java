//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.25 at 12:05:09 AM CET 
//


package com.hack23.cia.model.internal.application.data.party.impl;

import java.io.Serializable;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import com.hack23.cia.model.common.api.ModelObject;


/**
 * <p>Java class for ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="year" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="group_against" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId", propOrder = {
    "year",
    "groupAgainst"
})
@Embeddable
public class ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId
    implements Serializable, ModelObject, Equals
{

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected int year;
    @XmlElement(name = "group_against", required = true)
    protected String groupAgainst;

    /**
     * Gets the value of the year property.
     * 
     */
    @Basic
    @Column(name = "YEAR_", precision = 10, scale = 0)
    public int getYear() {
        return year;
    }

    /**
     * Sets the value of the year property.
     * 
     */
    public void setYear(final int value) {
        this.year = value;
    }

    /**
     * Gets the value of the groupAgainst property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GROUP_AGAINST")
    public String getGroupAgainst() {
        return groupAgainst;
    }

    /**
     * Sets the value of the groupAgainst property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGroupAgainst(final String value) {
        this.groupAgainst = value;
    }

    public ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId withYear(final int value) {
        setYear(value);
        return this;
    }

    public ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId withGroupAgainst(final String value) {
        setGroupAgainst(value);
        return this;
    }

	@Override
	public final String toString() {
		return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
	}


    public boolean equals(final ObjectLocator thisLocator, final ObjectLocator thatLocator, final Object object, final EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId that = ((ViewRiksdagenPartyCoalationAgainstAnnualSummaryEmbeddedId) object);
        {
            int lhsYear;
            lhsYear = this.getYear();
            int rhsYear;
            rhsYear = that.getYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "year", lhsYear), LocatorUtils.property(thatLocator, "year", rhsYear), lhsYear, rhsYear)) {
                return false;
            }
        }
        {
            String lhsGroupAgainst;
            lhsGroupAgainst = this.getGroupAgainst();
            String rhsGroupAgainst;
            rhsGroupAgainst = that.getGroupAgainst();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "groupAgainst", lhsGroupAgainst), LocatorUtils.property(thatLocator, "groupAgainst", rhsGroupAgainst), lhsGroupAgainst, rhsGroupAgainst)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(final Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

	@Override
	public final int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

}
