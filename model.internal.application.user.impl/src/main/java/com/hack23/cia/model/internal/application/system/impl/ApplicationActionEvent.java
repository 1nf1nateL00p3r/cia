//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.25 at 12:05:09 AM CET 
//


package com.hack23.cia.model.internal.application.system.impl;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.hack23.cia.model.common.api.ModelObject;
import com.hack23.cia.model.common.impl.xml.XmlDateTimeTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ApplicationActionEvent complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ApplicationActionEvent"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="modelObjectId" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="modelObjectVersion" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="applicationOperation" type="{http://system.application.internal.model.cia.hack23.com/impl}ApplicationOperationType" minOccurs="0"/&gt;
 *         &lt;element name="eventGroup" type="{http://system.application.internal.model.cia.hack23.com/impl}ApplicationEventGroup" minOccurs="0"/&gt;
 *         &lt;element name="page" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="pageMode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="elementId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="actionName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="sessionId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="userId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="errorMessage" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="applicationMessage" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="createdDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ApplicationActionEvent", propOrder = {
    "modelObjectId",
    "modelObjectVersion",
    "applicationOperation",
    "eventGroup",
    "page",
    "pageMode",
    "elementId",
    "actionName",
    "sessionId",
    "userId",
    "errorMessage",
    "applicationMessage",
    "createdDate"
})
@Entity(name = "ApplicationActionEvent")
@Table(name = "APPLICATION_ACTION_EVENT")
@Inheritance(strategy = InheritanceType.JOINED)
public class ApplicationActionEvent
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    protected Integer modelObjectId;
    protected int modelObjectVersion;
    @XmlSchemaType(name = "string")
    protected ApplicationOperationType applicationOperation;
    @XmlSchemaType(name = "string")
    protected ApplicationEventGroup eventGroup;
    protected String page;
    protected String pageMode;
    protected String elementId;
    protected String actionName;
    protected String sessionId;
    protected String userId;
    protected String errorMessage;
    protected String applicationMessage;
    @XmlElement(type = String.class)
    @XmlJavaTypeAdapter(XmlDateTimeTypeAdapter.class)
    @XmlSchemaType(name = "dateTime")
    protected Date createdDate;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the modelObjectId property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "MODEL_OBJECT_ID", precision = 10, scale = 0)
    public Integer getModelObjectId() {
        return modelObjectId;
    }

    /**
     * Sets the value of the modelObjectId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setModelObjectId(Integer value) {
        this.modelObjectId = value;
    }

    /**
     * Gets the value of the modelObjectVersion property.
     * 
     */
    @Version
    @Column(name = "MODEL_OBJECT_VERSION")
    public int getModelObjectVersion() {
        return modelObjectVersion;
    }

    /**
     * Sets the value of the modelObjectVersion property.
     * 
     */
    public void setModelObjectVersion(int value) {
        this.modelObjectVersion = value;
    }

    /**
     * Gets the value of the applicationOperation property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationOperationType }
     *     
     */
    @Basic
    @Column(name = "APPLICATION_OPERATION", length = 255)
    @Enumerated(EnumType.STRING)
    public ApplicationOperationType getApplicationOperation() {
        return applicationOperation;
    }

    /**
     * Sets the value of the applicationOperation property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationOperationType }
     *     
     */
    public void setApplicationOperation(ApplicationOperationType value) {
        this.applicationOperation = value;
    }

    /**
     * Gets the value of the eventGroup property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationEventGroup }
     *     
     */
    @Basic
    @Column(name = "EVENT_GROUP", length = 255)
    @Enumerated(EnumType.STRING)
    public ApplicationEventGroup getEventGroup() {
        return eventGroup;
    }

    /**
     * Sets the value of the eventGroup property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationEventGroup }
     *     
     */
    public void setEventGroup(ApplicationEventGroup value) {
        this.eventGroup = value;
    }

    /**
     * Gets the value of the page property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PAGE", length = 255)
    public String getPage() {
        return page;
    }

    /**
     * Sets the value of the page property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPage(String value) {
        this.page = value;
    }

    /**
     * Gets the value of the pageMode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PAGE_MODE", length = 255)
    public String getPageMode() {
        return pageMode;
    }

    /**
     * Sets the value of the pageMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPageMode(String value) {
        this.pageMode = value;
    }

    /**
     * Gets the value of the elementId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ELEMENT_ID", length = 255)
    public String getElementId() {
        return elementId;
    }

    /**
     * Sets the value of the elementId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setElementId(String value) {
        this.elementId = value;
    }

    /**
     * Gets the value of the actionName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ACTION_NAME", length = 255)
    public String getActionName() {
        return actionName;
    }

    /**
     * Sets the value of the actionName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActionName(String value) {
        this.actionName = value;
    }

    /**
     * Gets the value of the sessionId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SESSION_ID", length = 255)
    public String getSessionId() {
        return sessionId;
    }

    /**
     * Sets the value of the sessionId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSessionId(String value) {
        this.sessionId = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "USER_ID", length = 255)
    public String getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserId(String value) {
        this.userId = value;
    }

    /**
     * Gets the value of the errorMessage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ERROR_MESSAGE", length = 8192)
    public String getErrorMessage() {
        return errorMessage;
    }

    /**
     * Sets the value of the errorMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setErrorMessage(String value) {
        this.errorMessage = value;
    }

    /**
     * Gets the value of the applicationMessage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "APPLICATION_MESSAGE", length = 255)
    public String getApplicationMessage() {
        return applicationMessage;
    }

    /**
     * Sets the value of the applicationMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setApplicationMessage(String value) {
        this.applicationMessage = value;
    }

    /**
     * Gets the value of the createdDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CREATED_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getCreatedDate() {
        return createdDate;
    }

    /**
     * Sets the value of the createdDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreatedDate(Date value) {
        this.createdDate = value;
    }

    public ApplicationActionEvent withModelObjectId(Integer value) {
        setModelObjectId(value);
        return this;
    }

    public ApplicationActionEvent withModelObjectVersion(int value) {
        setModelObjectVersion(value);
        return this;
    }

    public ApplicationActionEvent withApplicationOperation(ApplicationOperationType value) {
        setApplicationOperation(value);
        return this;
    }

    public ApplicationActionEvent withEventGroup(ApplicationEventGroup value) {
        setEventGroup(value);
        return this;
    }

    public ApplicationActionEvent withPage(String value) {
        setPage(value);
        return this;
    }

    public ApplicationActionEvent withPageMode(String value) {
        setPageMode(value);
        return this;
    }

    public ApplicationActionEvent withElementId(String value) {
        setElementId(value);
        return this;
    }

    public ApplicationActionEvent withActionName(String value) {
        setActionName(value);
        return this;
    }

    public ApplicationActionEvent withSessionId(String value) {
        setSessionId(value);
        return this;
    }

    public ApplicationActionEvent withUserId(String value) {
        setUserId(value);
        return this;
    }

    public ApplicationActionEvent withErrorMessage(String value) {
        setErrorMessage(value);
        return this;
    }

    public ApplicationActionEvent withApplicationMessage(String value) {
        setApplicationMessage(value);
        return this;
    }

    public ApplicationActionEvent withCreatedDate(Date value) {
        setCreatedDate(value);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Integer theModelObjectId;
            theModelObjectId = this.getModelObjectId();
            strategy.appendField(locator, this, "modelObjectId", buffer, theModelObjectId);
        }
        {
            int theModelObjectVersion;
            theModelObjectVersion = this.getModelObjectVersion();
            strategy.appendField(locator, this, "modelObjectVersion", buffer, theModelObjectVersion);
        }
        {
            ApplicationOperationType theApplicationOperation;
            theApplicationOperation = this.getApplicationOperation();
            strategy.appendField(locator, this, "applicationOperation", buffer, theApplicationOperation);
        }
        {
            ApplicationEventGroup theEventGroup;
            theEventGroup = this.getEventGroup();
            strategy.appendField(locator, this, "eventGroup", buffer, theEventGroup);
        }
        {
            String thePage;
            thePage = this.getPage();
            strategy.appendField(locator, this, "page", buffer, thePage);
        }
        {
            String thePageMode;
            thePageMode = this.getPageMode();
            strategy.appendField(locator, this, "pageMode", buffer, thePageMode);
        }
        {
            String theElementId;
            theElementId = this.getElementId();
            strategy.appendField(locator, this, "elementId", buffer, theElementId);
        }
        {
            String theActionName;
            theActionName = this.getActionName();
            strategy.appendField(locator, this, "actionName", buffer, theActionName);
        }
        {
            String theSessionId;
            theSessionId = this.getSessionId();
            strategy.appendField(locator, this, "sessionId", buffer, theSessionId);
        }
        {
            String theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            String theErrorMessage;
            theErrorMessage = this.getErrorMessage();
            strategy.appendField(locator, this, "errorMessage", buffer, theErrorMessage);
        }
        {
            String theApplicationMessage;
            theApplicationMessage = this.getApplicationMessage();
            strategy.appendField(locator, this, "applicationMessage", buffer, theApplicationMessage);
        }
        {
            Date theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            strategy.appendField(locator, this, "createdDate", buffer, theCreatedDate);
        }
        return buffer;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ApplicationActionEvent that = ((ApplicationActionEvent) object);
        {
            Integer lhsModelObjectId;
            lhsModelObjectId = this.getModelObjectId();
            Integer rhsModelObjectId;
            rhsModelObjectId = that.getModelObjectId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modelObjectId", lhsModelObjectId), LocatorUtils.property(thatLocator, "modelObjectId", rhsModelObjectId), lhsModelObjectId, rhsModelObjectId)) {
                return false;
            }
        }
        {
            int lhsModelObjectVersion;
            lhsModelObjectVersion = this.getModelObjectVersion();
            int rhsModelObjectVersion;
            rhsModelObjectVersion = that.getModelObjectVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modelObjectVersion", lhsModelObjectVersion), LocatorUtils.property(thatLocator, "modelObjectVersion", rhsModelObjectVersion), lhsModelObjectVersion, rhsModelObjectVersion)) {
                return false;
            }
        }
        {
            ApplicationOperationType lhsApplicationOperation;
            lhsApplicationOperation = this.getApplicationOperation();
            ApplicationOperationType rhsApplicationOperation;
            rhsApplicationOperation = that.getApplicationOperation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applicationOperation", lhsApplicationOperation), LocatorUtils.property(thatLocator, "applicationOperation", rhsApplicationOperation), lhsApplicationOperation, rhsApplicationOperation)) {
                return false;
            }
        }
        {
            ApplicationEventGroup lhsEventGroup;
            lhsEventGroup = this.getEventGroup();
            ApplicationEventGroup rhsEventGroup;
            rhsEventGroup = that.getEventGroup();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventGroup", lhsEventGroup), LocatorUtils.property(thatLocator, "eventGroup", rhsEventGroup), lhsEventGroup, rhsEventGroup)) {
                return false;
            }
        }
        {
            String lhsPage;
            lhsPage = this.getPage();
            String rhsPage;
            rhsPage = that.getPage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "page", lhsPage), LocatorUtils.property(thatLocator, "page", rhsPage), lhsPage, rhsPage)) {
                return false;
            }
        }
        {
            String lhsPageMode;
            lhsPageMode = this.getPageMode();
            String rhsPageMode;
            rhsPageMode = that.getPageMode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pageMode", lhsPageMode), LocatorUtils.property(thatLocator, "pageMode", rhsPageMode), lhsPageMode, rhsPageMode)) {
                return false;
            }
        }
        {
            String lhsElementId;
            lhsElementId = this.getElementId();
            String rhsElementId;
            rhsElementId = that.getElementId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "elementId", lhsElementId), LocatorUtils.property(thatLocator, "elementId", rhsElementId), lhsElementId, rhsElementId)) {
                return false;
            }
        }
        {
            String lhsActionName;
            lhsActionName = this.getActionName();
            String rhsActionName;
            rhsActionName = that.getActionName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "actionName", lhsActionName), LocatorUtils.property(thatLocator, "actionName", rhsActionName), lhsActionName, rhsActionName)) {
                return false;
            }
        }
        {
            String lhsSessionId;
            lhsSessionId = this.getSessionId();
            String rhsSessionId;
            rhsSessionId = that.getSessionId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sessionId", lhsSessionId), LocatorUtils.property(thatLocator, "sessionId", rhsSessionId), lhsSessionId, rhsSessionId)) {
                return false;
            }
        }
        {
            String lhsUserId;
            lhsUserId = this.getUserId();
            String rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            String lhsErrorMessage;
            lhsErrorMessage = this.getErrorMessage();
            String rhsErrorMessage;
            rhsErrorMessage = that.getErrorMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "errorMessage", lhsErrorMessage), LocatorUtils.property(thatLocator, "errorMessage", rhsErrorMessage), lhsErrorMessage, rhsErrorMessage)) {
                return false;
            }
        }
        {
            String lhsApplicationMessage;
            lhsApplicationMessage = this.getApplicationMessage();
            String rhsApplicationMessage;
            rhsApplicationMessage = that.getApplicationMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applicationMessage", lhsApplicationMessage), LocatorUtils.property(thatLocator, "applicationMessage", rhsApplicationMessage), lhsApplicationMessage, rhsApplicationMessage)) {
                return false;
            }
        }
        {
            Date lhsCreatedDate;
            lhsCreatedDate = this.getCreatedDate();
            Date rhsCreatedDate;
            rhsCreatedDate = that.getCreatedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdDate", lhsCreatedDate), LocatorUtils.property(thatLocator, "createdDate", rhsCreatedDate), lhsCreatedDate, rhsCreatedDate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Integer theModelObjectId;
            theModelObjectId = this.getModelObjectId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modelObjectId", theModelObjectId), currentHashCode, theModelObjectId);
        }
        {
            int theModelObjectVersion;
            theModelObjectVersion = this.getModelObjectVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modelObjectVersion", theModelObjectVersion), currentHashCode, theModelObjectVersion);
        }
        {
            ApplicationOperationType theApplicationOperation;
            theApplicationOperation = this.getApplicationOperation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applicationOperation", theApplicationOperation), currentHashCode, theApplicationOperation);
        }
        {
            ApplicationEventGroup theEventGroup;
            theEventGroup = this.getEventGroup();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventGroup", theEventGroup), currentHashCode, theEventGroup);
        }
        {
            String thePage;
            thePage = this.getPage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "page", thePage), currentHashCode, thePage);
        }
        {
            String thePageMode;
            thePageMode = this.getPageMode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pageMode", thePageMode), currentHashCode, thePageMode);
        }
        {
            String theElementId;
            theElementId = this.getElementId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "elementId", theElementId), currentHashCode, theElementId);
        }
        {
            String theActionName;
            theActionName = this.getActionName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "actionName", theActionName), currentHashCode, theActionName);
        }
        {
            String theSessionId;
            theSessionId = this.getSessionId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sessionId", theSessionId), currentHashCode, theSessionId);
        }
        {
            String theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            String theErrorMessage;
            theErrorMessage = this.getErrorMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "errorMessage", theErrorMessage), currentHashCode, theErrorMessage);
        }
        {
            String theApplicationMessage;
            theApplicationMessage = this.getApplicationMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applicationMessage", theApplicationMessage), currentHashCode, theApplicationMessage);
        }
        {
            Date theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdDate", theCreatedDate), currentHashCode, theCreatedDate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
