//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.25 at 12:05:09 AM CET 
//


package com.hack23.cia.model.internal.application.system.impl;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import com.hack23.cia.model.common.api.ModelObject;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for Portal complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Portal"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="modelObjectId" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *         &lt;element name="modelObjectVersion" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *         &lt;element name="portalName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="portalType" type="{http://system.application.internal.model.cia.hack23.com/impl}PortalType" minOccurs="0"/&gt;
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="googleMapApiKey" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Portal", propOrder = {
    "modelObjectId",
    "modelObjectVersion",
    "portalName",
    "portalType",
    "description",
    "googleMapApiKey"
})
@XmlSeeAlso({
    DomainPortal.class
})
@Entity(name = "Portal")
@Table(name = "PORTAL")
@Inheritance(strategy = InheritanceType.JOINED)
public class Portal
    implements Serializable, ModelObject, Equals, HashCode, ToString
{

    protected Integer modelObjectId;
    protected int modelObjectVersion;
    protected String portalName;
    @XmlSchemaType(name = "string")
    protected PortalType portalType;
    protected String description;
    protected String googleMapApiKey;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the modelObjectId property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @Basic
    @Column(name = "MODEL_OBJECT_ID", precision = 10, scale = 0)
    public Integer getModelObjectId() {
        return modelObjectId;
    }

    /**
     * Sets the value of the modelObjectId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setModelObjectId(Integer value) {
        this.modelObjectId = value;
    }

    /**
     * Gets the value of the modelObjectVersion property.
     * 
     */
    @Version
    @Column(name = "MODEL_OBJECT_VERSION")
    public int getModelObjectVersion() {
        return modelObjectVersion;
    }

    /**
     * Sets the value of the modelObjectVersion property.
     * 
     */
    public void setModelObjectVersion(int value) {
        this.modelObjectVersion = value;
    }

    /**
     * Gets the value of the portalName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PORTAL_NAME", length = 255)
    public String getPortalName() {
        return portalName;
    }

    /**
     * Sets the value of the portalName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPortalName(String value) {
        this.portalName = value;
    }

    /**
     * Gets the value of the portalType property.
     * 
     * @return
     *     possible object is
     *     {@link PortalType }
     *     
     */
    @Basic
    @Column(name = "PORTAL_TYPE", length = 255)
    @Enumerated(EnumType.STRING)
    public PortalType getPortalType() {
        return portalType;
    }

    /**
     * Sets the value of the portalType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortalType }
     *     
     */
    public void setPortalType(PortalType value) {
        this.portalType = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DESCRIPTION", length = 255)
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the googleMapApiKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GOOGLE_MAP_API_KEY", length = 255)
    public String getGoogleMapApiKey() {
        return googleMapApiKey;
    }

    /**
     * Sets the value of the googleMapApiKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGoogleMapApiKey(String value) {
        this.googleMapApiKey = value;
    }

    public Portal withModelObjectId(Integer value) {
        setModelObjectId(value);
        return this;
    }

    public Portal withModelObjectVersion(int value) {
        setModelObjectVersion(value);
        return this;
    }

    public Portal withPortalName(String value) {
        setPortalName(value);
        return this;
    }

    public Portal withPortalType(PortalType value) {
        setPortalType(value);
        return this;
    }

    public Portal withDescription(String value) {
        setDescription(value);
        return this;
    }

    public Portal withGoogleMapApiKey(String value) {
        setGoogleMapApiKey(value);
        return this;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Integer theModelObjectId;
            theModelObjectId = this.getModelObjectId();
            strategy.appendField(locator, this, "modelObjectId", buffer, theModelObjectId);
        }
        {
            int theModelObjectVersion;
            theModelObjectVersion = this.getModelObjectVersion();
            strategy.appendField(locator, this, "modelObjectVersion", buffer, theModelObjectVersion);
        }
        {
            String thePortalName;
            thePortalName = this.getPortalName();
            strategy.appendField(locator, this, "portalName", buffer, thePortalName);
        }
        {
            PortalType thePortalType;
            thePortalType = this.getPortalType();
            strategy.appendField(locator, this, "portalType", buffer, thePortalType);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            String theGoogleMapApiKey;
            theGoogleMapApiKey = this.getGoogleMapApiKey();
            strategy.appendField(locator, this, "googleMapApiKey", buffer, theGoogleMapApiKey);
        }
        return buffer;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Portal that = ((Portal) object);
        {
            Integer lhsModelObjectId;
            lhsModelObjectId = this.getModelObjectId();
            Integer rhsModelObjectId;
            rhsModelObjectId = that.getModelObjectId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modelObjectId", lhsModelObjectId), LocatorUtils.property(thatLocator, "modelObjectId", rhsModelObjectId), lhsModelObjectId, rhsModelObjectId)) {
                return false;
            }
        }
        {
            int lhsModelObjectVersion;
            lhsModelObjectVersion = this.getModelObjectVersion();
            int rhsModelObjectVersion;
            rhsModelObjectVersion = that.getModelObjectVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modelObjectVersion", lhsModelObjectVersion), LocatorUtils.property(thatLocator, "modelObjectVersion", rhsModelObjectVersion), lhsModelObjectVersion, rhsModelObjectVersion)) {
                return false;
            }
        }
        {
            String lhsPortalName;
            lhsPortalName = this.getPortalName();
            String rhsPortalName;
            rhsPortalName = that.getPortalName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portalName", lhsPortalName), LocatorUtils.property(thatLocator, "portalName", rhsPortalName), lhsPortalName, rhsPortalName)) {
                return false;
            }
        }
        {
            PortalType lhsPortalType;
            lhsPortalType = this.getPortalType();
            PortalType rhsPortalType;
            rhsPortalType = that.getPortalType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portalType", lhsPortalType), LocatorUtils.property(thatLocator, "portalType", rhsPortalType), lhsPortalType, rhsPortalType)) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            String lhsGoogleMapApiKey;
            lhsGoogleMapApiKey = this.getGoogleMapApiKey();
            String rhsGoogleMapApiKey;
            rhsGoogleMapApiKey = that.getGoogleMapApiKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "googleMapApiKey", lhsGoogleMapApiKey), LocatorUtils.property(thatLocator, "googleMapApiKey", rhsGoogleMapApiKey), lhsGoogleMapApiKey, rhsGoogleMapApiKey)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Integer theModelObjectId;
            theModelObjectId = this.getModelObjectId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modelObjectId", theModelObjectId), currentHashCode, theModelObjectId);
        }
        {
            int theModelObjectVersion;
            theModelObjectVersion = this.getModelObjectVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modelObjectVersion", theModelObjectVersion), currentHashCode, theModelObjectVersion);
        }
        {
            String thePortalName;
            thePortalName = this.getPortalName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portalName", thePortalName), currentHashCode, thePortalName);
        }
        {
            PortalType thePortalType;
            thePortalType = this.getPortalType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portalType", thePortalType), currentHashCode, thePortalType);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            String theGoogleMapApiKey;
            theGoogleMapApiKey = this.getGoogleMapApiKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "googleMapApiKey", theGoogleMapApiKey), currentHashCode, theGoogleMapApiKey);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
