<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.2.xsd">

	<property name="clob.type" value="clob" dbms="oracle" />
	<property name="clob.type" value="longtext" dbms="mysql" />
	<property name="clob.type" value="text" dbms="postgresql" />


	<changeSet author="pether (generated)" id="1414872417007-1">
		<createSequence sequenceName="hibernate_sequence" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-2">
		<createTable tableName="against_proposal_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-3">
		<createTable tableName="against_proposal_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="header" type="VARCHAR(255)" />
			<column name="number_value" type="numeric" />
			<column name="parties" type="VARCHAR(255)" />
			<column name="proposal_issue_number" type="numeric" />
			<column name="proposal_type" type="VARCHAR(255)" />
			<column name="against_proposal_list_agains_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-4">
		<createTable tableName="agency">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="agency_name" type="VARCHAR(255)" />
			<column name="description" type="VARCHAR(255)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-5">
		<createTable tableName="aggregated_bug_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="country" type="VARCHAR(255)" />
			<column name="id" type="VARCHAR(255)" />
			<column name="party" type="VARCHAR(255)" />
			<column name="politican_name" type="VARCHAR(255)" />
			<column name="politician_type" type="VARCHAR(255)" />
			<column name="ref_key" type="VARCHAR(255)" />
			<column name="sweden_aggregated_bug_data_id" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-6">
		<createTable tableName="aggregated_country_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="country_type" type="VARCHAR(255)" />
			<column name="country_aggregated_country_d_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-7">
		<createTable tableName="application_action_event">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="application_operation" type="VARCHAR(255)" />
			<column name="created_date" type="TIMESTAMP WITHOUT TIME ZONE" />
			<column name="event_group" type="VARCHAR(255)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
			<column name="events_application_session_h_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-8">
		<createTable tableName="application_session">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="created_date" type="TIMESTAMP WITHOUT TIME ZONE" />
			<column name="ip_information" type="VARCHAR(255)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
			<column name="session_type" type="VARCHAR(255)" />
			<column name="user_agent_information" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-9">
		<createTable tableName="application_view">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="perspective" type="VARCHAR(255)" />
			<column name="data_source_information_appl_0" type="INT8" />
			<column name="operational_information_appl_0" type="INT8" />
			<column name="performance_indicators_appli_0" type="INT8" />
			<column name="quality_assurance_applicatio_0" type="INT8" />
			<column name="target_profile_application_v_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-10">
		<createTable tableName="assignment_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="assignment_type" type="VARCHAR(255)" />
			<column name="detail" type="VARCHAR(65536)" />
			<column name="from_date" type="date" />
			<column name="intressent_id" type="VARCHAR(255)" />
			<column name="order_number" type="VARCHAR(255)" />
			<column name="org_code" type="VARCHAR(255)" />
			<column name="role_code" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="to_date" type="date" />
			<column name="assignment_list_person_assig_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-11">
		<createTable tableName="assignment_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="assignment_type" type="VARCHAR(255)" />
			<column name="detail" type="VARCHAR(65536)" />
			<column name="from_date" type="date" />
			<column name="intressent_id" type="VARCHAR(255)" />
			<column name="order_number" type="VARCHAR(255)" />
			<column name="org_code" type="VARCHAR(255)" />
			<column name="role_code" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="to_date" type="date" />
			<column name="uppdrag_person_assignment_el_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-12">
		<createTable tableName="committee_document_data">
			<column name="id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="committee_proposal_url_xml" type="VARCHAR(255)" />
			<column name="created_date" type="date" />
			<column name="document_status_url_www" type="VARCHAR(255)" />
			<column name="document_status_url_xml" type="VARCHAR(255)" />
			<column name="document_url_html" type="VARCHAR(255)" />
			<column name="document_url_text" type="VARCHAR(255)" />
			<column name="end_number" type="numeric" />
			<column name="hangar_id" type="numeric" />
			<column name="label" type="VARCHAR(255)" />
			<column name="org" type="VARCHAR(255)" />
			<column name="public_date" type="date" />
			<column name="rm" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="sub_title" type="VARCHAR(255)" />
			<column name="sub_type" type="VARCHAR(255)" />
			<column name="temp_label" type="VARCHAR(255)" />
			<column name="title" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-13">
		<createTable tableName="committee_proposal_component_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="against_proposal_container_c_0" type="INT8" />
			<column name="committee_proposal_container_0" type="INT8" />
			<column name="document_committee_proposal__0" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-14">
		<createTable tableName="committee_proposal_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-15">
		<createTable tableName="committee_proposal_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="against_proposal_number" type="numeric" />
			<column name="against_proposal_parties" type="VARCHAR(255)" />
			<column name="ballot_id" type="VARCHAR(255)" />
			<column name="ballot_summary_item" type="TEXT" />
			<column name="ballot_url_xml" type="VARCHAR(255)" />
			<column name="committee_report" type="VARCHAR(255)" />
			<column name="decision_type" type="VARCHAR(255)" />
			<column name="header" type="VARCHAR(255)" />
			<column name="issue_number" type="numeric" />
			<column name="proposal" type="VARCHAR(10485760)" />
			<column name="rm" type="VARCHAR(255)" />
			<column name="winner" type="VARCHAR(255)" />
			<column name="committee_proposal_list_comm_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-16">
		<createTable tableName="countries_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="page" type="numeric" />
			<column name="pages" type="numeric" />
			<column name="per_page" type="numeric" />
			<column name="total" type="numeric" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-17">
		<createTable tableName="country_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="adminregion_id" type="VARCHAR(255)" />
			<column name="adminregion_value" type="VARCHAR(255)" />
			<column name="capital_city" type="VARCHAR(255)" />
			<column name="country_name" type="VARCHAR(255)" />
			<column name="id" type="VARCHAR(255)" />
			<column name="income_level_id" type="VARCHAR(255)" />
			<column name="income_level_value" type="VARCHAR(255)" />
			<column name="iso_2code" type="VARCHAR(255)" />
			<column name="latitude" type="VARCHAR(255)" />
			<column name="lending_type_id" type="VARCHAR(255)" />
			<column name="lending_type_value" type="VARCHAR(255)" />
			<column name="longitude" type="VARCHAR(255)" />
			<column name="region_id" type="VARCHAR(255)" />
			<column name="region_value" type="VARCHAR(255)" />
			<column name="country_countries_element_hj_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-18">
		<createTable tableName="data_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="page" type="numeric" />
			<column name="pages" type="numeric" />
			<column name="per_page" type="numeric" />
			<column name="total" type="numeric" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-19">
		<createTable tableName="data_source_content">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-20">
		<createTable tableName="detail_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="VARCHAR(255)" />
			<column name="detail" type="VARCHAR(65536)" />
			<column name="detail_type" type="VARCHAR(255)" />
			<column name="intressent_id" type="VARCHAR(255)" />
			<column name="detail_list_person_detail_da_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-21">
		<createTable tableName="detail_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="VARCHAR(255)" />
			<column name="detail" type="VARCHAR(65536)" />
			<column name="detail_type" type="VARCHAR(255)" />
			<column name="intressent_id" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-22">
		<createTable tableName="document_activity_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-23">
		<createTable tableName="document_activity_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="activity_name" type="VARCHAR(255)" />
			<column name="code" type="VARCHAR(255)" />
			<column name="created_date" type="date" />
			<column name="order_number" type="numeric" />
			<column name="process" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="document_activities_document_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-24">
		<createTable tableName="document_attachment">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="file_name" type="VARCHAR(255)" />
			<column name="file_size" type="numeric" />
			<column name="file_type" type="VARCHAR(255)" />
			<column name="file_url" type="VARCHAR(255)" />
			<column name="document_attachment_list_doc_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-25">
		<createTable tableName="document_attachment_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-26">
		<createTable tableName="document_container_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="created" type="VARCHAR(255)" />
			<column name="datum" type="VARCHAR(255)" />
			<column name="debug" type="VARCHAR(255)" />
			<column name="document_version" type="VARCHAR(255)" />
			<column name="hits" type="numeric" />
			<column name="hits_from" type="numeric" />
			<column name="hits_to" type="numeric" />
			<column name="next_page" type="VARCHAR(255)" />
			<column name="page" type="numeric" />
			<column name="total_pages" type="numeric" />
			<column name="warning" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-27">
		<createTable tableName="document_content_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="content" type="VARCHAR(10485760)" />
			<column name="id" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-28">
		<createTable tableName="document_data">
			<column name="id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="committee_report_url_xml" type="VARCHAR(255)" />
			<column name="document_status_url_www" type="VARCHAR(255)" />
			<column name="document_status_url_xml" type="VARCHAR(255)" />
			<column name="document_type" type="VARCHAR(255)" />
			<column name="document_url_html" type="VARCHAR(255)" />
			<column name="document_url_text" type="VARCHAR(255)" />
			<column name="final_number" type="numeric" />
			<column name="hangar_id" type="VARCHAR(255)" />
			<column name="label" type="VARCHAR(255)" />
			<column name="made_public_date" type="date" />
			<column name="number_value" type="numeric" />
			<column name="org" type="VARCHAR(255)" />
			<column name="rm" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="sub_title" type="VARCHAR(255)" />
			<column name="sub_type" type="VARCHAR(255)" />
			<column name="temp_label" type="VARCHAR(255)" />
			<column name="title" type="VARCHAR(65536)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-29">
		<createTable tableName="document_detail_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-30">
		<createTable tableName="document_detail_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="VARCHAR(255)" />
			<column name="detail_name" type="VARCHAR(255)" />
			<column name="text" type="VARCHAR(10485760)" />
			<column name="document_detail_list_documen_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-31">
		<createTable tableName="document_element">
			<column name="id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="committee_report_url_xml" type="VARCHAR(255)" />
			<column name="created_date" type="VARCHAR(255)" />
			<column name="document_format" type="VARCHAR(255)" />
			<column name="document_status_url_xml" type="VARCHAR(255)" />
			<column name="document_type" type="VARCHAR(255)" />
			<column name="document_url_html" type="VARCHAR(255)" />
			<column name="document_url_text" type="VARCHAR(255)" />
			<column name="hit" type="numeric" />
			<column name="kall_id" type="VARCHAR(255)" />
			<column name="label" type="VARCHAR(255)" />
			<column name="made_public_date" type="VARCHAR(255)" />
			<column name="number_value" type="numeric" />
			<column name="org" type="VARCHAR(255)" />
			<column name="related_id" type="VARCHAR(255)" />
			<column name="rm" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="sub_title" type="VARCHAR(65536)" />
			<column name="sub_type" type="VARCHAR(255)" />
			<column name="system_date" type="VARCHAR(255)" />
			<column name="temp_label" type="VARCHAR(255)" />
			<column name="title" type="VARCHAR(65536)" />
			<column name="dokument_document_container__0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-32">
		<createTable tableName="document_person_reference_co_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-33">
		<createTable tableName="document_person_reference_da_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="order_number" type="INT4" />
			<column name="party_short_code" type="VARCHAR(255)" />
			<column name="person_reference_id" type="VARCHAR(255)" />
			<column name="reference_name" type="VARCHAR(255)" />
			<column name="role_description" type="VARCHAR(255)" />
			<column name="document_person_reference_li_1" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-34">
		<createTable tableName="document_reference_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-35">
		<createTable tableName="document_reference_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="detail" type="VARCHAR(65536)" />
			<column name="reference_document_id" type="VARCHAR(255)" />
			<column name="reference_type" type="VARCHAR(255)" />
			<column name="document_reference_list_docu_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-36">
		<createTable tableName="document_status_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="document_category" type="VARCHAR(255)" />
			<column name="document_proposal" type="VARCHAR(255)" />
			<column name="document_document_status_con_0" type="VARCHAR(255)" />
			<column name="document_activity_container__0" type="INT8" />
			<column name="document_attachment_containe_0" type="INT8" />
			<column name="document_detail_container_do_0" type="INT8" />
			<column name="document_person_reference_co_1" type="INT8" />
			<column name="document_reference_container_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-37">
		<createTable tableName="domain_portal">
			<column name="domain_name" type="VARCHAR(255)" />
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-38">
		<createTable tableName="indicator_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="id" type="VARCHAR(255)" />
			<column name="indicator_name" type="VARCHAR(255)" />
			<column name="source_id" type="VARCHAR(255)" />
			<column name="source_value" type="VARCHAR(255)" />
			<column name="source_note" type="VARCHAR(65536)" />
			<column name="source_organization" type="VARCHAR(65536)" />
			<column name="topics_indicator_element_hjid" type="INT8" />
			<column name="indicator__indicators_elemen_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-39">
		<createTable tableName="indicators_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="page" type="numeric" />
			<column name="pages" type="numeric" />
			<column name="per_page" type="numeric" />
			<column name="total" type="numeric" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-40">
		<createTable tableName="language_content_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="created_date" type="TIMESTAMP WITHOUT TIME ZONE" />
			<column name="from_language" type="VARCHAR(255)" />
			<column name="language_content_type" type="VARCHAR(255)" />
			<column name="language_value" type="VARCHAR(10485760)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
			<column name="ref_key" type="VARCHAR(10485760)" />
			<column name="to_language" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-41">
		<createTable tableName="language_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="language_name" type="VARCHAR(255)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-42">
		<createTable tableName="operational_information_cont_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-43">
		<createTable tableName="performance_indicator_content">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-44">
		<createTable tableName="person_assignment_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-45">
		<createTable tableName="person_assignment_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-46">
		<createTable tableName="person_container_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="person_person_container_data_0" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-47">
		<createTable tableName="person_container_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-48">
		<createTable tableName="person_data">
			<column name="id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="born_year" type="INT4" />
			<column name="election_region" type="VARCHAR(255)" />
			<column name="first_name" type="VARCHAR(255)" />
			<column name="gender" type="VARCHAR(255)" />
			<column name="hangar_guid" type="VARCHAR(255)" />
			<column name="image_url_192" type="VARCHAR(255)" />
			<column name="image_url_80" type="VARCHAR(255)" />
			<column name="image_url_max" type="VARCHAR(255)" />
			<column name="last_name" type="VARCHAR(255)" />
			<column name="party" type="VARCHAR(255)" />
			<column name="person_url_xml" type="VARCHAR(255)" />
			<column name="place" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="person_assignment_data_perso_0" type="INT8" />
			<column name="person_detail_data_person_da_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-49">
		<createTable tableName="person_detail_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-50">
		<createTable tableName="person_detail_element">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="detail_list_person_detail_el_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-51">
		<createTable tableName="person_element">
			<column name="id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="born_year" type="VARCHAR(255)" />
			<column name="election_region" type="VARCHAR(255)" />
			<column name="first_name" type="VARCHAR(255)" />
			<column name="gender" type="VARCHAR(255)" />
			<column name="hangar_guid" type="VARCHAR(255)" />
			<column name="image_url_192" type="VARCHAR(255)" />
			<column name="image_url_80" type="VARCHAR(255)" />
			<column name="image_url_max" type="VARCHAR(255)" />
			<column name="last_name" type="VARCHAR(255)" />
			<column name="party" type="VARCHAR(255)" />
			<column name="person_url_xml" type="VARCHAR(255)" />
			<column name="place" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="person_assignment_element_pe_0" type="INT8" />
			<column name="person_detail_element_person_0" type="INT8" />
			<column name="person_person_container_elem_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-52">
		<createTable tableName="portal">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="description" type="VARCHAR(255)" />
			<column name="google_map_api_key" type="VARCHAR(255)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
			<column name="portal_name" type="VARCHAR(255)" />
			<column name="portal_type" type="VARCHAR(255)" />
			<column name="portals_agency_hjid" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-53">
		<createTable tableName="quality_assurance_content">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-54">
		<createTable tableName="sweden_county_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="numeric" />
			<column name="county_name" type="VARCHAR(255)" />
			<column name="county_regions_sweden_county_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-55">
		<createTable tableName="sweden_county_data_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-56">
		<createTable tableName="sweden_county_electoral_area">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="numeric" />
			<column name="electoral_area_name" type="VARCHAR(255)" />
			<column name="first_round" type="numeric" />
			<column name="number_of_seats" type="numeric" />
			<column name="number_of_voters" type="numeric" />
			<column name="rest" type="VARCHAR(255)" />
			<column name="second_round" type="numeric" />
			<column name="landstingsvalkrets_sweden_co_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-57">
		<createTable tableName="sweden_county_electoral_regi_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-58">
		<createTable tableName="sweden_county_electoral_regi_1">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="numeric" />
			<column name="county_name" type="VARCHAR(255)" />
			<column name="seats" type="numeric" />
			<column name="county_electoral_regions_swe_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-59">
		<createTable tableName="sweden_election_region">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="county_id" type="VARCHAR(255)" />
			<column name="municipal_id" type="VARCHAR(255)" />
			<column name="region_name" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-60">
		<createTable tableName="sweden_election_type">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="election_code" type="VARCHAR(255)" />
			<column name="election_type" type="VARCHAR(255)" />
			<column name="region_sweden_election_type__0" type="INT8" />
			<column name="election_types_sweden_electi_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-61">
		<createTable tableName="sweden_election_type_contain_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-62">
		<createTable tableName="sweden_municipality_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="numeric" />
			<column name="municipal_name" type="VARCHAR(255)" />
			<column name="kommun_sweden_county_data_hj_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-63">
		<createTable tableName="sweden_municipality_election_0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="code" type="numeric" />
			<column name="election_region_name" type="VARCHAR(255)" />
			<column name="first_round" type="numeric" />
			<column name="number_of_seats" type="numeric" />
			<column name="number_of_voters" type="numeric" />
			<column name="rest" type="VARCHAR(255)" />
			<column name="second_round" type="numeric" />
			<column name="kommunvalkrets_sweden_munici_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-64">
		<createTable tableName="sweden_parliament_electoral__0">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-65">
		<createTable tableName="sweden_parliament_electoral__1">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="election_region_name" type="VARCHAR(255)" />
			<column name="first_round" type="numeric" />
			<column name="number_of_seats" type="numeric" />
			<column name="number_of_voters" type="numeric" />
			<column name="rest" type="VARCHAR(255)" />
			<column name="second_round" type="numeric" />
			<column name="parliament_electoral_regions_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-66">
		<createTable tableName="sweden_political_party">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="address" type="VARCHAR(255)" />
			<column name="city" type="VARCHAR(255)" />
			<column name="co_address" type="VARCHAR(255)" />
			<column name="email" type="VARCHAR(255)" />
			<column name="fax_number" type="VARCHAR(255)" />
			<column name="party_id" type="VARCHAR(255)" />
			<column name="party_name" type="VARCHAR(255)" />
			<column name="phone_number" type="VARCHAR(255)" />
			<column name="post_code" type="VARCHAR(255)" />
			<column name="registered_date" type="date" />
			<column name="short_code" type="VARCHAR(255)" />
			<column name="website" type="VARCHAR(255)" />
			<column name="parties_sweden_election_regi_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-67">
		<createTable tableName="target_profile_content">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-68">
		<createTable tableName="topic">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="id" type="VARCHAR(255)" />
			<column name="value_" type="VARCHAR(255)" />
			<column name="topic_topics_hjid" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-69">
		<createTable tableName="topics">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-70">
		<createTable tableName="user_account">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="email" type="VARCHAR(255)" />
			<column name="model_object_id" type="INT4" />
			<column name="model_object_version" type="INT4" />
			<column name="number_of_visits" type="INT4" />
			<column name="user_id" type="VARCHAR(255)" />
			<column name="user_role" type="VARCHAR(255)" />
			<column name="user_type" type="VARCHAR(255)" />
			<column name="username" type="VARCHAR(255)" />
			<column name="userpassword" type="VARCHAR(255)" />
			<column name="country_user_account_hjid" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-71">
		<createTable tableName="user_account_address">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="hjvalue" type="VARCHAR(255)" />
			<column name="hjindex" type="INT4">
				<constraints nullable="false" />
			</column>
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-72">
		<createTable tableName="vote_data">
			<column name="embedded_id_ballot_id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="embedded_id_concern" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="embedded_id_intressent_id" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="embedded_id_issue" type="VARCHAR(255)">
				<constraints nullable="false" />
			</column>
			<column name="ballot_type" type="VARCHAR(255)" />
			<column name="bank_number" type="VARCHAR(255)" />
			<column name="born_year" type="INT4" />
			<column name="electoral_region" type="VARCHAR(255)" />
			<column name="electoral_region_number" type="numeric" />
			<column name="first_name" type="VARCHAR(255)" />
			<column name="full_name" type="VARCHAR(255)" />
			<column name="gender" type="VARCHAR(255)" />
			<column name="label" type="VARCHAR(255)" />
			<column name="last_name" type="VARCHAR(255)" />
			<column name="party" type="VARCHAR(255)" />
			<column name="place" type="VARCHAR(255)" />
			<column name="rm" type="VARCHAR(255)" />
			<column name="vote" type="VARCHAR(255)" />
			<column name="vote_date" type="date" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-73">
		<createTable tableName="vote_meta_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="ballot_type" type="VARCHAR(255)" />
			<column name="group_behavior" type="VARCHAR(255)" />
			<column name="outcome" type="VARCHAR(255)" />
			<column name="proffessional_behavior" type="VARCHAR(255)" />
			<column name="target" type="VARCHAR(255)" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-74">
		<createTable tableName="world_bank_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="country_id" type="VARCHAR(255)" />
			<column name="country_value" type="VARCHAR(255)" />
			<column name="data_value" type="VARCHAR(255)" />
			<column name="indicator_id" type="VARCHAR(255)" />
			<column name="indicator_value" type="VARCHAR(255)" />
			<column name="year_date" type="INT4" />
			<column name="data__data_element_hjid" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-75">
		<addPrimaryKey columnNames="hjid"
			constraintName="against_proposal_container_pkey" tableName="against_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-76">
		<addPrimaryKey columnNames="hjid" constraintName="against_proposal_data_pkey"
			tableName="against_proposal_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-77">
		<addPrimaryKey columnNames="hjid" constraintName="agency_pkey"
			tableName="agency" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-78">
		<addPrimaryKey columnNames="hjid" constraintName="aggregated_bug_data_pkey"
			tableName="aggregated_bug_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-79">
		<addPrimaryKey columnNames="hjid"
			constraintName="aggregated_country_data_pkey" tableName="aggregated_country_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-80">
		<addPrimaryKey columnNames="hjid"
			constraintName="application_action_event_pkey" tableName="application_action_event" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-81">
		<addPrimaryKey columnNames="hjid" constraintName="application_session_pkey"
			tableName="application_session" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-82">
		<addPrimaryKey columnNames="hjid" constraintName="application_view_pkey"
			tableName="application_view" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-83">
		<addPrimaryKey columnNames="hjid" constraintName="assignment_data_pkey"
			tableName="assignment_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-84">
		<addPrimaryKey columnNames="hjid" constraintName="assignment_element_pkey"
			tableName="assignment_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-85">
		<addPrimaryKey columnNames="id"
			constraintName="committee_document_data_pkey" tableName="committee_document_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-86">
		<addPrimaryKey columnNames="hjid"
			constraintName="committee_proposal_component_0_pkey" tableName="committee_proposal_component_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-87">
		<addPrimaryKey columnNames="hjid"
			constraintName="committee_proposal_container_pkey" tableName="committee_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-88">
		<addPrimaryKey columnNames="hjid"
			constraintName="committee_proposal_data_pkey" tableName="committee_proposal_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-89">
		<addPrimaryKey columnNames="hjid" constraintName="countries_element_pkey"
			tableName="countries_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-90">
		<addPrimaryKey columnNames="hjid" constraintName="country_element_pkey"
			tableName="country_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-91">
		<addPrimaryKey columnNames="hjid" constraintName="data_element_pkey"
			tableName="data_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-92">
		<addPrimaryKey columnNames="hjid" constraintName="data_source_content_pkey"
			tableName="data_source_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-93">
		<addPrimaryKey columnNames="hjid" constraintName="detail_data_pkey"
			tableName="detail_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-94">
		<addPrimaryKey columnNames="hjid" constraintName="detail_element_pkey"
			tableName="detail_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-95">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_activity_container_pkey" tableName="document_activity_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-96">
		<addPrimaryKey columnNames="hjid" constraintName="document_activity_data_pkey"
			tableName="document_activity_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-97">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_attachment_container_pkey" tableName="document_attachment_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-98">
		<addPrimaryKey columnNames="hjid" constraintName="document_attachment_pkey"
			tableName="document_attachment" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-99">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_container_element_pkey" tableName="document_container_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-100">
		<addPrimaryKey columnNames="hjid" constraintName="document_content_data_pkey"
			tableName="document_content_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-101">
		<addPrimaryKey columnNames="id" constraintName="document_data_pkey"
			tableName="document_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-102">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_detail_container_pkey" tableName="document_detail_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-103">
		<addPrimaryKey columnNames="hjid" constraintName="document_detail_data_pkey"
			tableName="document_detail_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-104">
		<addPrimaryKey columnNames="id" constraintName="document_element_pkey"
			tableName="document_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-105">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_person_reference_co_0_pkey" tableName="document_person_reference_co_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-106">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_person_reference_da_0_pkey" tableName="document_person_reference_da_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-107">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_reference_container_pkey" tableName="document_reference_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-108">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_reference_data_pkey" tableName="document_reference_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-109">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_status_container_pkey" tableName="document_status_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-110">
		<addPrimaryKey columnNames="hjid" constraintName="domain_portal_pkey"
			tableName="domain_portal" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-111">
		<addPrimaryKey columnNames="hjid" constraintName="indicator_element_pkey"
			tableName="indicator_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-112">
		<addPrimaryKey columnNames="hjid" constraintName="indicators_element_pkey"
			tableName="indicators_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-113">
		<addPrimaryKey columnNames="hjid" constraintName="language_content_data_pkey"
			tableName="language_content_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-114">
		<addPrimaryKey columnNames="hjid" constraintName="language_data_pkey"
			tableName="language_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-115">
		<addPrimaryKey columnNames="hjid"
			constraintName="operational_information_cont_0_pkey" tableName="operational_information_cont_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-116">
		<addPrimaryKey columnNames="hjid"
			constraintName="performance_indicator_content_pkey" tableName="performance_indicator_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-117">
		<addPrimaryKey columnNames="hjid" constraintName="person_assignment_data_pkey"
			tableName="person_assignment_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-118">
		<addPrimaryKey columnNames="hjid"
			constraintName="person_assignment_element_pkey" tableName="person_assignment_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-119">
		<addPrimaryKey columnNames="hjid" constraintName="person_container_data_pkey"
			tableName="person_container_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-120">
		<addPrimaryKey columnNames="hjid"
			constraintName="person_container_element_pkey" tableName="person_container_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-121">
		<addPrimaryKey columnNames="id" constraintName="person_data_pkey"
			tableName="person_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-122">
		<addPrimaryKey columnNames="hjid" constraintName="person_detail_data_pkey"
			tableName="person_detail_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-123">
		<addPrimaryKey columnNames="hjid" constraintName="person_detail_element_pkey"
			tableName="person_detail_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-124">
		<addPrimaryKey columnNames="id" constraintName="person_element_pkey"
			tableName="person_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-125">
		<addPrimaryKey columnNames="hjid" constraintName="portal_pkey"
			tableName="portal" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-126">
		<addPrimaryKey columnNames="hjid"
			constraintName="quality_assurance_content_pkey" tableName="quality_assurance_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-127">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_county_data_container_pkey" tableName="sweden_county_data_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-128">
		<addPrimaryKey columnNames="hjid" constraintName="sweden_county_data_pkey"
			tableName="sweden_county_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-129">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_county_electoral_area_pkey" tableName="sweden_county_electoral_area" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-130">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_county_electoral_regi_0_pkey" tableName="sweden_county_electoral_regi_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-131">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_county_electoral_regi_1_pkey" tableName="sweden_county_electoral_regi_1" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-132">
		<addPrimaryKey columnNames="hjid" constraintName="sweden_election_region_pkey"
			tableName="sweden_election_region" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-133">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_election_type_contain_0_pkey" tableName="sweden_election_type_contain_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-134">
		<addPrimaryKey columnNames="hjid" constraintName="sweden_election_type_pkey"
			tableName="sweden_election_type" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-135">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_municipality_data_pkey" tableName="sweden_municipality_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-136">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_municipality_election_0_pkey" tableName="sweden_municipality_election_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-137">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_parliament_electoral__0_pkey" tableName="sweden_parliament_electoral__0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-138">
		<addPrimaryKey columnNames="hjid"
			constraintName="sweden_parliament_electoral__1_pkey" tableName="sweden_parliament_electoral__1" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-139">
		<addPrimaryKey columnNames="hjid" constraintName="sweden_political_party_pkey"
			tableName="sweden_political_party" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-140">
		<addPrimaryKey columnNames="hjid" constraintName="target_profile_content_pkey"
			tableName="target_profile_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-141">
		<addPrimaryKey columnNames="hjid" constraintName="topic_pkey"
			tableName="topic" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-142">
		<addPrimaryKey columnNames="hjid" constraintName="topics_pkey"
			tableName="topics" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-143">
		<addPrimaryKey columnNames="hjid, hjindex"
			constraintName="user_account_address_pkey" tableName="user_account_address" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-144">
		<addPrimaryKey columnNames="hjid" constraintName="user_account_pkey"
			tableName="user_account" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-145">
		<addPrimaryKey
			columnNames="embedded_id_ballot_id, embedded_id_concern, embedded_id_intressent_id, embedded_id_issue"
			constraintName="vote_data_pkey" tableName="vote_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-146">
		<addPrimaryKey columnNames="hjid" constraintName="vote_meta_data_pkey"
			tableName="vote_meta_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-147">
		<addPrimaryKey columnNames="hjid" constraintName="world_bank_data_pkey"
			tableName="world_bank_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-148">
		<addForeignKeyConstraint baseColumnNames="person_detail_element_person_0"
			baseTableName="person_element" constraintName="fk_13jay3yk8opnt33758httu9kb"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_detail_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-149">
		<addForeignKeyConstraint baseColumnNames="target_profile_application_v_0"
			baseTableName="application_view" constraintName="fk_2ivjcdwosa63ant7jc5c6cojj"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="target_profile_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-150">
		<addForeignKeyConstraint baseColumnNames="country_countries_element_hj_0"
			baseTableName="country_element" constraintName="fk_3k0s1gih1msbej3bp2iotg52y"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="countries_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-151">
		<addForeignKeyConstraint baseColumnNames="person_person_container_elem_0"
			baseTableName="person_element" constraintName="fk_3o85sqp9yss0nler1yl1umfl1"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_container_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-152">
		<addForeignKeyConstraint baseColumnNames="county_electoral_regions_swe_0"
			baseTableName="sweden_county_electoral_regi_1" constraintName="fk_4y4vi3cafmbdhvckntfn7qdps"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_county_electoral_regi_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-153">
		<addForeignKeyConstraint baseColumnNames="against_proposal_list_agains_0"
			baseTableName="against_proposal_data" constraintName="fk_5u5u77qsrpa2qy6umqrph4tyf"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="against_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-154">
		<addForeignKeyConstraint baseColumnNames="person_person_container_data_0"
			baseTableName="person_container_data" constraintName="fk_5w4uvrhl3l7c441b7ra7p8txr"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="person_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-155">
		<addForeignKeyConstraint baseColumnNames="document_reference_container_0"
			baseTableName="document_status_container" constraintName="fk_6crp887w8xy3e4i143yyydjqv"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_reference_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-156">
		<addForeignKeyConstraint baseColumnNames="portals_agency_hjid"
			baseTableName="portal" constraintName="fk_7c8jfw8bnxrm2aj26w9qlx340"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="agency" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-157">
		<addForeignKeyConstraint baseColumnNames="landstingsvalkrets_sweden_co_0"
			baseTableName="sweden_county_electoral_area" constraintName="fk_7h4feuc5bwu12tyaka1nx1ln"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_county_electoral_regi_1" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-158">
		<addForeignKeyConstraint baseColumnNames="assignment_list_person_assig_0"
			baseTableName="assignment_data" constraintName="fk_84o1dcsfeyp1o25nfdpppa7oe"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_assignment_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-159">
		<addForeignKeyConstraint baseColumnNames="document_attachment_containe_0"
			baseTableName="document_status_container" constraintName="fk_86c52yf22uk0bpcs1qoc3aeyv"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_attachment_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-160">
		<addForeignKeyConstraint baseColumnNames="hjid"
			baseTableName="user_account_address" constraintName="fk_8931ymg13vy6vfkrichtst7bj"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="user_account" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-161">
		<addForeignKeyConstraint baseColumnNames="indicator__indicators_elemen_0"
			baseTableName="indicator_element" constraintName="fk_8l1m1pum4e3catw4443rup4q5"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="indicators_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-162">
		<addForeignKeyConstraint baseColumnNames="country_user_account_hjid"
			baseTableName="user_account" constraintName="fk_8mmnmcgjut9nc7dfhrgxi598f"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="aggregated_country_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-163">
		<addForeignKeyConstraint baseColumnNames="committee_proposal_container_0"
			baseTableName="committee_proposal_component_0" constraintName="fk_90arga58ce9bnjkc6lws04uhw"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="committee_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-164">
		<addForeignKeyConstraint baseColumnNames="topics_indicator_element_hjid"
			baseTableName="indicator_element" constraintName="fk_92h99v4i1pmr69x0y43pocv2a"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="topics" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-165">
		<addForeignKeyConstraint baseColumnNames="hjid"
			baseTableName="domain_portal" constraintName="fk_9ln0n5axxjuxtbpepyad69rel"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="portal" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-166">
		<addForeignKeyConstraint baseColumnNames="document_detail_container_do_0"
			baseTableName="document_status_container" constraintName="fk_9q1ktfb77gieq0xugoqe2fidd"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_detail_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-167">
		<addForeignKeyConstraint baseColumnNames="quality_assurance_applicatio_0"
			baseTableName="application_view" constraintName="fk_9x5havflf3rdfkaw1hangbemd"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="quality_assurance_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-168">
		<addForeignKeyConstraint baseColumnNames="detail_list_person_detail_el_0"
			baseTableName="person_detail_element" constraintName="fk_a6syxeadcisfnnfjqemog93qd"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="detail_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-169">
		<addForeignKeyConstraint baseColumnNames="parties_sweden_election_regi_0"
			baseTableName="sweden_political_party" constraintName="fk_c2f4dhdce9p61sg50rnww73c1"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_election_region" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-170">
		<addForeignKeyConstraint baseColumnNames="document_reference_list_docu_0"
			baseTableName="document_reference_data" constraintName="fk_c4uqb4d6xqa5d7afwen8sny67"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_reference_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-171">
		<addForeignKeyConstraint baseColumnNames="detail_list_person_detail_da_0"
			baseTableName="detail_data" constraintName="fk_diexjlb9hdrfv7g5y06cj6nu5"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_detail_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-172">
		<addForeignKeyConstraint baseColumnNames="data__data_element_hjid"
			baseTableName="world_bank_data" constraintName="fk_e0yghurnnhmkahpt7ydf008fo"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="data_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-173">
		<addForeignKeyConstraint baseColumnNames="against_proposal_container_c_0"
			baseTableName="committee_proposal_component_0" constraintName="fk_eofapva6jn5k3h5gnj4whyilb"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="against_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-174">
		<addForeignKeyConstraint baseColumnNames="performance_indicators_appli_0"
			baseTableName="application_view" constraintName="fk_f4bptktby95bygv359chn7lbn"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="performance_indicator_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-175">
		<addForeignKeyConstraint baseColumnNames="document_activities_document_0"
			baseTableName="document_activity_data" constraintName="fk_gruc53dqu0smf6s1a0gkelvdm"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_activity_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-176">
		<addForeignKeyConstraint baseColumnNames="kommun_sweden_county_data_hj_0"
			baseTableName="sweden_municipality_data" constraintName="fk_gykahsnks6y9v8y5novlxagnf"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_county_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-177">
		<addForeignKeyConstraint baseColumnNames="committee_proposal_list_comm_0"
			baseTableName="committee_proposal_data" constraintName="fk_hs04ji7kqvwd7313ryp20vo0x"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="committee_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-178">
		<addForeignKeyConstraint baseColumnNames="country_aggregated_country_d_0"
			baseTableName="aggregated_country_data" constraintName="fk_j7l4eldeihr8g7ax7rv2irgk1"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="country_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-179">
		<addForeignKeyConstraint baseColumnNames="document_document_status_con_0"
			baseTableName="document_status_container" constraintName="fk_jjcxsqmdnjw0nbwducjyecdg4"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="document_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-180">
		<addForeignKeyConstraint baseColumnNames="person_detail_data_person_da_0"
			baseTableName="person_data" constraintName="fk_jrgy7nw6n071uok8p1hkp03rh"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_detail_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-181">
		<addForeignKeyConstraint baseColumnNames="document_committee_proposal__0"
			baseTableName="committee_proposal_component_0" constraintName="fk_k78eqmx2m3ja0267xhthfeio4"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="committee_document_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-182">
		<addForeignKeyConstraint baseColumnNames="uppdrag_person_assignment_el_0"
			baseTableName="assignment_element" constraintName="fk_ks1811fwuno6vqof0lskerpib"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_assignment_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-183">
		<addForeignKeyConstraint baseColumnNames="document_attachment_list_doc_0"
			baseTableName="document_attachment" constraintName="fk_lean1i0p0e5rv28my9297lq22"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_attachment_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-184">
		<addForeignKeyConstraint baseColumnNames="document_person_reference_li_1"
			baseTableName="document_person_reference_da_0" constraintName="fk_lsfup3rosph7239t1idorm1cd"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_person_reference_co_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-185">
		<addForeignKeyConstraint baseColumnNames="person_assignment_element_pe_0"
			baseTableName="person_element" constraintName="fk_m6dcdojsb6iv9lrego5kurr7p"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_assignment_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-186">
		<addForeignKeyConstraint baseColumnNames="document_person_reference_co_1"
			baseTableName="document_status_container" constraintName="fk_ng4kjnv3cm4e6ud3fikwi6p7i"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_person_reference_co_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-187">
		<addForeignKeyConstraint baseColumnNames="events_application_session_h_0"
			baseTableName="application_action_event" constraintName="fk_nlqlshlogsx2g8u5d3y28my28"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="application_session" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-188">
		<addForeignKeyConstraint baseColumnNames="dokument_document_container__0"
			baseTableName="document_element" constraintName="fk_o24n54auwa2xyflis6nkrajpd"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_container_element" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-189">
		<addForeignKeyConstraint baseColumnNames="topic_topics_hjid"
			baseTableName="topic" constraintName="fk_o7ol28sotu1r12n8txv2gigok"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="topics" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-190">
		<addForeignKeyConstraint baseColumnNames="region_sweden_election_type__0"
			baseTableName="sweden_election_type" constraintName="fk_ob50ibby6jamvitbxknoucifg"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_election_region" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-191">
		<addForeignKeyConstraint baseColumnNames="sweden_aggregated_bug_data_id"
			baseTableName="aggregated_bug_data" constraintName="fk_osdlir1nv0m8ckb1pbipgswj"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="person_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-192">
		<addForeignKeyConstraint baseColumnNames="data_source_information_appl_0"
			baseTableName="application_view" constraintName="fk_p8b7gnxeglk71etbbql3j184s"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="data_source_content" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-193">
		<addForeignKeyConstraint baseColumnNames="county_regions_sweden_county_0"
			baseTableName="sweden_county_data" constraintName="fk_pndlg3q6ly10qbs8e3s9wikyu"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_county_data_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-194">
		<addForeignKeyConstraint baseColumnNames="document_detail_list_documen_0"
			baseTableName="document_detail_data" constraintName="fk_quor6wesrmk9ierjyr7ni8wch"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_detail_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-195">
		<addForeignKeyConstraint baseColumnNames="parliament_electoral_regions_0"
			baseTableName="sweden_parliament_electoral__1" constraintName="fk_qvgtilwwyipbrv6b2cv6fcp27"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_parliament_electoral__0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-196">
		<addForeignKeyConstraint baseColumnNames="document_activity_container__0"
			baseTableName="document_status_container" constraintName="fk_r2dkprhp4xfhrcck9sf31b9xl"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_activity_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-197">
		<addForeignKeyConstraint baseColumnNames="kommunvalkrets_sweden_munici_0"
			baseTableName="sweden_municipality_election_0" constraintName="fk_r3jht5oci01uxhwaa39uxsg2t"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_municipality_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-198">
		<addForeignKeyConstraint baseColumnNames="person_assignment_data_perso_0"
			baseTableName="person_data" constraintName="fk_rd2pmyb4gmu2vbxklh6er8ayc"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="person_assignment_data" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-199">
		<addForeignKeyConstraint baseColumnNames="election_types_sweden_electi_0"
			baseTableName="sweden_election_type" constraintName="fk_rp3tjh4jmpmoxh05oo9fq9qh6"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="sweden_election_type_contain_0" />
	</changeSet>
	<changeSet author="pether (generated)" id="1414872417007-200">
		<addForeignKeyConstraint baseColumnNames="operational_information_appl_0"
			baseTableName="application_view" constraintName="fk_x8sbg6y7h0vavmun6i7h8oae"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="operational_information_cont_0" />
	</changeSet>
	<changeSet author="pether" id="1414872417007-201">
		<modifyDataType columnName="content" newDataType="${clob.type}"
			tableName="document_content_data" />
	</changeSet>


	<changeSet author="pether" id="1414872417007-202">
		<createView replaceIfExists="true"
			viewName="view_document_data_committee_report_url">select id,committee_report_url_xml from document_data where committee_report_url_xml is not null</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-203">
		<modifyDataType columnName="proposal" newDataType="${clob.type}"
			tableName="committee_proposal_data" />
	</changeSet>

	<changeSet author="pether" id="1414872417007-204">
		<createView replaceIfExists="true" viewName="view_riksdagen_committee">select distinct detail as EMBEDDED_ID_DETAIL, org_code as EMBEDDED_ID_ORG_CODE, count(org_code) as total_assignments from assignment_data where org_code is not null and assignment_type='uppdrag' group by detail,org_code</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-205">
		<createView replaceIfExists="true" viewName="view_riksdagen_goverment">select distinct detail as EMBEDDED_ID_DETAIL from assignment_data where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen'</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-206">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_roles">select distinct detail as EMBEDDED_ID_DETAIL, role_code,count(detail) as total_assignments from assignment_data where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen' group by detail,role_code</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-207">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decisions">select id,title,header,hangar_id,label as committee_report,committee_document_data.rm,end_number,issue_number,org,created_date,public_date,committee_proposal_url_xml,decision_type,ballot_id,against_proposal_parties,against_proposal_number,winner from committee_proposal_data LEFT JOIN committee_document_data ON committee_document_data.label=committee_report and committee_proposal_data.rm=committee_document_data.rm</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-208">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_proposals">select id,title,sub_title,status,org,hangar_id,label,made_public_date,number_value,document_status_url_xml from document_data where document_type='PROP'</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-209">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_member_proposals">select * from document_element  where document_type='MOT'</createView>
	</changeSet>


	<!-- select distinct document_type from document_element where document_type
		is not null and document_status_url_xml is not null; document_refer -->




	<!-- select * from view_riksdagen_committee_decisions where decision_type
		is not null and decision_type!='-' and decision_type!=''; -->


	<changeSet author="pether (generated)" id="1416258476613-210">
		<createTable tableName="document_proposal_container">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="proposal_document_proposal_c_0" type="INT8" />
		</createTable>
	</changeSet>
	<changeSet author="pether (generated)" id="1416258476613-211">
		<createTable tableName="document_proposal_data">
			<column name="hjid" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="chamber" type="VARCHAR(255)" />
			<column name="committee" type="VARCHAR(255)" />
			<column name="decision_type" type="VARCHAR(255)" />
			<column name="designation" type="INT4" />
			<column name="processed_in" type="VARCHAR(255)" />
			<column name="proposal_number" type="INT4" />
			<column name="wording" type="VARCHAR(255)" />
			<column name="wording_2" type="VARCHAR(255)" />
			<column name="wording_3" type="VARCHAR(255)" />
			<column name="wording_4" type="VARCHAR(255)" />
		</createTable>
	</changeSet>

	<changeSet author="pether (generated)" id="1416258476613-212">
		<addColumn tableName="document_status_container">
			<column name="document_proposal_document_s_0" type="INT8" />
		</addColumn>
		<dropColumn columnName="document_proposal" tableName="document_status_container" />

	</changeSet>

	<changeSet author="pether (generated)" id="1416258476613-213">
		<addPrimaryKey columnNames="hjid"
			constraintName="document_proposal_container_pkey" tableName="document_proposal_container" />
	</changeSet>
	<changeSet author="pether (generated)" id="1416258476613-214">
		<addPrimaryKey columnNames="hjid" constraintName="document_proposal_data_pkey"
			tableName="document_proposal_data" />
	</changeSet>


	<changeSet author="pether (generated)" id="1416258476613-215">
		<addForeignKeyConstraint baseColumnNames="proposal_document_proposal_c_0"
			baseTableName="document_proposal_container" constraintName="fk_m55tt4vaimgb5qk7xj9mgxmry"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_proposal_data" />
	</changeSet>

	<changeSet author="pether (generated)" id="1416258476613-216">
		<addForeignKeyConstraint baseColumnNames="document_proposal_document_s_0"
			baseTableName="document_status_container" constraintName="fk_iirofquegnrpnuonvnydf6wfb"
			deferrable="false" initiallyDeferred="false" onDelete="NO ACTION"
			onUpdate="NO ACTION" referencedColumnNames="hjid"
			referencedTableName="document_proposal_container" />
	</changeSet>

	<changeSet author="pether" id="1414872417007-217">
		<modifyDataType columnName="wording" newDataType="${clob.type}"
			tableName="document_proposal_data" />
		<modifyDataType columnName="wording_2" newDataType="${clob.type}"
			tableName="document_proposal_data" />
		<modifyDataType columnName="wording_3" newDataType="${clob.type}"
			tableName="document_proposal_data" />
		<modifyDataType columnName="wording_4" newDataType="${clob.type}"
			tableName="document_proposal_data" />
	</changeSet>

	<changeSet author="pether" id="1414872417007-218">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_roles">select distinct detail as EMBEDDED_ID_DETAIL, role_code,count(detail) as total_assignments from assignment_data where org_code is not null and assignment_type='uppdrag' group by detail,role_code</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-219">


		<createView replaceIfExists="true" viewName="view_riksdagen_committee">SELECT DISTINCT assignment_data.detail AS embedded_id_detail, assignment_data.org_code AS embedded_id_org_code,count(assignment_data.org_code) AS total_assignments,min(from_date) as first_assignment_date,max(to_date) as last_assignment_date FROM assignment_data WHERE assignment_data.org_code IS NOT NULL AND assignment_data.assignment_type = 'uppdrag' GROUP BY assignment_data.detail, assignment_data.org_code</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_parliament_member_proposal">SELECT view_riksdagen_committee.embedded_id_detail,
    view_riksdagen_committee.embedded_id_org_code,
    view_riksdagen_committee.total_assignments,
    document_data.id,
    document_data.committee_report_url_xml,
    document_data.document_status_url_www,
    document_data.document_status_url_xml,
    document_data.document_type,
    document_data.document_url_html,
    document_data.document_url_text,
    document_data.final_number,
    document_data.hangar_id,
    document_data.label,
    document_data.made_public_date,
    document_data.number_value,
    document_data.org,
    document_data.rm,
    document_data.status,
    document_data.sub_title,
    document_data.sub_type,
    document_data.temp_label,
    document_data.title
   FROM view_riksdagen_committee
     LEFT JOIN document_data ON view_riksdagen_committee.embedded_id_org_code = document_data.org
  WHERE document_data.document_type = 'MOT'</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-220">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_roles">select distinct detail as EMBEDDED_ID_DETAIL, role_code,count(detail) as total_assignments,min(from_date) as first_assignment_date,max(to_date) as last_assignment_date from assignment_data where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen' group by detail,role_code</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_roles">select distinct detail as EMBEDDED_ID_DETAIL, role_code,count(detail) as total_assignments,min(from_date) as first_assignment_date,max(to_date) as last_assignment_date from assignment_data where org_code is not null and assignment_type='uppdrag' group by detail,role_code</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-221">
		<createView replaceIfExists="true" viewName="view_riksdagen_goverment">select distinct detail as name_id,count(assignment_data.detail) AS total_assignments,min(from_date) as first_assignment_date,max(to_date) as last_assignment_date from assignment_data where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen' group by detail</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-222">
		<createView replaceIfExists="true" viewName="view_riksdagen_party_member">select * from sweden_political_party LEFT JOIN person_data ON person_data.party = sweden_political_party.short_code where person_data.party = sweden_political_party.short_code and short_code !='-'</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-223">
		<createView replaceIfExists="true" viewName="view_riksdagen_party">select distinct party_id,party_name,short_code,count(party_id) as head_count from view_riksdagen_party_member group by party_id,party_name,short_code</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-224">
		<createView replaceIfExists="true" viewName="view_riksdagen_party">select distinct party_id as party_number,party_name,short_code as party_id,website,registered_date,count(party_id) as head_count from view_riksdagen_party_member group by party_id,party_name,short_code,website,registered_date</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-225">
		<createView replaceIfExists="true" viewName="view_riksdagen_goverment">select distinct detail as name_id,count(assignment_data.detail) AS total_assignments,min(from_date) as first_assignment_date,max(to_date) as last_assignment_date,sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served ,(CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_member_size from assignment_data where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen' and status !='LEDIG' group by detail</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-226">

		<dropView viewName="view_riksdagen_committee_parliament_member_proposal" />

		<createView replaceIfExists="true" viewName="view_riksdagen_committee">SELECT DISTINCT assignment_data.detail AS embedded_id_detail, assignment_data.org_code AS embedded_id_org_code,count(assignment_data.org_code) AS total_assignments,min(from_date) as first_assignment_date,max(to_date) as last_assignment_date,sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served ,(CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_member_size FROM assignment_data WHERE assignment_data.org_code IS NOT NULL AND assignment_data.assignment_type = 'uppdrag' GROUP BY assignment_data.detail, assignment_data.org_code</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_parliament_member_proposal">SELECT view_riksdagen_committee.embedded_id_detail,
    view_riksdagen_committee.embedded_id_org_code,
    view_riksdagen_committee.total_assignments,
    document_data.id,
    document_data.committee_report_url_xml,
    document_data.document_status_url_www,
    document_data.document_status_url_xml,
    document_data.document_type,
    document_data.document_url_html,
    document_data.document_url_text,
    document_data.final_number,
    document_data.hangar_id,
    document_data.label,
    document_data.made_public_date,
    document_data.number_value,
    document_data.org,
    document_data.rm,
    document_data.status,
    document_data.sub_title,
    document_data.sub_type,
    document_data.temp_label,
    document_data.title
   FROM view_riksdagen_committee
     LEFT JOIN document_data ON view_riksdagen_committee.embedded_id_org_code = document_data.org
  WHERE document_data.document_type = 'MOT'</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-227">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_role_member">select detail as EMBEDDED_ID_DETAIL, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data  left join person_data on assignment_data.intressent_id = person_data.id where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_role_member">select detail as EMBEDDED_ID_DETAIL, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where org_code is not null and assignment_type='uppdrag'</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-228">

		<createView replaceIfExists="true" viewName="view_riksdagen_politician">select view_riksdagen_party_member.id as id,max(first_name) as first_name,max(last_name) as last_name,max(party) as party,min(assignment_data.from_date) as first_assignment_date,max(assignment_data.to_date) as last_assignment_date,sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served,sum( CASE WHEN assignment_type='kammaruppdrag' THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_parliament_seat,sum( CASE WHEN (org_code is not null and assignment_type='uppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_committee,sum( CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_government,sum( CASE WHEN (detail='Europaparlamentet') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_eu_parliament, (CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,count(*) total_assignments,sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_assignments from assignment_data left join view_riksdagen_party_member on assignment_data.intressent_id = view_riksdagen_party_member.id group by view_riksdagen_party_member.id</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-229">
		<createView replaceIfExists="true" viewName="view_riksdagen_politician">select view_riksdagen_party_member.id as person_id,max(first_name) as first_name,max(last_name) as last_name,max(party) as party,min(assignment_data.from_date) as first_assignment_date,max(assignment_data.to_date) as last_assignment_date,sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served,sum( CASE WHEN assignment_type='kammaruppdrag' THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_parliament_seat,sum( CASE WHEN (org_code is not null and assignment_type='uppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_committee,sum( CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_government,sum( CASE WHEN (detail='Europaparlamentet') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_eu_parliament, (CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,count(*) total_assignments,sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_assignments from assignment_data left join view_riksdagen_party_member on assignment_data.intressent_id = view_riksdagen_party_member.id group by view_riksdagen_party_member.id</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-230">
		<createView replaceIfExists="true" viewName="view_riksdagen_politician">select view_riksdagen_party_member.id as person_id,max(first_name) as first_name,max(last_name) as last_name,max(party) as party,min(assignment_data.from_date) as first_assignment_date,max(assignment_data.to_date) as last_assignment_date,sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served,sum( CASE WHEN assignment_type='kammaruppdrag' THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_parliament,sum( CASE WHEN (org_code is not null and assignment_type='uppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_committee,sum( CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_government,sum( CASE WHEN (detail='Europaparlamentet') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_eu, (CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,count(*) total_assignments,sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_assignments,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND detail='Europaparlamentet' THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_eu,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_government,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (org_code is not null and assignment_type='uppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_committee,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_parliament from assignment_data left join view_riksdagen_party_member on assignment_data.intressent_id = view_riksdagen_party_member.id group by view_riksdagen_party_member.id</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-231">
		<createView replaceIfExists="true" viewName="view_riksdagen_party_summary">select party,
min(first_assignment_date) as first_assignment_date,
max(last_assignment_date) as last_assignment_date,
sum(total_days_served::int8)::int8 as total_days_served,
sum(total_days_served_parliament::int8)::int8 as total_days_served_parliament,
sum(total_days_served_committee::int8)::int8 as total_days_served_committee,
sum(total_days_served_government::int8)::int8 as total_days_served_government,
sum(total_days_served_eu::int8)::int8 as total_days_served_eu,
bool_or(active)	as active,
bool_or(active_eu) as active_eu,
bool_or(active_government) as active_government	,
bool_or(active_committee) as active_committee,
bool_or(active_parliament) as active_parliament,
sum(total_assignments::int8)::int8 as total_assignments,
sum(current_assignments::int8)::int8 as current_assignments
from view_riksdagen_politician group by party</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-232">
		<createView replaceIfExists="true" viewName="view_riksdagen_party_summary">select party,
min(first_assignment_date) as first_assignment_date,
max(last_assignment_date) as last_assignment_date,
sum(total_days_served::int8)::int8 as total_days_served,
sum(total_days_served_parliament::int8)::int8 as total_days_served_parliament,
sum(total_days_served_committee::int8)::int8 as total_days_served_committee,
sum(total_days_served_government::int8)::int8 as total_days_served_government,
sum(total_days_served_eu::int8)::int8 as total_days_served_eu,
bool_or(active)	as active,
bool_or(active_eu) as active_eu,
bool_or(active_government) as active_government	,
bool_or(active_committee) as active_committee,
bool_or(active_parliament) as active_parliament,
sum(CASE WHEN active THEN 1 ELSE 0 END)	as total_active,
sum(CASE WHEN active_eu THEN 1 ELSE 0 END) as total_active_eu,
sum(CASE WHEN active_government THEN 1 ELSE 0 END) as total_active_government	,
sum(CASE WHEN active_committee THEN 1 ELSE 0 END) as total_active_committee,
sum(CASE WHEN active_parliament THEN 1 ELSE 0 END) as total_active_parliament,
sum(total_assignments::int8)::int8 as total_assignments,
sum(current_assignments::int8)::int8 as current_assignments
from view_riksdagen_politician group by party</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-233">

		<dropView viewName="view_riksdagen_party_summary" />

		<createView replaceIfExists="true" viewName="view_riksdagen_politician">select view_riksdagen_party_member.id as person_id,max(first_name) as first_name,max(last_name) as last_name,max(party) as party,min(assignment_data.from_date) as first_assignment_date,max(assignment_data.to_date) as last_assignment_date,sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served,sum( CASE WHEN assignment_type='kammaruppdrag' and assignment_data.status !='LEDIG' THEN ((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE (CASE WHEN assignment_type='kammaruppdrag' and assignment_data.status ='LEDIG' THEN -((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) END) as total_days_served_parliament,sum( CASE WHEN (org_code is not null and assignment_type='uppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_committee,sum( CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_government,sum( CASE WHEN (detail='Europaparlamentet') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_eu, (CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,count(*) total_assignments,sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_assignments,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND detail='Europaparlamentet' THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_eu,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_government,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (org_code is not null and assignment_type='uppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_committee,(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' and assignment_data.status !='LEDIG' THEN 1 ELSE (CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' and assignment_data.status ='LEDIG' THEN -1 ELSE 0 END) END) > 0 THEN true ELSE false END) as active_parliament from assignment_data left join view_riksdagen_party_member on assignment_data.intressent_id = view_riksdagen_party_member.id group by view_riksdagen_party_member.id</createView>

		<createView replaceIfExists="true" viewName="view_riksdagen_party_summary">select party,
min(first_assignment_date) as first_assignment_date,
max(last_assignment_date) as last_assignment_date,
sum(total_days_served::int8)::int8 as total_days_served,
sum(total_days_served_parliament::int8)::int8 as total_days_served_parliament,
sum(total_days_served_committee::int8)::int8 as total_days_served_committee,
sum(total_days_served_government::int8)::int8 as total_days_served_government,
sum(total_days_served_eu::int8)::int8 as total_days_served_eu,
bool_or(active)	as active,
bool_or(active_eu) as active_eu,
bool_or(active_government) as active_government	,
bool_or(active_committee) as active_committee,
bool_or(active_parliament) as active_parliament,
sum(CASE WHEN active THEN 1 ELSE 0 END)	as total_active,
sum(CASE WHEN active_eu THEN 1 ELSE 0 END) as total_active_eu,
sum(CASE WHEN active_government THEN 1 ELSE 0 END) as total_active_government	,
sum(CASE WHEN active_committee THEN 1 ELSE 0 END) as total_active_committee,
sum(CASE WHEN active_parliament THEN 1 ELSE 0 END) as total_active_parliament,
sum(total_assignments::int8)::int8 as total_assignments,
sum(current_assignments::int8)::int8 as current_assignments
from view_riksdagen_politician group by party</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-234">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_politician_document">select hjid as id,document_document_status_con_0 as doc_id,document_type,label,made_public_date,org,number_value,rm,status,sub_title,sub_type,temp_label,title,role_description,person_reference_id,reference_name,party_short_code,order_number from (select * from document_status_container left join document_data on document_status_container.document_document_status_con_0 = document_data.id) as e3 left join (select document_person_reference_da_0.hjid as id,role_description,person_reference_id,reference_name,party_short_code,order_number,document_person_reference_li_1 from document_person_reference_da_0 left join (select document_person_reference_co_0.hjid as person_id_ref from document_status_container left join document_person_reference_co_0 on document_status_container.hjid = document_person_reference_co_0.hjid) e2 on  document_person_reference_da_0.document_person_reference_li_1 = e2.person_id_ref) e4 on e3.document_person_reference_co_1 = e4.document_person_reference_li_1</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-235">

		<dropView viewName="view_riksdagen_party_summary" />

		<createView replaceIfExists="true" viewName="view_riksdagen_politician">select
				view_riksdagen_party_member.id as person_id,
				max(first_name) as first_name,
				max(last_name) as last_name,
				max(party) as party,
				max(born_year) as born_year,
				max(gender) as gender,
				min(assignment_data.from_date) as first_assignment_date,
				max(assignment_data.to_date) as last_assignment_date,
				sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) as total_days_served,
				sum( CASE WHEN assignment_type='kammaruppdrag' and assignment_data.status !='LEDIG' THEN ((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE (CASE WHEN assignment_type='kammaruppdrag' and assignment_data.status ='LEDIG' THEN -((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) END) as total_days_served_parliament,
				sum( CASE WHEN (org_code is not null and assignment_type='uppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_committee,
				sum( CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_government,
				sum( CASE WHEN (detail='Europaparlamentet') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_eu,
				(CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,
				count(*) total_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_assignments,
				sum( CASE WHEN (assignment_type='talmansuppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_speaker,
				CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (assignment_type='talmansuppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END as active_speaker,
				sum( CASE WHEN (assignment_type='partiuppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date) ELSE 0 END) as total_days_served_party,
				CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (assignment_type='partiuppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END as active_party,
				sum((CASE WHEN to_date > CURRENT_DATE and org_code is not null and assignment_type='uppdrag' THEN 1 ELSE 0 END)) as current_committee_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE and (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END)) as current_ministry_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE and assignment_type='partiuppdrag' THEN 1 ELSE 0 END)) as current_party_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE and assignment_type='talmansuppdrag' THEN 1 ELSE 0 END)) as current_speaker_assignments,
				sum((CASE WHEN org_code is not null and assignment_type='uppdrag' THEN 1 ELSE 0 END)) as total_committee_assignments,
				sum((CASE WHEN assignment_type='partiuppdrag' THEN 1 ELSE 0 END)) as total_party_assignments,
				sum((CASE WHEN assignment_type='talmansuppdrag' THEN 1 ELSE 0 END)) as total_speaker_assignments,
				sum((CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END)) as total_ministry_assignments,
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND detail='Europaparlamentet' THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_eu,
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_government,(
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (org_code is not null and assignment_type='uppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END)) as active_committee,
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' and assignment_data.status !='LEDIG' THEN 1 ELSE (CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' and assignment_data.status ='LEDIG' THEN -1 ELSE 0 END) END) > 0 THEN true ELSE false END) as active_parliament
					 from assignment_data left join view_riksdagen_party_member on assignment_data.intressent_id = view_riksdagen_party_member.id group by view_riksdagen_party_member.id</createView>

		<createView replaceIfExists="true" viewName="view_riksdagen_party_summary">select
	party,
	min(first_assignment_date) as first_assignment_date,
	max(last_assignment_date) as last_assignment_date,
	sum(total_days_served::int8)::int8 as total_days_served,
	sum(total_days_served_parliament::int8)::int8 as total_days_served_parliament,
	sum(total_days_served_committee::int8)::int8 as total_days_served_committee,
	sum(total_days_served_government::int8)::int8 as total_days_served_government,
	sum(total_days_served_eu::int8)::int8 as total_days_served_eu,
	sum(total_days_served_speaker::int8)::int8 as total_days_served_speaker,
	sum(total_days_served_party::int8)::int8 as total_days_served_party,
	bool_or(active)	as active,
	bool_or(active_eu) as active_eu,
	bool_or(active_government) as active_government	,
	bool_or(active_committee) as active_committee,
	bool_or(active_parliament) as active_parliament,
	bool_or(active_speaker) as active_speaker,
	bool_or(active_party) as active_party,
	sum(CASE WHEN active THEN 1 ELSE 0 END)	as total_active,
	sum(CASE WHEN active_eu THEN 1 ELSE 0 END) as total_active_eu,
	sum(CASE WHEN active_government THEN 1 ELSE 0 END) as total_active_government,
	sum(CASE WHEN active_committee THEN 1 ELSE 0 END) as total_active_committee,
	sum(CASE WHEN active_parliament THEN 1 ELSE 0 END) as total_active_parliament,
	sum(total_assignments::int8)::int8 as total_assignments,
	sum(total_party_assignments::int8)::int8 as total_party_assignments,
	sum(total_committee_assignments::int8)::int8 as total_committee_assignments,
	sum(total_ministry_assignments::int8)::int8 as total_ministry_assignments,
	sum(total_speaker_assignments::int8)::int8 as total_speaker_assignments,
	sum(current_assignments::int8)::int8 as current_assignments,
	sum(current_party_assignments::int8)::int8 as current_party_assignments,
	sum(current_committee_assignments::int8)::int8 as current_committee_assignments,
	sum(current_ministry_assignments::int8)::int8 as current_ministry_assignments,
	sum(current_speaker_assignments::int8)::int8 as current_speaker_assignments
	from view_riksdagen_politician group by party</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-236">

		<dropView viewName="view_riksdagen_party_summary" />

		<createView replaceIfExists="true" viewName="view_riksdagen_politician">select
				view_riksdagen_party_member.id as person_id,
				max(first_name) as first_name,
				max(last_name) as last_name,
				max(party) as party,
				max(born_year) as born_year,
				max(gender) as gender,
				min(assignment_data.from_date) as first_assignment_date,
				max(assignment_data.to_date) as last_assignment_date,
				sum((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) as total_days_served,
				sum( CASE WHEN assignment_type='kammaruppdrag' and assignment_data.status !='LEDIG' THEN ((CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) ELSE 0 END) as total_days_served_parliament,
				sum( CASE WHEN (org_code is not null and assignment_type='uppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) ELSE 0 END) as total_days_served_committee,
				sum( CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) ELSE 0 END) as total_days_served_government,
				sum( CASE WHEN (detail='Europaparlamentet') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) ELSE 0 END) as total_days_served_eu,
				(CASE WHEN max(to_date) > CURRENT_DATE THEN true ELSE false END) as active,
				count(*) total_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE THEN 1 ELSE 0 END)) as current_assignments,
				sum( CASE WHEN (assignment_type='talmansuppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) ELSE 0 END) as total_days_served_speaker,
				CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (assignment_type='talmansuppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END as active_speaker,
				sum( CASE WHEN (assignment_type='partiuppdrag') THEN (  (CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END)) ELSE 0 END) as total_days_served_party,
				CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (assignment_type='partiuppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END as active_party,
				sum((CASE WHEN to_date > CURRENT_DATE and org_code is not null and assignment_type='uppdrag' THEN 1 ELSE 0 END)) as current_committee_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE and (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END)) as current_ministry_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE and assignment_type='partiuppdrag' THEN 1 ELSE 0 END)) as current_party_assignments,
				sum((CASE WHEN to_date > CURRENT_DATE and assignment_type='talmansuppdrag' THEN 1 ELSE 0 END)) as current_speaker_assignments,
				sum((CASE WHEN org_code is not null and assignment_type='uppdrag' THEN 1 ELSE 0 END)) as total_committee_assignments,
				sum((CASE WHEN assignment_type='partiuppdrag' THEN 1 ELSE 0 END)) as total_party_assignments,
				sum((CASE WHEN assignment_type='talmansuppdrag' THEN 1 ELSE 0 END)) as total_speaker_assignments,
				sum((CASE WHEN (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END)) as total_ministry_assignments,
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND detail='Europaparlamentet' THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_eu,
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END) as active_government,(
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND (org_code is not null and assignment_type='uppdrag') THEN 1 ELSE 0 END) > 0 THEN true ELSE false END)) as active_committee,
				(CASE WHEN sum(CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' and assignment_data.status !='LEDIG' THEN 1 ELSE (CASE WHEN to_date > CURRENT_DATE AND assignment_type='kammaruppdrag' and assignment_data.status ='LEDIG' THEN -1 ELSE 0 END) END) > 0 THEN true ELSE false END) as active_parliament
					 from assignment_data left join view_riksdagen_party_member on assignment_data.intressent_id = view_riksdagen_party_member.id group by view_riksdagen_party_member.id</createView>

		<createView replaceIfExists="true" viewName="view_riksdagen_party_summary">select
	party,
	min(first_assignment_date) as first_assignment_date,
	max(last_assignment_date) as last_assignment_date,
	sum(total_days_served::int8)::int8 as total_days_served,
	sum(total_days_served_parliament::int8)::int8 as total_days_served_parliament,
	sum(total_days_served_committee::int8)::int8 as total_days_served_committee,
	sum(total_days_served_government::int8)::int8 as total_days_served_government,
	sum(total_days_served_eu::int8)::int8 as total_days_served_eu,
	sum(total_days_served_speaker::int8)::int8 as total_days_served_speaker,
	sum(total_days_served_party::int8)::int8 as total_days_served_party,
	bool_or(active)	as active,
	bool_or(active_eu) as active_eu,
	bool_or(active_government) as active_government	,
	bool_or(active_committee) as active_committee,
	bool_or(active_parliament) as active_parliament,
	bool_or(active_speaker) as active_speaker,
	bool_or(active_party) as active_party,
	sum(CASE WHEN active THEN 1 ELSE 0 END)	as total_active,
	sum(CASE WHEN active_eu THEN 1 ELSE 0 END) as total_active_eu,
	sum(CASE WHEN active_government THEN 1 ELSE 0 END) as total_active_government,
	sum(CASE WHEN active_committee THEN 1 ELSE 0 END) as total_active_committee,
	sum(CASE WHEN active_parliament THEN 1 ELSE 0 END) as total_active_parliament,
	sum(total_assignments::int8)::int8 as total_assignments,
	sum(total_party_assignments::int8)::int8 as total_party_assignments,
	sum(total_committee_assignments::int8)::int8 as total_committee_assignments,
	sum(total_ministry_assignments::int8)::int8 as total_ministry_assignments,
	sum(total_speaker_assignments::int8)::int8 as total_speaker_assignments,
	sum(current_assignments::int8)::int8 as current_assignments,
	sum(current_party_assignments::int8)::int8 as current_party_assignments,
	sum(current_committee_assignments::int8)::int8 as current_committee_assignments,
	sum(current_ministry_assignments::int8)::int8 as current_ministry_assignments,
	sum(current_speaker_assignments::int8)::int8 as current_speaker_assignments
	from view_riksdagen_politician group by party</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-237">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_role_member">select hjid as roleId,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data  left join person_data on assignment_data.intressent_id = person_data.id where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_role_member">select hjid as roleId,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where org_code is not null and assignment_type='uppdrag'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_party_role_member">select hjid as roleId,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where assignment_type='partiuppdrag'</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-238">

		<dropForeignKeyConstraint baseTableName="user_account"
			constraintName="fk_8mmnmcgjut9nc7dfhrgxi598f" />

		<dropTable cascadeConstraints="true" tableName="aggregated_bug_data" />
		<dropTable cascadeConstraints="true" tableName="aggregated_country_data" />

		<dropColumn columnName="country_user_account_hjid"
			tableName="user_account" />

		<addColumn tableName="user_account">
			<column name="country" type="varchar(255)" />
		</addColumn>


	</changeSet>



	<changeSet author="pether" id="1414872417007-239">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data  left join person_data on assignment_data.intressent_id = person_data.id where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where org_code is not null and assignment_type='uppdrag'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_party_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - from_date as total_days_served,(CASE WHEN to_date > CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where assignment_type='partiuppdrag'</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-240">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_goverment_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END) as total_days_served,(CASE WHEN to_date > CURRENT_DATE and from_date &lt; CURRENT_DATE  THEN true ELSE false END) as active from assignment_data  left join person_data on assignment_data.intressent_id = person_data.id where role_code like'%MINISTER' or detail like '%departementet' or detail='Statsrådsberedningen'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END) as total_days_served,(CASE WHEN to_date > CURRENT_DATE and from_date &lt; CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where org_code is not null and assignment_type='uppdrag'</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_party_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END) as total_days_served,(CASE WHEN to_date > CURRENT_DATE and from_date &lt; CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where assignment_type='partiuppdrag'</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-241">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary">select embedded_id_ballot_id as ballot_id,max(embedded_id_concern) as concern,max(embedded_id_issue) as issue,max(ballot_type),max(rm) as rm, max(label) as label,max(vote_date) as vote_date,round(avg(born_year)) as avg_born_year,count(*) as total_votes,sum( case when vote='JA' then 1 else 0 end) as yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='Nej' then 1 else 0 end)  as approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='Nej' then 1 else 0 end)  as no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as percentage_male from vote_data group by embedded_id_ballot_id</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-242">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary">select embedded_id_ballot_id as ballot_id,party,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	((sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='Nej' then 1 else 0 end)) and bool_or(approved))  or ((sum( case when vote='NEJ' then 1 else 0 end) > sum( case when vote='JA' then 1 else 0 end)) and not bool_or(approved)) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(embedded_id_concern) as concern,max(embedded_id_issue) as issue,max(ballot_type),max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,round(avg(born_year)) as party_avg_born_year,count(*) as party_total_votes,sum( case when vote='JA' then 1 else 0 end) as party_yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as party_no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as party_abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as party_absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='Nej' then 1 else 0 end)  as party_approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='Nej' then 1 else 0 end)  as party_no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as party_percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as party_percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as party_percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as party_percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_summary.ballot_id group by embedded_id_ballot_id,party</createView>
	</changeSet>



	<changeSet author="pether" id="1414872417007-243">

		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary" />

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary">select embedded_id_ballot_id,embedded_id_concern,embedded_id_issue,max(ballot_type) as ballot_type,max(rm) as rm, max(label) as label,max(vote_date) as vote_date,round(avg(born_year)) as avg_born_year,count(*) as total_votes,sum( case when vote='JA' then 1 else 0 end) as yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='Nej' then 1 else 0 end)  as approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='Nej' then 1 else 0 end)  as no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as percentage_male from vote_data group by embedded_id_ballot_id,embedded_id_issue,embedded_id_concern order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary">select vote_data.embedded_id_ballot_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party as embedded_id_party,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	((sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='Nej' then 1 else 0 end)) and bool_or(approved))  or ((sum( case when vote='NEJ' then 1 else 0 end) > sum( case when vote='JA' then 1 else 0 end)) and not bool_or(approved)) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,round(avg(born_year)) as party_avg_born_year,count(*) as party_total_votes,sum( case when vote='JA' then 1 else 0 end) as party_yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as party_no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as party_abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as party_absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='Nej' then 1 else 0 end)  as party_approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='Nej' then 1 else 0 end)  as party_no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as party_percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as party_percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as party_percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as party_percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_summary.embedded_id_concern group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,party order by vote_date</createView>

	</changeSet>



	<changeSet author="pether" id="1414872417007-244">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_daily">select vote_date,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,	round(avg(percentage_yes),2) as avg_percentage_yes,
	round(avg(percentage_no),2) as avg_percentage_no,
	round(avg(percentage_absent),2) as avg_percentage_absent,
	round(avg(percentage_abstain),2) as avg_percentage_abstain,
	round(avg(percentage_male),2) as avg_percentage_male
   from view_riksdagen_vote_data_ballot_summary group by 1 order by vote_date</createView>
	</changeSet>

	<changeSet author="pether" id="1414872417007-245">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_weekly">select   date_trunc('week', vote_date), sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_monthly">select   date_trunc('month', vote_date), sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_annual">select   date_trunc('year', vote_date), sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>


	</changeSet>


	<changeSet author="pether" id="1414872417007-246">


		<dropView viewName="view_riksdagen_vote_data_ballot_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_annual" />



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_daily">select vote_date,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,	round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent

		   from view_riksdagen_vote_data_ballot_summary group by 1 order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_weekly">select   date_trunc('week', vote_date), sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_monthly">select   date_trunc('month', vote_date), sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_annual">select   date_trunc('year', vote_date), sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-247">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_daily">select vote_date,embedded_id_party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage
		   from view_riksdagen_vote_data_ballot_party_summary group by embedded_id_party,1 order by vote_date</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-248">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_weekly">select   date_trunc('week', vote_date),embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_monthly">select   date_trunc('month', vote_date),embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_annual">select   date_trunc('year', vote_date),embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-249">


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary">select vote_data.embedded_id_ballot_id,embedded_id_intressent_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party as embedded_id_party,max(first_name) as first_name, max(last_name) as last_name,max(gender) as gender, max(born_year) as born_year,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	max(vote) as vote,
	case when (vote='JA' and bool_or(approved)) or (vote='NEJ' and not bool_or(approved)) then true else false end as won,
	case when (vote='NEJ' and bool_or(party_approved)) or (vote='JA' and not bool_or(party_approved)) then true else false end as rebel,
	bool_or(party_won) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,max(party_avg_born_year) as party_avg_born_year,max(party_total_votes) as party_total_votes,max(party_yes_votes) as party_yes_votes,max(party_no_votes) as party_no_votes,max(party_abstain_votes) as party_abstain_votes,max(party_absent_votes) as party_absent_votes ,bool_or(party_approved) as party_approved,bool_or(party_no_winner) as party_no_winner, max(party_percentage_yes) as party_percentage_yes,max(party_percentage_no) as party_percentage_no,max(party_percentage_absent) as party_percentage_absent,max(party_percentage_abstain) as party_percentage_abstain,max(party_percentage_male) as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_party_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_concern and vote_data.party =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_party group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,embedded_id_intressent_id order by vote_date</createView>


	</changeSet>

	<changeSet author="pether" id="1414872417007-250">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_daily">select vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			sum( case when vote='JA' then 1 else 0 end) as politician_yes_votes,
			sum( case when vote='NEJ' then 1 else 0 end) as politician_no_votes,
			sum( case when vote='AVSTÅR' then 1 else 0 end) as politician_abstain_votes,
			sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as politician_absent_votes,
			round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as politician_percentage_yes,
			round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as politician_percentage_no,
			round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as politician_percentage_absent,
			round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as politician_percentage_abstain,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage,
			round( (100 * sum(case when won then 1 else 0 end)) / count(*),2) as won_percentage,
			sum(case when won then 1 else 0 end) as won_total,
			round( (100 * sum(case when rebel then 1 else 0 end)) / count(*),2) as rebel_percentage,
			sum(case when rebel then 1 else 0 end) as rebel_total
		   from view_riksdagen_vote_data_ballot_politician_summary group by embedded_id_intressent_id,1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_weekly">select   date_trunc('week', vote_date),embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_monthly">select   date_trunc('month', vote_date),embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_annual">select   date_trunc('year', vote_date),embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-251">

		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary" />

		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary" />

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary">select embedded_id_ballot_id,embedded_id_concern,embedded_id_issue,max(ballot_type) as ballot_type,max(rm) as rm, max(label) as label,max(vote_date) as vote_date,round(avg(born_year)) as avg_born_year,count(*) as total_votes,sum( case when vote='JA' then 1 else 0 end) as yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)  as approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='NEJ' then 1 else 0 end)  as no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as percentage_male from vote_data group by embedded_id_ballot_id,embedded_id_issue,embedded_id_concern order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary">select vote_data.embedded_id_ballot_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party as embedded_id_party,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	((sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)) and bool_or(approved))  or ((sum( case when vote='NEJ' then 1 else 0 end) > sum( case when vote='JA' then 1 else 0 end)) and not bool_or(approved)) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,round(avg(born_year)) as party_avg_born_year,count(*) as party_total_votes,sum( case when vote='JA' then 1 else 0 end) as party_yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as party_no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as party_abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as party_absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)  as party_approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='NEJ' then 1 else 0 end)  as party_no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as party_percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as party_percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as party_percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as party_percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_summary.embedded_id_concern group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,party order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary">select vote_data.embedded_id_ballot_id,embedded_id_intressent_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party as embedded_id_party,max(first_name) as first_name, max(last_name) as last_name,max(gender) as gender, max(born_year) as born_year,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	max(vote) as vote,
	case when (vote='JA' and bool_or(approved)) or (vote='NEJ' and not bool_or(approved)) then true else false end as won,
	case when (vote='NEJ' and bool_or(party_approved)) or (vote='JA' and not bool_or(party_approved)) then true else false end as rebel,
	bool_or(party_won) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,max(party_avg_born_year) as party_avg_born_year,max(party_total_votes) as party_total_votes,max(party_yes_votes) as party_yes_votes,max(party_no_votes) as party_no_votes,max(party_abstain_votes) as party_abstain_votes,max(party_absent_votes) as party_absent_votes ,bool_or(party_approved) as party_approved,bool_or(party_no_winner) as party_no_winner, max(party_percentage_yes) as party_percentage_yes,max(party_percentage_no) as party_percentage_no,max(party_percentage_absent) as party_percentage_absent,max(party_percentage_abstain) as party_percentage_abstain,max(party_percentage_male) as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_party_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_concern and vote_data.party =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_party group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,embedded_id_intressent_id order by vote_date</createView>



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_daily">select vote_date,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,	round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum( case when approved then 1 else 0 end) as approved_ballots,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent

		   from view_riksdagen_vote_data_ballot_summary group by 1 order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_weekly">select   date_trunc('week', vote_date) as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_monthly">select   date_trunc('month', vote_date)  as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_annual">select   date_trunc('year', vote_date)  as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_daily">select vote_date,embedded_id_party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage
		   from view_riksdagen_vote_data_ballot_party_summary group by embedded_id_party,1 order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_weekly">select   date_trunc('week', vote_date)  as vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_monthly">select   date_trunc('month', vote_date)  as vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_annual">select   date_trunc('year', vote_date)  as vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_daily">select vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			sum( case when vote='JA' then 1 else 0 end) as politician_yes_votes,
			sum( case when vote='NEJ' then 1 else 0 end) as politician_no_votes,
			sum( case when vote='AVSTÅR' then 1 else 0 end) as politician_abstain_votes,
			sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as politician_absent_votes,
			round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as politician_percentage_yes,
			round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as politician_percentage_no,
			round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as politician_percentage_absent,
			round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as politician_percentage_abstain,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage,
			round( (100 * sum(case when won then 1 else 0 end)) / count(*),2) as won_percentage,
			sum(case when won then 1 else 0 end) as won_total,
			round( (100 * sum(case when rebel then 1 else 0 end)) / count(*),2) as rebel_percentage,
			sum(case when rebel then 1 else 0 end) as rebel_total
		   from view_riksdagen_vote_data_ballot_politician_summary group by embedded_id_intressent_id,1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_weekly">select   date_trunc('week', vote_date)  as vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_monthly">select   date_trunc('month', vote_date)  as vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_annual">select   date_trunc('year', vote_date)  as vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(embedded_id_party) as embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>



	</changeSet>



	<changeSet author="pether (generated)" id="1414872417007-252">


		<dropView viewName="view_riksdagen_committee_decisions" />

		<modifyDataType columnName="title" newDataType="text"
			tableName="committee_document_data" />
		<modifyDataType columnName="sub_title" newDataType="text"
			tableName="committee_document_data" />
		<modifyDataType columnName="temp_label" newDataType="text"
			tableName="committee_document_data" />


		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decisions">select id,title,header,hangar_id,label as committee_report,committee_document_data.rm,end_number,issue_number,org,created_date,public_date,committee_proposal_url_xml,decision_type,ballot_id,against_proposal_parties,against_proposal_number,winner from committee_proposal_data LEFT JOIN committee_document_data ON committee_document_data.label=committee_report and committee_proposal_data.rm=committee_document_data.rm</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-253">

		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary" />

		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary" />

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary">select embedded_id_ballot_id,embedded_id_concern,embedded_id_issue,max(ballot_type) as ballot_type,max(rm) as rm, max(label) as label,max(vote_date) as vote_date,round(avg(born_year)) as avg_born_year,count(*) as total_votes,sum( case when vote='JA' then 1 else 0 end) as yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)  as approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='NEJ' then 1 else 0 end)  as no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as percentage_male from vote_data group by embedded_id_ballot_id,embedded_id_issue,embedded_id_concern order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary">select vote_data.embedded_id_ballot_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party as embedded_id_party,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	((sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)) and bool_or(approved))  or ((sum( case when vote='NEJ' then 1 else 0 end) > sum( case when vote='JA' then 1 else 0 end)) and not bool_or(approved)) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,round(avg(born_year)) as party_avg_born_year,count(*) as party_total_votes,sum( case when vote='JA' then 1 else 0 end) as party_yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as party_no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as party_abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as party_absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)  as party_approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='NEJ' then 1 else 0 end)  as party_no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as party_percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as party_percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as party_percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as party_percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_summary.embedded_id_concern group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,party order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary">select vote_data.embedded_id_ballot_id,embedded_id_intressent_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party,max(first_name) as first_name, max(last_name) as last_name,max(gender) as gender, max(born_year) as born_year,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	max(vote) as vote,
	case when (vote='JA' and bool_or(approved)) or (vote='NEJ' and not bool_or(approved)) then true else false end as won,
	case when (vote='NEJ' and bool_or(party_approved)) or (vote='JA' and not bool_or(party_approved)) then true else false end as rebel,
	bool_or(party_won) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,max(party_avg_born_year) as party_avg_born_year,max(party_total_votes) as party_total_votes,max(party_yes_votes) as party_yes_votes,max(party_no_votes) as party_no_votes,max(party_abstain_votes) as party_abstain_votes,max(party_absent_votes) as party_absent_votes ,bool_or(party_approved) as party_approved,bool_or(party_no_winner) as party_no_winner, max(party_percentage_yes) as party_percentage_yes,max(party_percentage_no) as party_percentage_no,max(party_percentage_absent) as party_percentage_absent,max(party_percentage_abstain) as party_percentage_abstain,max(party_percentage_male) as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_party_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_concern and vote_data.party =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_party group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,embedded_id_intressent_id order by vote_date</createView>



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_daily">select vote_date,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,	round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum( case when approved then 1 else 0 end) as approved_ballots,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent

		   from view_riksdagen_vote_data_ballot_summary group by 1 order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_weekly">select   date(date_trunc('week', vote_date)) as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_monthly">select   date(date_trunc('month', vote_date))  as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_summary_annual">select   date(date_trunc('year', vote_date))  as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</createView>



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_daily">select vote_date as embedded_id_vote_date,embedded_id_party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage
		   from view_riksdagen_vote_data_ballot_party_summary group by embedded_id_party,1 order by vote_date</createView>


		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_weekly">select   date(date_trunc('week', embedded_id_vote_date)) as embedded_id_vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_monthly">select   date(date_trunc('month', embedded_id_vote_date)) as  embedded_id_vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_party_summary_annual">select   date(date_trunc('year', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</createView>



		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_daily">select vote_date as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			sum( case when vote='JA' then 1 else 0 end) as politician_yes_votes,
			sum( case when vote='NEJ' then 1 else 0 end) as politician_no_votes,
			sum( case when vote='AVSTÅR' then 1 else 0 end) as politician_abstain_votes,
			sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as politician_absent_votes,
			round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as politician_percentage_yes,
			round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as politician_percentage_no,
			round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as politician_percentage_absent,
			round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as politician_percentage_abstain,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage,
			round( (100 * sum(case when won then 1 else 0 end)) / count(*),2) as won_percentage,
			sum(case when won then 1 else 0 end) as won_total,
			round( (100 * sum(case when rebel then 1 else 0 end)) / count(*),2) as rebel_percentage,
			sum(case when rebel then 1 else 0 end) as rebel_total
		   from view_riksdagen_vote_data_ballot_politician_summary group by embedded_id_intressent_id,1</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_weekly">select   date(date_trunc('week', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_monthly">select   date(date_trunc('month', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_vote_data_ballot_politician_summary_annual">select   date(date_trunc('year', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</createView>



	</changeSet>

	<changeSet author="pether" id="1414872417007-254">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_document_type_daily_summary">select left(made_public_date,10) as embedded_id_public_date,document_type as embedded_id_document_type,count(*) as total from document_element group by left(made_public_date,10),document_type</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_politician_document_daily_summary">select made_public_date as embedded_id_public_date,person_reference_id as embedded_id_person_id,document_type as embedded_id_document_type,count(*) as total from view_riksdagen_politician_document group by made_public_date,document_type,person_reference_id</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_party_document_daily_summary">select made_public_date as embedded_id_public_date,party_short_code as embedded_id_party_short_code,document_type as embedded_id_document_type,count(distinct id) distinct_documents,count(distinct person_reference_id) as distinct_people,count(*) total from view_riksdagen_politician_document group by made_public_date,document_type,party_short_code;</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_org_document_daily_summary">select left(made_public_date,10) as embedded_id_public_date,org as embedded_id_org,document_type,count(*) as total from document_element group by left(made_public_date,10),document_type,org</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-255">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_summary">select upper(decision_type) as embedded_id_decision_type,public_date as embedded_id_decision_date,count(*) as total from view_riksdagen_committee_decisions group by upper(decision_type),public_date</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_org_summary">select upper(decision_type) as embedded_id_decision_type,org as embedded_id_org,public_date as embedded_id_decision_date,count(*) as total from view_riksdagen_committee_decisions group by upper(decision_type),public_date,org</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-256">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_summary">select upper(decision_type) as embedded_id_decision_type,public_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),public_date order by public_date</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_org_summary">select upper(decision_type) as embedded_id_decision_type,org as embedded_id_org,public_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),public_date,org</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-257">

		<dropView viewName="view_riksdagen_committee_decision_type_summary" />
		<dropView viewName="view_riksdagen_committee_decision_type_org_summary" />
		<dropView viewName="view_riksdagen_committee_decisions" />


		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decisions">select id as embedded_id_id,title,header,hangar_id as embedded_id_hangar_id,label as committee_report,committee_document_data.rm,end_number,issue_number as embedded_id_issue_nummer,org,created_date,public_date,committee_proposal_url_xml,decision_type,ballot_id,against_proposal_parties,against_proposal_number,winner from committee_proposal_data LEFT JOIN committee_document_data ON committee_document_data.label=committee_report and committee_proposal_data.rm=committee_document_data.rm</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_summary">select upper(decision_type) as embedded_id_decision_type,public_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),public_date order by public_date</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_org_summary">select upper(decision_type) as embedded_id_decision_type,org as embedded_id_org,public_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),public_date,org</createView>

	</changeSet>



	<changeSet author="pether" id="1414872417007-258">

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_ballot_decision_summary">select embedded_id_id,embedded_id_issue,embedded_id_hangar_id,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer	::text=view_riksdagen_vote_data_ballot_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_ballot_decision_party_summary">select embedded_id_party,embedded_id_id,embedded_id_issue,embedded_id_hangar_id,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male,party_avg_born_year,party_total_votes,party_yes_votes,party_no_votes,party_abstain_votes,party_absent_votes,party_approved,party_no_winner,party_percentage_yes,party_percentage_no,party_percentage_absent,party_percentage_abstain,party_percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_party_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_party_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer::text=view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_ballot_decision_politician_summary">select embedded_id_intressent_id,party,embedded_id_id,embedded_id_issue,embedded_id_hangar_id,first_name,last_name,born_year,vote,won,rebel,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male,party_avg_born_year,party_total_votes,party_yes_votes,party_no_votes,party_abstain_votes,party_absent_votes,party_approved,party_no_winner,party_percentage_yes,party_percentage_no,party_percentage_absent,party_percentage_abstain,party_percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_politician_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_politician_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer::text=view_riksdagen_vote_data_ballot_politician_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-259">
		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_summary">select upper(decision_type) as embedded_id_decision_type,created_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),created_date order by created_date</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_org_summary">select upper(decision_type) as embedded_id_decision_type,org as embedded_id_org,created_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),created_date,org</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-260">

		<dropView viewName="view_riksdagen_committee_decision_type_summary" />
		<dropView viewName="view_riksdagen_committee_decision_type_org_summary" />


		<dropView viewName="view_riksdagen_committee_ballot_decision_summary" />
		<dropView viewName="view_riksdagen_committee_ballot_decision_party_summary" />
		<dropView
			viewName="view_riksdagen_committee_ballot_decision_politician_summary" />


		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decisions">select id as embedded_id_id,title,header,hangar_id as embedded_id_hangar_id,label as committee_report,committee_document_data.rm,end_number,issue_number as embedded_id_issue_nummer,upper(org) as org,created_date,public_date,committee_proposal_url_xml,decision_type,ballot_id,against_proposal_parties,against_proposal_number,winner from committee_proposal_data LEFT JOIN committee_document_data ON committee_document_data.label=committee_report and committee_proposal_data.rm=committee_document_data.rm</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_ballot_decision_summary">select embedded_id_id,embedded_id_issue,embedded_id_hangar_id,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,upper(org) as org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer	::text=view_riksdagen_vote_data_ballot_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_ballot_decision_party_summary">select embedded_id_party,embedded_id_id,embedded_id_issue,embedded_id_hangar_id,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,upper(org) as org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male,party_avg_born_year,party_total_votes,party_yes_votes,party_no_votes,party_abstain_votes,party_absent_votes,party_approved,party_no_winner,party_percentage_yes,party_percentage_no,party_percentage_absent,party_percentage_abstain,party_percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_party_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_party_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer::text=view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_ballot_decision_politician_summary">select embedded_id_intressent_id,party,embedded_id_id,embedded_id_issue,embedded_id_hangar_id,first_name,last_name,born_year,vote,won,rebel,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,upper(org) as org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male,party_avg_born_year,party_total_votes,party_yes_votes,party_no_votes,party_abstain_votes,party_absent_votes,party_approved,party_no_winner,party_percentage_yes,party_percentage_no,party_percentage_absent,party_percentage_abstain,party_percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_politician_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_politician_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer::text=view_riksdagen_vote_data_ballot_politician_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_summary">select upper(decision_type) as embedded_id_decision_type,created_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),created_date order by created_date</createView>

		<createView replaceIfExists="true"
			viewName="view_riksdagen_committee_decision_type_org_summary">select upper(decision_type) as embedded_id_decision_type,upper(org) as embedded_id_org,created_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),created_date,upper(org)</createView>
	</changeSet>


	<changeSet author="pether" id="1414872417007-261">
		<createView replaceIfExists="true"
			viewName="view_worldbank_indicator_data_country_summary">select indicator_id as embedded_id_indicator_id,country_id as embedded_id_country_id,max(indicator_name) as indicator_name,max(source_id) as source_id,max(source_value) as source_value,max(source_note) as source_note,max(source_organization) as source_organization,min(year_date) as start_year, max(year_date) as end_year,count(*) as data_point from world_bank_data  left join indicator_element on indicator_id = indicator_element.id where data_value!='' group by indicator_id,country_id</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-262">
		<createView replaceIfExists="true"
			viewName="view_worldbank_indicator_data_country_summary">select indicator_id as embedded_id_indicator_id,country_id as embedded_id_country_id,max(indicator_name) as indicator_name,max(source_id) as source_id,max(source_value) as source_value,max(source_note) as source_note,max(source_organization) as source_organization,min(year_date) as start_year, max(year_date) as end_year,count(*) as data_point from world_bank_data  left join indicator_element on indicator_id = indicator_element.id where data_value!='' and data_value!='0' and year_date is not null and source_organization is not null and source_organization !='' group by indicator_id,country_id</createView>

	</changeSet>


	<changeSet author="pether" id="1414872417007-263">
		<createView replaceIfExists="true"
			viewName="view_worldbank_indicator_data_country_summary">select indicator_id as embedded_id_indicator_id,country_id as embedded_id_country_id,max(indicator_name) as indicator_name,max(source_id) as source_id,max(source_value) as source_value,max(source_note) as source_note,max(source_organization) as source_organization,min(year_date) as start_year, max(year_date) as end_year,count(*) as data_point,max(topics::text) as topics from world_bank_data  left join (select * from indicator_element   inner join (select topic_topics_hjid,string_agg(distinct value_,';') as topics,count(*) as number_of_topics from topic group by topic_topics_hjid) AS derivedTable  on indicator_element.topics_indicator_element_hjid=derivedTable.topic_topics_hjid) as indicators on indicator_id = indicators.id where data_value!='' and data_value!='0' and year_date is not null and source_organization is not null and source_organization !='' group by indicator_id,country_id</createView>

	</changeSet>

	<changeSet author="pether" id="1414872417007-264" >

		<dropView viewName="view_riksdagen_committee_decision_type_summary" />
		<dropView viewName="view_riksdagen_committee_decision_type_org_summary" />


		<dropView viewName="view_riksdagen_committee_ballot_decision_summary" />
		<dropView viewName="view_riksdagen_committee_ballot_decision_party_summary" />
		<dropView viewName="view_riksdagen_committee_ballot_decision_politician_summary" />

		<dropView viewName="view_riksdagen_committee_decisions"/>

		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_summary_daily" />


		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_weekly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_monthly" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_annual" />
		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary_daily" />

		<dropView viewName="view_riksdagen_vote_data_ballot_politician_summary" />

		<dropView viewName="view_riksdagen_vote_data_ballot_party_summary" />

		<dropView viewName="view_riksdagen_vote_data_ballot_summary"/>

		<sql>create materialized view view_riksdagen_vote_data_ballot_summary as select embedded_id_ballot_id,embedded_id_concern,embedded_id_issue,max(ballot_type) as ballot_type,max(rm) as rm, max(label) as label,max(vote_date) as vote_date,round(avg(born_year)) as avg_born_year,count(*) as total_votes,sum( case when vote='JA' then 1 else 0 end) as yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)  as approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='NEJ' then 1 else 0 end)  as no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as percentage_male from vote_data group by embedded_id_ballot_id,embedded_id_issue,embedded_id_concern order by vote_date</sql>


		<sql>create materialized view  view_riksdagen_vote_data_ballot_party_summary as select vote_data.embedded_id_ballot_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party as embedded_id_party,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	((sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)) and bool_or(approved))  or ((sum( case when vote='NEJ' then 1 else 0 end) > sum( case when vote='JA' then 1 else 0 end)) and not bool_or(approved)) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,round(avg(born_year)) as party_avg_born_year,count(*) as party_total_votes,sum( case when vote='JA' then 1 else 0 end) as party_yes_votes,sum( case when vote='NEJ' then 1 else 0 end) as party_no_votes,sum( case when vote='AVSTÅR' then 1 else 0 end) as party_abstain_votes,sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as party_absent_votes , sum( case when vote='JA' then 1 else 0 end) > sum( case when vote='NEJ' then 1 else 0 end)  as party_approved ,sum( case when vote='JA' then 1 else 0 end) = sum( case when vote='NEJ' then 1 else 0 end)  as party_no_winner, round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as party_percentage_yes,round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as party_percentage_no,round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as party_percentage_absent,round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as party_percentage_abstain,round((100.0 *sum( case when gender='MAN' then 1 else 0 end)) / count(*),2)  as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_summary.embedded_id_concern group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,party order by vote_date</sql>


	<sql>create materialized view view_riksdagen_vote_data_ballot_politician_summary as select vote_data.embedded_id_ballot_id,embedded_id_intressent_id,vote_data.embedded_id_concern,vote_data.embedded_id_issue,party,max(first_name) as first_name, max(last_name) as last_name,max(gender) as gender, max(born_year) as born_year,
	max(avg_born_year) as avg_born_year,
	max(total_votes) as total_votes,
	max(yes_votes) as yes_votes,
	max(no_votes) as no_votes,
	max(abstain_votes) as abstain_votes,
	max(absent_votes) as absent_votes,
	bool_or(approved) as approved,
	max(vote) as vote,
	case when (vote='JA' and bool_or(approved)) or (vote='NEJ' and not bool_or(approved)) then true else false end as won,
	case when (vote='NEJ' and bool_or(party_approved)) or (vote='JA' and not bool_or(party_approved)) then true else false end as rebel,
	bool_or(party_won) as party_won,
	bool_or(no_winner) as no_winner,
	max(percentage_yes) as percentage_yes,
	max(percentage_no) as percentage_no,
	max(percentage_absent) as percentage_absent,
	max(percentage_abstain) as percentage_abstain,
	max(percentage_male) as percentage_male,
	max(vote_data.ballot_type) as ballot_type ,max(vote_data.rm) as rm, max(vote_data.label) as label,max(vote_data.vote_date) as vote_date,max(party_avg_born_year) as party_avg_born_year,max(party_total_votes) as party_total_votes,max(party_yes_votes) as party_yes_votes,max(party_no_votes) as party_no_votes,max(party_abstain_votes) as party_abstain_votes,max(party_absent_votes) as party_absent_votes ,bool_or(party_approved) as party_approved,bool_or(party_no_winner) as party_no_winner, max(party_percentage_yes) as party_percentage_yes,max(party_percentage_no) as party_percentage_no,max(party_percentage_absent) as party_percentage_absent,max(party_percentage_abstain) as party_percentage_abstain,max(party_percentage_male) as party_percentage_male from vote_data left join view_riksdagen_vote_data_ballot_party_summary on vote_data.embedded_id_ballot_id =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_ballot_id and vote_data.embedded_id_issue =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue and vote_data.embedded_id_concern =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_concern and vote_data.party =  view_riksdagen_vote_data_ballot_party_summary.embedded_id_party group by vote_data.embedded_id_ballot_id,vote_data.embedded_id_issue,vote_data.embedded_id_concern,embedded_id_intressent_id order by vote_date</sql>



	<sql>create materialized view view_riksdagen_vote_data_ballot_summary_daily as select vote_date,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,	round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum( case when approved then 1 else 0 end) as approved_ballots,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent

		   from view_riksdagen_vote_data_ballot_summary group by 1 order by vote_date</sql>


	<sql>create materialized view view_riksdagen_vote_data_ballot_summary_weekly as select   date(date_trunc('week', vote_date)) as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_summary_monthly as select   date(date_trunc('month', vote_date))  as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_summary_annual as select   date(date_trunc('year', vote_date))  as vote_date, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
	sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
	sum(approved_ballots) as approved_ballots,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round((100.0 * sum(approved_ballots)) / sum(number_ballots),2) as percentage_approved,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_summary_daily group by 1</sql>



	<sql>create materialized view view_riksdagen_vote_data_ballot_party_summary_daily as select vote_date as embedded_id_vote_date,embedded_id_party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage
		   from view_riksdagen_vote_data_ballot_party_summary group by embedded_id_party,1 order by vote_date</sql>


	<sql>create materialized view view_riksdagen_vote_data_ballot_party_summary_weekly as select   date(date_trunc('week', embedded_id_vote_date)) as embedded_id_vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_party_summary_monthly as select   date(date_trunc('month', embedded_id_vote_date)) as  embedded_id_vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_party_summary_annual as select   date(date_trunc('year', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_party_summary_daily group by 1,embedded_id_party</sql>



	<sql>create materialized view view_riksdagen_vote_data_ballot_politician_summary_daily as select vote_date as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party,count(*) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,max(total_votes) avg_total_votes,round(avg(yes_votes),2) as avg_yes_votes,round(avg(no_votes),2) as avg_no_votes,round(avg(abstain_votes),2) as avg_abstain_votes,round(avg(absent_votes),2) as avg_absent_votes,  round((100.0 * sum( case when approved then 1 else 0 end)) / count(*),2) as percentage_approved,
			round(avg(percentage_yes),2) as avg_percentage_yes,
			round(avg(percentage_no),2) as avg_percentage_no,
			round(avg(percentage_absent),2) as avg_percentage_absent,
			round(avg(percentage_abstain),2) as avg_percentage_abstain,
			round(avg(percentage_male),2) as avg_percentage_male,
			sum(total_votes) as total_votes,
			sum(yes_votes) as yes_votes,
			sum(no_votes) as no_votes,
			sum(abstain_votes) as abstain_votes,
			sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			sum( case when vote='JA' then 1 else 0 end) as politician_yes_votes,
			sum( case when vote='NEJ' then 1 else 0 end) as politician_no_votes,
			sum( case when vote='AVSTÅR' then 1 else 0 end) as politician_abstain_votes,
			sum( case when vote='FRÅNVARANDE' then 1 else 0 end) as politician_absent_votes,
			round((100.0 *sum( case when vote='JA' then 1 else 0 end)) / count(*),2)  as politician_percentage_yes,
			round((100.0 *sum( case when vote='NEJ' then 1 else 0 end)) / count(*),2)  as politician_percentage_no,
			round((100.0 *sum( case when vote='FRÅNVARANDE' then 1 else 0 end)) / count(*),2)  as politician_percentage_absent,
			round((100.0 *sum( case when vote='AVSTÅR' then 1 else 0 end)) / count(*),2)  as politician_percentage_abstain,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
			round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
			round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
			round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
			sum(case when party_won then 1 else 0 end) as party_won_total,
			round( (100 * sum(case when party_won then 1 else 0 end)) / count(*),2) as party_won_percentage,
			sum(case when approved then 1 else 0 end) as approved_total,
			round( (100 * sum(case when approved then 1 else 0 end)) / count(*),2) as approved_percentage,
			round( (100 * sum(case when won then 1 else 0 end)) / count(*),2) as won_percentage,
			sum(case when won then 1 else 0 end) as won_total,
			round( (100 * sum(case when rebel then 1 else 0 end)) / count(*),2) as rebel_percentage,
			sum(case when rebel then 1 else 0 end) as rebel_total
		   from view_riksdagen_vote_data_ballot_politician_summary group by embedded_id_intressent_id,1</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_politician_summary_weekly as select   date(date_trunc('week', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_politician_summary_monthly as select   date(date_trunc('month', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</sql>

	<sql>create materialized view view_riksdagen_vote_data_ballot_politician_summary_annual as select   date(date_trunc('year', embedded_id_vote_date))  as embedded_id_vote_date,embedded_id_intressent_id,max(first_name) as first_name,max(last_name) as last_name,max(gender) as gender,max(born_year) as born_year,max(party) as party, sum(number_ballots) as number_ballots,round(avg(avg_born_year),0) as avg_born_year,
	round(avg(avg_percentage_yes),2) as avg_percentage_yes,
	round(avg(avg_percentage_no),2) as avg_percentage_no,
	round(avg(avg_percentage_absent),2) as avg_percentage_absent,
	round(avg(avg_percentage_abstain),2) as avg_percentage_abstain,
	round(avg(avg_percentage_male),2) as avg_percentage_male,
		sum(total_votes) as total_votes,
	sum(yes_votes) as yes_votes,
	sum(no_votes) as no_votes,
	sum(abstain_votes) as abstain_votes,
	sum(absent_votes) as absent_votes,
			sum(party_total_votes) as party_total_votes,
			sum(party_yes_votes) as party_yes_votes,
			sum(party_no_votes) as party_no_votes,
			sum(party_abstain_votes) as party_abstain_votes,
			sum(party_absent_votes) as party_absent_votes,
			round(avg(party_avg_born_year),0) as party_avg_born_year,
			round(avg(party_avg_percentage_male),2) as party_avg_percentage_male,
			round((100.0 * sum(party_yes_votes)) / sum(party_total_votes),2) as party_percentage_yes,
			round((100.0 * sum(party_no_votes)) / sum(party_total_votes),2) as party_percentage_no,
			round((100.0 * sum(party_abstain_votes)) / sum(party_total_votes),2) as party_percentage_abstain,
			round((100.0 * sum(party_absent_votes)) / sum(party_total_votes),2) as party_percentage_absent,
			sum(party_won_total) as party_won_total,
			sum(politician_yes_votes) as politician_yes_votes,
			sum(politician_no_votes) as politician_no_votes,
			sum(politician_abstain_votes) as politician_abstain_votes,
			sum(politician_absent_votes) as politician_absent_votes,
			round((100.0 *sum(politician_yes_votes)) / sum(number_ballots),2)  as politician_percentage_yes,
			round((100.0 *sum(politician_no_votes)) / sum(number_ballots),2)  as politician_percentage_no,
			round((100.0 *sum(politician_abstain_votes)) / sum(number_ballots),2)  as politician_percentage_absent,
			round((100.0 *sum( politician_absent_votes)) / sum(number_ballots),2)  as politician_percentage_abstain,
			round( (100 * sum(won_total)) / sum(number_ballots),2) as won_percentage,
			sum(won_total) as won_total,
			round( (100 * sum(rebel_total)) / sum(number_ballots),2) as rebel_percentage,
			sum(rebel_total) as rebel_total,
			round( (100 * sum(party_won_total)) / sum(number_ballots),2) as party_won_percentage,
			sum(approved_total) as approved_total,
			round( (100 * sum(approved_total)) / sum(number_ballots),2) as approved_percentage,
	round((100.0 * sum(yes_votes)) / sum(total_votes),2) as percentage_yes,
	round((100.0 * sum(no_votes)) / sum(total_votes),2) as percentage_no,
	round((100.0 * sum(abstain_votes)) / sum(total_votes),2) as percentage_abstain,
	round((100.0 * sum(absent_votes)) / sum(total_votes),2) as percentage_absent,
	round(avg(percentage_approved),2) as avg_percentage_approved
 	from view_riksdagen_vote_data_ballot_politician_summary_daily group by 1,embedded_id_intressent_id</sql>


		<sql>create materialized view view_riksdagen_committee_decisions as select id as embedded_id_id,title,header,hangar_id as embedded_id_hangar_id,label as committee_report,committee_document_data.rm,end_number,issue_number as embedded_id_issue_nummer,upper(org) as org,created_date,public_date,committee_proposal_url_xml,decision_type,ballot_id,against_proposal_parties,against_proposal_number,winner from committee_proposal_data LEFT JOIN committee_document_data ON committee_document_data.label=committee_report and committee_proposal_data.rm=committee_document_data.rm</sql>

		<sql>create materialized view view_riksdagen_committee_ballot_decision_summary as select embedded_id_id,embedded_id_issue,embedded_id_hangar_id,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,upper(org) as org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer	::text=view_riksdagen_vote_data_ballot_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</sql>

		<sql>create materialized view view_riksdagen_committee_ballot_decision_party_summary as select embedded_id_party,embedded_id_id,embedded_id_issue,embedded_id_hangar_id,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,upper(org) as org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male,party_avg_born_year,party_total_votes,party_yes_votes,party_no_votes,party_abstain_votes,party_absent_votes,party_approved,party_no_winner,party_percentage_yes,party_percentage_no,party_percentage_absent,party_percentage_abstain,party_percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_party_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_party_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer::text=view_riksdagen_vote_data_ballot_party_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</sql>

		<sql>create materialized view view_riksdagen_committee_ballot_decision_politician_summary as select embedded_id_intressent_id,party,embedded_id_id,embedded_id_issue,embedded_id_hangar_id,first_name,last_name,born_year,vote,won,rebel,committee_report,view_riksdagen_committee_decisions.rm,title,header as sub_title,end_number,upper(org) as org,created_date,public_date,ballot_id,decision_type,against_proposal_parties,against_proposal_number,winner,embedded_id_concern,ballot_type,label,vote_date,avg_born_year,total_votes,yes_votes,no_votes,abstain_votes,absent_votes,approved,no_winner,percentage_yes,percentage_no,percentage_absent,percentage_abstain,percentage_male,party_avg_born_year,party_total_votes,party_yes_votes,party_no_votes,party_abstain_votes,party_absent_votes,party_approved,party_no_winner,party_percentage_yes,party_percentage_no,party_percentage_absent,party_percentage_abstain,party_percentage_male from view_riksdagen_committee_decisions left join view_riksdagen_vote_data_ballot_politician_summary on ballot_id = embedded_id_ballot_id and view_riksdagen_committee_decisions.rm=view_riksdagen_vote_data_ballot_politician_summary.rm  and view_riksdagen_committee_decisions.embedded_id_issue_nummer::text=view_riksdagen_vote_data_ballot_politician_summary.embedded_id_issue where decision_type='röstning' and ballot_id is not null and embedded_id_ballot_id is not null</sql>

		<sql>create materialized view view_riksdagen_committee_decision_type_summary as select upper(decision_type) as embedded_id_decision_type,created_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),created_date order by created_date</sql>

		<sql>create materialized view view_riksdagen_committee_decision_type_org_summary as select upper(decision_type) as embedded_id_decision_type,upper(org) as embedded_id_org,created_date as embedded_id_decision_date,count(*) as total,sum( case when winner='utskottet' then 1 else 0 end) as committee_winner,sum( case when winner like'reservation%' then 1 else 0 end) as reservation_winner from view_riksdagen_committee_decisions group by upper(decision_type),created_date,upper(org)</sql>

	</changeSet>


	<changeSet author="pether" id="1414872417007-265">

		<dropView viewName="view_riksdagen_document_type_daily_summary" />
		<dropView viewName="view_riksdagen_politician_document_daily_summary" />
		<dropView viewName="view_riksdagen_party_document_daily_summary" />
		<dropView viewName="view_riksdagen_org_document_daily_summary" />
		<dropView viewName="view_riksdagen_politician_document" />

		<sql>create materialized view view_riksdagen_politician_document as select hjid as id,document_document_status_con_0 as doc_id,document_type,label,made_public_date,org,number_value,rm,status,sub_title,sub_type,temp_label,title,role_description,person_reference_id,reference_name,party_short_code,order_number from (select * from document_status_container left join document_data on document_status_container.document_document_status_con_0 = document_data.id) as e3 left join (select document_person_reference_da_0.hjid as id,role_description,person_reference_id,reference_name,party_short_code,order_number,document_person_reference_li_1 from document_person_reference_da_0 left join (select document_person_reference_co_0.hjid as person_id_ref from document_status_container left join document_person_reference_co_0 on document_status_container.hjid = document_person_reference_co_0.hjid) e2 on  document_person_reference_da_0.document_person_reference_li_1 = e2.person_id_ref) e4 on e3.document_person_reference_co_1 = e4.document_person_reference_li_1</sql>

		<sql>create materialized view view_riksdagen_document_type_daily_summary as select left(made_public_date,10) as embedded_id_public_date,document_type as embedded_id_document_type,count(*) as total from document_element group by left(made_public_date,10),document_type</sql>

		<sql>create materialized view view_riksdagen_politician_document_daily_summary as select made_public_date as embedded_id_public_date,person_reference_id as embedded_id_person_id,document_type as embedded_id_document_type,count(*) as total from view_riksdagen_politician_document group by made_public_date,document_type,person_reference_id</sql>

		<sql>create materialized view view_riksdagen_party_document_daily_summary as select made_public_date as embedded_id_public_date,party_short_code as embedded_id_party_short_code,document_type as embedded_id_document_type,count(distinct id) distinct_documents,count(distinct person_reference_id) as distinct_people,count(*) total from view_riksdagen_politician_document group by made_public_date,document_type,party_short_code;</sql>

		<sql>create materialized view view_riksdagen_org_document_daily_summary as select left(made_public_date,10) as embedded_id_public_date,org as embedded_id_org,document_type,count(*) as total from document_element group by left(made_public_date,10),document_type,org</sql>

	</changeSet>


	<changeSet author="pether" id="1414872417007-266">
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_politician_summary_index ON view_riksdagen_vote_data_ballot_politician_summary (embedded_id_intressent_id)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_politician_summary_daily_index ON view_riksdagen_vote_data_ballot_politician_summary_daily (embedded_id_intressent_id)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_politician_summary_weekly_index ON view_riksdagen_vote_data_ballot_politician_summary_weekly (embedded_id_intressent_id)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_politician_summary_monthly_index ON view_riksdagen_vote_data_ballot_politician_summary_monthly (embedded_id_intressent_id)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_politician_summary_annual_index ON view_riksdagen_vote_data_ballot_politician_summary_annual (embedded_id_intressent_id)</sql>

		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_party_summary_index ON view_riksdagen_vote_data_ballot_party_summary (embedded_id_party)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_party_summary_daily_index ON view_riksdagen_vote_data_ballot_party_summary_daily (embedded_id_party)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_party_summary_weekly_index ON view_riksdagen_vote_data_ballot_party_summary_weekly (embedded_id_party)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_party_summary_monthly_index ON view_riksdagen_vote_data_ballot_party_summary_monthly (embedded_id_party)</sql>
		<sql>CREATE INDEX view_riksdagen_vote_data_ballot_party_summary_annual_index ON view_riksdagen_vote_data_ballot_party_summary_annual (embedded_id_party)</sql>


		<sql>CREATE INDEX view_riksdagen_politician_document_index ON view_riksdagen_politician_document (person_reference_id)</sql>
		<sql>CREATE INDEX view_riksdagen_document_type_daily_summary_index ON view_riksdagen_document_type_daily_summary (embedded_id_document_type)</sql>
		<sql>CREATE INDEX view_riksdagen_politician_document_daily_summary_index ON view_riksdagen_politician_document_daily_summary (embedded_id_person_id)</sql>
		<sql>CREATE INDEX view_riksdagen_party_document_daily_summary_index ON view_riksdagen_party_document_daily_summary (embedded_id_party_short_code)</sql>
		<sql>CREATE INDEX view_riksdagen_org_document_daily_summary_index ON view_riksdagen_org_document_daily_summary (embedded_id_org)</sql>
	</changeSet>

</databaseChangeLog>
